// This file is @generated by prost-build.
/// Timestamp representation
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Timestamp {
    /// Represents seconds of UTC time since Unix epoch
    #[prost(int64, tag = "1")]
    pub seconds: i64,
    /// Non-negative fractions of a second at nanosecond resolution
    #[prost(int32, tag = "2")]
    pub nanos: i32,
}
/// Pagination request parameters
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PaginationRequest {
    /// Number of items to skip
    #[prost(int32, tag = "1")]
    pub offset: i32,
    /// Maximum number of items to return
    #[prost(int32, tag = "2")]
    pub limit: i32,
    /// Optional cursor for pagination
    #[prost(string, tag = "3")]
    pub cursor: ::prost::alloc::string::String,
}
/// Pagination response information
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PaginationResponse {
    /// Number of items to skip
    #[prost(int32, tag = "1")]
    pub offset: i32,
    /// Maximum number of items to return
    #[prost(int32, tag = "2")]
    pub limit: i32,
    /// Total number of items available
    #[prost(int32, tag = "3")]
    pub total_count: i32,
    /// Whether there are more items available
    #[prost(bool, tag = "4")]
    pub has_next: bool,
    /// Whether there are previous items available
    #[prost(bool, tag = "5")]
    pub has_previous: bool,
    /// Next cursor for pagination
    #[prost(string, tag = "6")]
    pub next_cursor: ::prost::alloc::string::String,
    /// Previous cursor for pagination
    #[prost(string, tag = "7")]
    pub prev_cursor: ::prost::alloc::string::String,
}
/// Legacy pagination information for API responses
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Pagination {
    /// Number of items to skip
    #[prost(int32, tag = "1")]
    pub offset: i32,
    /// Maximum number of items to return
    #[prost(int32, tag = "2")]
    pub limit: i32,
    /// Total number of items available
    #[prost(int32, tag = "3")]
    pub total_count: i32,
    /// Whether there are more items available
    #[prost(bool, tag = "4")]
    pub has_next: bool,
    /// Whether there are previous items available
    #[prost(bool, tag = "5")]
    pub has_previous: bool,
}
