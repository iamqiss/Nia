// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: services/drafts_service.proto

#include "services/drafts_service.pb.h"
#include "services/drafts_service.grpc.pb.h"

#include <functional>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/channel_interface.h>
#include <grpcpp/impl/client_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/rpc_service_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/sync_stream.h>
namespace sonet {
namespace drafts {
namespace v1 {

static const char* DraftsService_method_names[] = {
  "/sonet.drafts.v1.DraftsService/CreateDraft",
  "/sonet.drafts.v1.DraftsService/GetUserDrafts",
  "/sonet.drafts.v1.DraftsService/GetDraft",
  "/sonet.drafts.v1.DraftsService/UpdateDraft",
  "/sonet.drafts.v1.DraftsService/DeleteDraft",
  "/sonet.drafts.v1.DraftsService/AutoSaveDraft",
};

std::unique_ptr< DraftsService::Stub> DraftsService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< DraftsService::Stub> stub(new DraftsService::Stub(channel, options));
  return stub;
}

DraftsService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_CreateDraft_(DraftsService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetUserDrafts_(DraftsService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetDraft_(DraftsService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateDraft_(DraftsService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteDraft_(DraftsService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_AutoSaveDraft_(DraftsService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status DraftsService::Stub::CreateDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::CreateDraftRequest& request, ::sonet::drafts::v1::CreateDraftResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::sonet::drafts::v1::CreateDraftRequest, ::sonet::drafts::v1::CreateDraftResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateDraft_, context, request, response);
}

void DraftsService::Stub::async::CreateDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::CreateDraftRequest* request, ::sonet::drafts::v1::CreateDraftResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::sonet::drafts::v1::CreateDraftRequest, ::sonet::drafts::v1::CreateDraftResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateDraft_, context, request, response, std::move(f));
}

void DraftsService::Stub::async::CreateDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::CreateDraftRequest* request, ::sonet::drafts::v1::CreateDraftResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateDraft_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::CreateDraftResponse>* DraftsService::Stub::PrepareAsyncCreateDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::CreateDraftRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::sonet::drafts::v1::CreateDraftResponse, ::sonet::drafts::v1::CreateDraftRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateDraft_, context, request);
}

::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::CreateDraftResponse>* DraftsService::Stub::AsyncCreateDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::CreateDraftRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateDraftRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status DraftsService::Stub::GetUserDrafts(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetUserDraftsRequest& request, ::sonet::drafts::v1::GetUserDraftsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::sonet::drafts::v1::GetUserDraftsRequest, ::sonet::drafts::v1::GetUserDraftsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetUserDrafts_, context, request, response);
}

void DraftsService::Stub::async::GetUserDrafts(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetUserDraftsRequest* request, ::sonet::drafts::v1::GetUserDraftsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::sonet::drafts::v1::GetUserDraftsRequest, ::sonet::drafts::v1::GetUserDraftsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetUserDrafts_, context, request, response, std::move(f));
}

void DraftsService::Stub::async::GetUserDrafts(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetUserDraftsRequest* request, ::sonet::drafts::v1::GetUserDraftsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetUserDrafts_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::GetUserDraftsResponse>* DraftsService::Stub::PrepareAsyncGetUserDraftsRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetUserDraftsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::sonet::drafts::v1::GetUserDraftsResponse, ::sonet::drafts::v1::GetUserDraftsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetUserDrafts_, context, request);
}

::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::GetUserDraftsResponse>* DraftsService::Stub::AsyncGetUserDraftsRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetUserDraftsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetUserDraftsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status DraftsService::Stub::GetDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetDraftRequest& request, ::sonet::drafts::v1::GetDraftResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::sonet::drafts::v1::GetDraftRequest, ::sonet::drafts::v1::GetDraftResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetDraft_, context, request, response);
}

void DraftsService::Stub::async::GetDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetDraftRequest* request, ::sonet::drafts::v1::GetDraftResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::sonet::drafts::v1::GetDraftRequest, ::sonet::drafts::v1::GetDraftResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetDraft_, context, request, response, std::move(f));
}

void DraftsService::Stub::async::GetDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetDraftRequest* request, ::sonet::drafts::v1::GetDraftResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetDraft_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::GetDraftResponse>* DraftsService::Stub::PrepareAsyncGetDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetDraftRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::sonet::drafts::v1::GetDraftResponse, ::sonet::drafts::v1::GetDraftRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetDraft_, context, request);
}

::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::GetDraftResponse>* DraftsService::Stub::AsyncGetDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetDraftRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetDraftRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status DraftsService::Stub::UpdateDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::UpdateDraftRequest& request, ::sonet::drafts::v1::UpdateDraftResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::sonet::drafts::v1::UpdateDraftRequest, ::sonet::drafts::v1::UpdateDraftResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateDraft_, context, request, response);
}

void DraftsService::Stub::async::UpdateDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::UpdateDraftRequest* request, ::sonet::drafts::v1::UpdateDraftResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::sonet::drafts::v1::UpdateDraftRequest, ::sonet::drafts::v1::UpdateDraftResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateDraft_, context, request, response, std::move(f));
}

void DraftsService::Stub::async::UpdateDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::UpdateDraftRequest* request, ::sonet::drafts::v1::UpdateDraftResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateDraft_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::UpdateDraftResponse>* DraftsService::Stub::PrepareAsyncUpdateDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::UpdateDraftRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::sonet::drafts::v1::UpdateDraftResponse, ::sonet::drafts::v1::UpdateDraftRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateDraft_, context, request);
}

::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::UpdateDraftResponse>* DraftsService::Stub::AsyncUpdateDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::UpdateDraftRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateDraftRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status DraftsService::Stub::DeleteDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::DeleteDraftRequest& request, ::sonet::drafts::v1::DeleteDraftResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::sonet::drafts::v1::DeleteDraftRequest, ::sonet::drafts::v1::DeleteDraftResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteDraft_, context, request, response);
}

void DraftsService::Stub::async::DeleteDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::DeleteDraftRequest* request, ::sonet::drafts::v1::DeleteDraftResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::sonet::drafts::v1::DeleteDraftRequest, ::sonet::drafts::v1::DeleteDraftResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteDraft_, context, request, response, std::move(f));
}

void DraftsService::Stub::async::DeleteDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::DeleteDraftRequest* request, ::sonet::drafts::v1::DeleteDraftResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteDraft_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::DeleteDraftResponse>* DraftsService::Stub::PrepareAsyncDeleteDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::DeleteDraftRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::sonet::drafts::v1::DeleteDraftResponse, ::sonet::drafts::v1::DeleteDraftRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteDraft_, context, request);
}

::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::DeleteDraftResponse>* DraftsService::Stub::AsyncDeleteDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::DeleteDraftRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteDraftRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status DraftsService::Stub::AutoSaveDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::AutoSaveDraftRequest& request, ::sonet::drafts::v1::AutoSaveDraftResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::sonet::drafts::v1::AutoSaveDraftRequest, ::sonet::drafts::v1::AutoSaveDraftResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_AutoSaveDraft_, context, request, response);
}

void DraftsService::Stub::async::AutoSaveDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::AutoSaveDraftRequest* request, ::sonet::drafts::v1::AutoSaveDraftResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::sonet::drafts::v1::AutoSaveDraftRequest, ::sonet::drafts::v1::AutoSaveDraftResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_AutoSaveDraft_, context, request, response, std::move(f));
}

void DraftsService::Stub::async::AutoSaveDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::AutoSaveDraftRequest* request, ::sonet::drafts::v1::AutoSaveDraftResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_AutoSaveDraft_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::AutoSaveDraftResponse>* DraftsService::Stub::PrepareAsyncAutoSaveDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::AutoSaveDraftRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::sonet::drafts::v1::AutoSaveDraftResponse, ::sonet::drafts::v1::AutoSaveDraftRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_AutoSaveDraft_, context, request);
}

::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::AutoSaveDraftResponse>* DraftsService::Stub::AsyncAutoSaveDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::AutoSaveDraftRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncAutoSaveDraftRaw(context, request, cq);
  result->StartCall();
  return result;
}

DraftsService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DraftsService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DraftsService::Service, ::sonet::drafts::v1::CreateDraftRequest, ::sonet::drafts::v1::CreateDraftResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](DraftsService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::sonet::drafts::v1::CreateDraftRequest* req,
             ::sonet::drafts::v1::CreateDraftResponse* resp) {
               return service->CreateDraft(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DraftsService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DraftsService::Service, ::sonet::drafts::v1::GetUserDraftsRequest, ::sonet::drafts::v1::GetUserDraftsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](DraftsService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::sonet::drafts::v1::GetUserDraftsRequest* req,
             ::sonet::drafts::v1::GetUserDraftsResponse* resp) {
               return service->GetUserDrafts(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DraftsService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DraftsService::Service, ::sonet::drafts::v1::GetDraftRequest, ::sonet::drafts::v1::GetDraftResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](DraftsService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::sonet::drafts::v1::GetDraftRequest* req,
             ::sonet::drafts::v1::GetDraftResponse* resp) {
               return service->GetDraft(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DraftsService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DraftsService::Service, ::sonet::drafts::v1::UpdateDraftRequest, ::sonet::drafts::v1::UpdateDraftResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](DraftsService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::sonet::drafts::v1::UpdateDraftRequest* req,
             ::sonet::drafts::v1::UpdateDraftResponse* resp) {
               return service->UpdateDraft(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DraftsService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DraftsService::Service, ::sonet::drafts::v1::DeleteDraftRequest, ::sonet::drafts::v1::DeleteDraftResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](DraftsService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::sonet::drafts::v1::DeleteDraftRequest* req,
             ::sonet::drafts::v1::DeleteDraftResponse* resp) {
               return service->DeleteDraft(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      DraftsService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< DraftsService::Service, ::sonet::drafts::v1::AutoSaveDraftRequest, ::sonet::drafts::v1::AutoSaveDraftResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](DraftsService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::sonet::drafts::v1::AutoSaveDraftRequest* req,
             ::sonet::drafts::v1::AutoSaveDraftResponse* resp) {
               return service->AutoSaveDraft(ctx, req, resp);
             }, this)));
}

DraftsService::Service::~Service() {
}

::grpc::Status DraftsService::Service::CreateDraft(::grpc::ServerContext* context, const ::sonet::drafts::v1::CreateDraftRequest* request, ::sonet::drafts::v1::CreateDraftResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DraftsService::Service::GetUserDrafts(::grpc::ServerContext* context, const ::sonet::drafts::v1::GetUserDraftsRequest* request, ::sonet::drafts::v1::GetUserDraftsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DraftsService::Service::GetDraft(::grpc::ServerContext* context, const ::sonet::drafts::v1::GetDraftRequest* request, ::sonet::drafts::v1::GetDraftResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DraftsService::Service::UpdateDraft(::grpc::ServerContext* context, const ::sonet::drafts::v1::UpdateDraftRequest* request, ::sonet::drafts::v1::UpdateDraftResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DraftsService::Service::DeleteDraft(::grpc::ServerContext* context, const ::sonet::drafts::v1::DeleteDraftRequest* request, ::sonet::drafts::v1::DeleteDraftResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status DraftsService::Service::AutoSaveDraft(::grpc::ServerContext* context, const ::sonet::drafts::v1::AutoSaveDraftRequest* request, ::sonet::drafts::v1::AutoSaveDraftResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace sonet
}  // namespace drafts
}  // namespace v1

