// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: services/starterpack_service.proto
#ifndef GRPC_services_2fstarterpack_5fservice_2eproto__INCLUDED
#define GRPC_services_2fstarterpack_5fservice_2eproto__INCLUDED

#include "services/starterpack_service.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace sonet {
namespace starterpack {
namespace v1 {

// Starterpack Service
class StarterpackService final {
 public:
  static constexpr char const* service_full_name() {
    return "sonet.starterpack.v1.StarterpackService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Create a new starterpack
    virtual ::grpc::Status CreateStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::CreateStarterpackRequest& request, ::sonet::starterpack::v1::CreateStarterpackResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::CreateStarterpackResponse>> AsyncCreateStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::CreateStarterpackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::CreateStarterpackResponse>>(AsyncCreateStarterpackRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::CreateStarterpackResponse>> PrepareAsyncCreateStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::CreateStarterpackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::CreateStarterpackResponse>>(PrepareAsyncCreateStarterpackRaw(context, request, cq));
    }
    // Get a starterpack by ID
    virtual ::grpc::Status GetStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackRequest& request, ::sonet::starterpack::v1::GetStarterpackResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::GetStarterpackResponse>> AsyncGetStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::GetStarterpackResponse>>(AsyncGetStarterpackRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::GetStarterpackResponse>> PrepareAsyncGetStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::GetStarterpackResponse>>(PrepareAsyncGetStarterpackRaw(context, request, cq));
    }
    // Get starterpacks created by a user
    virtual ::grpc::Status GetUserStarterpacks(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetUserStarterpacksRequest& request, ::sonet::starterpack::v1::GetUserStarterpacksResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::GetUserStarterpacksResponse>> AsyncGetUserStarterpacks(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetUserStarterpacksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::GetUserStarterpacksResponse>>(AsyncGetUserStarterpacksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::GetUserStarterpacksResponse>> PrepareAsyncGetUserStarterpacks(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetUserStarterpacksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::GetUserStarterpacksResponse>>(PrepareAsyncGetUserStarterpacksRaw(context, request, cq));
    }
    // Update a starterpack
    virtual ::grpc::Status UpdateStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::UpdateStarterpackRequest& request, ::sonet::starterpack::v1::UpdateStarterpackResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::UpdateStarterpackResponse>> AsyncUpdateStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::UpdateStarterpackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::UpdateStarterpackResponse>>(AsyncUpdateStarterpackRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::UpdateStarterpackResponse>> PrepareAsyncUpdateStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::UpdateStarterpackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::UpdateStarterpackResponse>>(PrepareAsyncUpdateStarterpackRaw(context, request, cq));
    }
    // Delete a starterpack
    virtual ::grpc::Status DeleteStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::DeleteStarterpackRequest& request, ::sonet::starterpack::v1::DeleteStarterpackResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::DeleteStarterpackResponse>> AsyncDeleteStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::DeleteStarterpackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::DeleteStarterpackResponse>>(AsyncDeleteStarterpackRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::DeleteStarterpackResponse>> PrepareAsyncDeleteStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::DeleteStarterpackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::DeleteStarterpackResponse>>(PrepareAsyncDeleteStarterpackRaw(context, request, cq));
    }
    // Add an item to a starterpack
    virtual ::grpc::Status AddStarterpackItem(::grpc::ClientContext* context, const ::sonet::starterpack::v1::AddStarterpackItemRequest& request, ::sonet::starterpack::v1::AddStarterpackItemResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::AddStarterpackItemResponse>> AsyncAddStarterpackItem(::grpc::ClientContext* context, const ::sonet::starterpack::v1::AddStarterpackItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::AddStarterpackItemResponse>>(AsyncAddStarterpackItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::AddStarterpackItemResponse>> PrepareAsyncAddStarterpackItem(::grpc::ClientContext* context, const ::sonet::starterpack::v1::AddStarterpackItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::AddStarterpackItemResponse>>(PrepareAsyncAddStarterpackItemRaw(context, request, cq));
    }
    // Remove an item from a starterpack
    virtual ::grpc::Status RemoveStarterpackItem(::grpc::ClientContext* context, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest& request, ::sonet::starterpack::v1::RemoveStarterpackItemResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::RemoveStarterpackItemResponse>> AsyncRemoveStarterpackItem(::grpc::ClientContext* context, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::RemoveStarterpackItemResponse>>(AsyncRemoveStarterpackItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::RemoveStarterpackItemResponse>> PrepareAsyncRemoveStarterpackItem(::grpc::ClientContext* context, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::RemoveStarterpackItemResponse>>(PrepareAsyncRemoveStarterpackItemRaw(context, request, cq));
    }
    // Get starterpack items
    virtual ::grpc::Status GetStarterpackItems(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackItemsRequest& request, ::sonet::starterpack::v1::GetStarterpackItemsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::GetStarterpackItemsResponse>> AsyncGetStarterpackItems(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::GetStarterpackItemsResponse>>(AsyncGetStarterpackItemsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::GetStarterpackItemsResponse>> PrepareAsyncGetStarterpackItems(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::GetStarterpackItemsResponse>>(PrepareAsyncGetStarterpackItemsRaw(context, request, cq));
    }
    // Get suggested starterpacks for a user
    virtual ::grpc::Status GetSuggestedStarterpacks(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest& request, ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse>> AsyncGetSuggestedStarterpacks(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse>>(AsyncGetSuggestedStarterpacksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse>> PrepareAsyncGetSuggestedStarterpacks(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse>>(PrepareAsyncGetSuggestedStarterpacksRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Create a new starterpack
      virtual void CreateStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::CreateStarterpackRequest* request, ::sonet::starterpack::v1::CreateStarterpackResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::CreateStarterpackRequest* request, ::sonet::starterpack::v1::CreateStarterpackResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get a starterpack by ID
      virtual void GetStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackRequest* request, ::sonet::starterpack::v1::GetStarterpackResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackRequest* request, ::sonet::starterpack::v1::GetStarterpackResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get starterpacks created by a user
      virtual void GetUserStarterpacks(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetUserStarterpacksRequest* request, ::sonet::starterpack::v1::GetUserStarterpacksResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetUserStarterpacks(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetUserStarterpacksRequest* request, ::sonet::starterpack::v1::GetUserStarterpacksResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Update a starterpack
      virtual void UpdateStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::UpdateStarterpackRequest* request, ::sonet::starterpack::v1::UpdateStarterpackResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::UpdateStarterpackRequest* request, ::sonet::starterpack::v1::UpdateStarterpackResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Delete a starterpack
      virtual void DeleteStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::DeleteStarterpackRequest* request, ::sonet::starterpack::v1::DeleteStarterpackResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::DeleteStarterpackRequest* request, ::sonet::starterpack::v1::DeleteStarterpackResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Add an item to a starterpack
      virtual void AddStarterpackItem(::grpc::ClientContext* context, const ::sonet::starterpack::v1::AddStarterpackItemRequest* request, ::sonet::starterpack::v1::AddStarterpackItemResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddStarterpackItem(::grpc::ClientContext* context, const ::sonet::starterpack::v1::AddStarterpackItemRequest* request, ::sonet::starterpack::v1::AddStarterpackItemResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Remove an item from a starterpack
      virtual void RemoveStarterpackItem(::grpc::ClientContext* context, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest* request, ::sonet::starterpack::v1::RemoveStarterpackItemResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RemoveStarterpackItem(::grpc::ClientContext* context, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest* request, ::sonet::starterpack::v1::RemoveStarterpackItemResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get starterpack items
      virtual void GetStarterpackItems(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackItemsRequest* request, ::sonet::starterpack::v1::GetStarterpackItemsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetStarterpackItems(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackItemsRequest* request, ::sonet::starterpack::v1::GetStarterpackItemsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get suggested starterpacks for a user
      virtual void GetSuggestedStarterpacks(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest* request, ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetSuggestedStarterpacks(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest* request, ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::CreateStarterpackResponse>* AsyncCreateStarterpackRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::CreateStarterpackRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::CreateStarterpackResponse>* PrepareAsyncCreateStarterpackRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::CreateStarterpackRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::GetStarterpackResponse>* AsyncGetStarterpackRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::GetStarterpackResponse>* PrepareAsyncGetStarterpackRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::GetUserStarterpacksResponse>* AsyncGetUserStarterpacksRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetUserStarterpacksRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::GetUserStarterpacksResponse>* PrepareAsyncGetUserStarterpacksRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetUserStarterpacksRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::UpdateStarterpackResponse>* AsyncUpdateStarterpackRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::UpdateStarterpackRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::UpdateStarterpackResponse>* PrepareAsyncUpdateStarterpackRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::UpdateStarterpackRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::DeleteStarterpackResponse>* AsyncDeleteStarterpackRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::DeleteStarterpackRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::DeleteStarterpackResponse>* PrepareAsyncDeleteStarterpackRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::DeleteStarterpackRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::AddStarterpackItemResponse>* AsyncAddStarterpackItemRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::AddStarterpackItemRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::AddStarterpackItemResponse>* PrepareAsyncAddStarterpackItemRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::AddStarterpackItemRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::RemoveStarterpackItemResponse>* AsyncRemoveStarterpackItemRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::RemoveStarterpackItemResponse>* PrepareAsyncRemoveStarterpackItemRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::GetStarterpackItemsResponse>* AsyncGetStarterpackItemsRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackItemsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::GetStarterpackItemsResponse>* PrepareAsyncGetStarterpackItemsRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackItemsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse>* AsyncGetSuggestedStarterpacksRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse>* PrepareAsyncGetSuggestedStarterpacksRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status CreateStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::CreateStarterpackRequest& request, ::sonet::starterpack::v1::CreateStarterpackResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::CreateStarterpackResponse>> AsyncCreateStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::CreateStarterpackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::CreateStarterpackResponse>>(AsyncCreateStarterpackRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::CreateStarterpackResponse>> PrepareAsyncCreateStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::CreateStarterpackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::CreateStarterpackResponse>>(PrepareAsyncCreateStarterpackRaw(context, request, cq));
    }
    ::grpc::Status GetStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackRequest& request, ::sonet::starterpack::v1::GetStarterpackResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetStarterpackResponse>> AsyncGetStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetStarterpackResponse>>(AsyncGetStarterpackRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetStarterpackResponse>> PrepareAsyncGetStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetStarterpackResponse>>(PrepareAsyncGetStarterpackRaw(context, request, cq));
    }
    ::grpc::Status GetUserStarterpacks(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetUserStarterpacksRequest& request, ::sonet::starterpack::v1::GetUserStarterpacksResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetUserStarterpacksResponse>> AsyncGetUserStarterpacks(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetUserStarterpacksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetUserStarterpacksResponse>>(AsyncGetUserStarterpacksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetUserStarterpacksResponse>> PrepareAsyncGetUserStarterpacks(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetUserStarterpacksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetUserStarterpacksResponse>>(PrepareAsyncGetUserStarterpacksRaw(context, request, cq));
    }
    ::grpc::Status UpdateStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::UpdateStarterpackRequest& request, ::sonet::starterpack::v1::UpdateStarterpackResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::UpdateStarterpackResponse>> AsyncUpdateStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::UpdateStarterpackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::UpdateStarterpackResponse>>(AsyncUpdateStarterpackRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::UpdateStarterpackResponse>> PrepareAsyncUpdateStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::UpdateStarterpackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::UpdateStarterpackResponse>>(PrepareAsyncUpdateStarterpackRaw(context, request, cq));
    }
    ::grpc::Status DeleteStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::DeleteStarterpackRequest& request, ::sonet::starterpack::v1::DeleteStarterpackResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::DeleteStarterpackResponse>> AsyncDeleteStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::DeleteStarterpackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::DeleteStarterpackResponse>>(AsyncDeleteStarterpackRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::DeleteStarterpackResponse>> PrepareAsyncDeleteStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::DeleteStarterpackRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::DeleteStarterpackResponse>>(PrepareAsyncDeleteStarterpackRaw(context, request, cq));
    }
    ::grpc::Status AddStarterpackItem(::grpc::ClientContext* context, const ::sonet::starterpack::v1::AddStarterpackItemRequest& request, ::sonet::starterpack::v1::AddStarterpackItemResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::AddStarterpackItemResponse>> AsyncAddStarterpackItem(::grpc::ClientContext* context, const ::sonet::starterpack::v1::AddStarterpackItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::AddStarterpackItemResponse>>(AsyncAddStarterpackItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::AddStarterpackItemResponse>> PrepareAsyncAddStarterpackItem(::grpc::ClientContext* context, const ::sonet::starterpack::v1::AddStarterpackItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::AddStarterpackItemResponse>>(PrepareAsyncAddStarterpackItemRaw(context, request, cq));
    }
    ::grpc::Status RemoveStarterpackItem(::grpc::ClientContext* context, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest& request, ::sonet::starterpack::v1::RemoveStarterpackItemResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::RemoveStarterpackItemResponse>> AsyncRemoveStarterpackItem(::grpc::ClientContext* context, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::RemoveStarterpackItemResponse>>(AsyncRemoveStarterpackItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::RemoveStarterpackItemResponse>> PrepareAsyncRemoveStarterpackItem(::grpc::ClientContext* context, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::RemoveStarterpackItemResponse>>(PrepareAsyncRemoveStarterpackItemRaw(context, request, cq));
    }
    ::grpc::Status GetStarterpackItems(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackItemsRequest& request, ::sonet::starterpack::v1::GetStarterpackItemsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetStarterpackItemsResponse>> AsyncGetStarterpackItems(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetStarterpackItemsResponse>>(AsyncGetStarterpackItemsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetStarterpackItemsResponse>> PrepareAsyncGetStarterpackItems(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetStarterpackItemsResponse>>(PrepareAsyncGetStarterpackItemsRaw(context, request, cq));
    }
    ::grpc::Status GetSuggestedStarterpacks(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest& request, ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse>> AsyncGetSuggestedStarterpacks(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse>>(AsyncGetSuggestedStarterpacksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse>> PrepareAsyncGetSuggestedStarterpacks(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse>>(PrepareAsyncGetSuggestedStarterpacksRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void CreateStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::CreateStarterpackRequest* request, ::sonet::starterpack::v1::CreateStarterpackResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::CreateStarterpackRequest* request, ::sonet::starterpack::v1::CreateStarterpackResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackRequest* request, ::sonet::starterpack::v1::GetStarterpackResponse* response, std::function<void(::grpc::Status)>) override;
      void GetStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackRequest* request, ::sonet::starterpack::v1::GetStarterpackResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetUserStarterpacks(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetUserStarterpacksRequest* request, ::sonet::starterpack::v1::GetUserStarterpacksResponse* response, std::function<void(::grpc::Status)>) override;
      void GetUserStarterpacks(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetUserStarterpacksRequest* request, ::sonet::starterpack::v1::GetUserStarterpacksResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::UpdateStarterpackRequest* request, ::sonet::starterpack::v1::UpdateStarterpackResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::UpdateStarterpackRequest* request, ::sonet::starterpack::v1::UpdateStarterpackResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::DeleteStarterpackRequest* request, ::sonet::starterpack::v1::DeleteStarterpackResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::DeleteStarterpackRequest* request, ::sonet::starterpack::v1::DeleteStarterpackResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AddStarterpackItem(::grpc::ClientContext* context, const ::sonet::starterpack::v1::AddStarterpackItemRequest* request, ::sonet::starterpack::v1::AddStarterpackItemResponse* response, std::function<void(::grpc::Status)>) override;
      void AddStarterpackItem(::grpc::ClientContext* context, const ::sonet::starterpack::v1::AddStarterpackItemRequest* request, ::sonet::starterpack::v1::AddStarterpackItemResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RemoveStarterpackItem(::grpc::ClientContext* context, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest* request, ::sonet::starterpack::v1::RemoveStarterpackItemResponse* response, std::function<void(::grpc::Status)>) override;
      void RemoveStarterpackItem(::grpc::ClientContext* context, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest* request, ::sonet::starterpack::v1::RemoveStarterpackItemResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetStarterpackItems(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackItemsRequest* request, ::sonet::starterpack::v1::GetStarterpackItemsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetStarterpackItems(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackItemsRequest* request, ::sonet::starterpack::v1::GetStarterpackItemsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetSuggestedStarterpacks(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest* request, ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse* response, std::function<void(::grpc::Status)>) override;
      void GetSuggestedStarterpacks(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest* request, ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::CreateStarterpackResponse>* AsyncCreateStarterpackRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::CreateStarterpackRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::CreateStarterpackResponse>* PrepareAsyncCreateStarterpackRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::CreateStarterpackRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetStarterpackResponse>* AsyncGetStarterpackRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetStarterpackResponse>* PrepareAsyncGetStarterpackRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetUserStarterpacksResponse>* AsyncGetUserStarterpacksRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetUserStarterpacksRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetUserStarterpacksResponse>* PrepareAsyncGetUserStarterpacksRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetUserStarterpacksRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::UpdateStarterpackResponse>* AsyncUpdateStarterpackRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::UpdateStarterpackRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::UpdateStarterpackResponse>* PrepareAsyncUpdateStarterpackRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::UpdateStarterpackRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::DeleteStarterpackResponse>* AsyncDeleteStarterpackRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::DeleteStarterpackRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::DeleteStarterpackResponse>* PrepareAsyncDeleteStarterpackRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::DeleteStarterpackRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::AddStarterpackItemResponse>* AsyncAddStarterpackItemRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::AddStarterpackItemRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::AddStarterpackItemResponse>* PrepareAsyncAddStarterpackItemRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::AddStarterpackItemRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::RemoveStarterpackItemResponse>* AsyncRemoveStarterpackItemRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::RemoveStarterpackItemResponse>* PrepareAsyncRemoveStarterpackItemRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetStarterpackItemsResponse>* AsyncGetStarterpackItemsRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackItemsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetStarterpackItemsResponse>* PrepareAsyncGetStarterpackItemsRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackItemsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse>* AsyncGetSuggestedStarterpacksRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse>* PrepareAsyncGetSuggestedStarterpacksRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateStarterpack_;
    const ::grpc::internal::RpcMethod rpcmethod_GetStarterpack_;
    const ::grpc::internal::RpcMethod rpcmethod_GetUserStarterpacks_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateStarterpack_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteStarterpack_;
    const ::grpc::internal::RpcMethod rpcmethod_AddStarterpackItem_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveStarterpackItem_;
    const ::grpc::internal::RpcMethod rpcmethod_GetStarterpackItems_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSuggestedStarterpacks_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Create a new starterpack
    virtual ::grpc::Status CreateStarterpack(::grpc::ServerContext* context, const ::sonet::starterpack::v1::CreateStarterpackRequest* request, ::sonet::starterpack::v1::CreateStarterpackResponse* response);
    // Get a starterpack by ID
    virtual ::grpc::Status GetStarterpack(::grpc::ServerContext* context, const ::sonet::starterpack::v1::GetStarterpackRequest* request, ::sonet::starterpack::v1::GetStarterpackResponse* response);
    // Get starterpacks created by a user
    virtual ::grpc::Status GetUserStarterpacks(::grpc::ServerContext* context, const ::sonet::starterpack::v1::GetUserStarterpacksRequest* request, ::sonet::starterpack::v1::GetUserStarterpacksResponse* response);
    // Update a starterpack
    virtual ::grpc::Status UpdateStarterpack(::grpc::ServerContext* context, const ::sonet::starterpack::v1::UpdateStarterpackRequest* request, ::sonet::starterpack::v1::UpdateStarterpackResponse* response);
    // Delete a starterpack
    virtual ::grpc::Status DeleteStarterpack(::grpc::ServerContext* context, const ::sonet::starterpack::v1::DeleteStarterpackRequest* request, ::sonet::starterpack::v1::DeleteStarterpackResponse* response);
    // Add an item to a starterpack
    virtual ::grpc::Status AddStarterpackItem(::grpc::ServerContext* context, const ::sonet::starterpack::v1::AddStarterpackItemRequest* request, ::sonet::starterpack::v1::AddStarterpackItemResponse* response);
    // Remove an item from a starterpack
    virtual ::grpc::Status RemoveStarterpackItem(::grpc::ServerContext* context, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest* request, ::sonet::starterpack::v1::RemoveStarterpackItemResponse* response);
    // Get starterpack items
    virtual ::grpc::Status GetStarterpackItems(::grpc::ServerContext* context, const ::sonet::starterpack::v1::GetStarterpackItemsRequest* request, ::sonet::starterpack::v1::GetStarterpackItemsResponse* response);
    // Get suggested starterpacks for a user
    virtual ::grpc::Status GetSuggestedStarterpacks(::grpc::ServerContext* context, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest* request, ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateStarterpack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateStarterpack() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateStarterpack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateStarterpack(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::CreateStarterpackRequest* /*request*/, ::sonet::starterpack::v1::CreateStarterpackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateStarterpack(::grpc::ServerContext* context, ::sonet::starterpack::v1::CreateStarterpackRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::starterpack::v1::CreateStarterpackResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetStarterpack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetStarterpack() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetStarterpack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetStarterpack(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::GetStarterpackRequest* /*request*/, ::sonet::starterpack::v1::GetStarterpackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetStarterpack(::grpc::ServerContext* context, ::sonet::starterpack::v1::GetStarterpackRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::starterpack::v1::GetStarterpackResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetUserStarterpacks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetUserStarterpacks() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetUserStarterpacks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserStarterpacks(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::GetUserStarterpacksRequest* /*request*/, ::sonet::starterpack::v1::GetUserStarterpacksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUserStarterpacks(::grpc::ServerContext* context, ::sonet::starterpack::v1::GetUserStarterpacksRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::starterpack::v1::GetUserStarterpacksResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateStarterpack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateStarterpack() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_UpdateStarterpack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateStarterpack(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::UpdateStarterpackRequest* /*request*/, ::sonet::starterpack::v1::UpdateStarterpackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateStarterpack(::grpc::ServerContext* context, ::sonet::starterpack::v1::UpdateStarterpackRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::starterpack::v1::UpdateStarterpackResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteStarterpack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteStarterpack() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_DeleteStarterpack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteStarterpack(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::DeleteStarterpackRequest* /*request*/, ::sonet::starterpack::v1::DeleteStarterpackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteStarterpack(::grpc::ServerContext* context, ::sonet::starterpack::v1::DeleteStarterpackRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::starterpack::v1::DeleteStarterpackResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddStarterpackItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddStarterpackItem() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_AddStarterpackItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddStarterpackItem(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::AddStarterpackItemRequest* /*request*/, ::sonet::starterpack::v1::AddStarterpackItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddStarterpackItem(::grpc::ServerContext* context, ::sonet::starterpack::v1::AddStarterpackItemRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::starterpack::v1::AddStarterpackItemResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveStarterpackItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RemoveStarterpackItem() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_RemoveStarterpackItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveStarterpackItem(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest* /*request*/, ::sonet::starterpack::v1::RemoveStarterpackItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveStarterpackItem(::grpc::ServerContext* context, ::sonet::starterpack::v1::RemoveStarterpackItemRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::starterpack::v1::RemoveStarterpackItemResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetStarterpackItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetStarterpackItems() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_GetStarterpackItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetStarterpackItems(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::GetStarterpackItemsRequest* /*request*/, ::sonet::starterpack::v1::GetStarterpackItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetStarterpackItems(::grpc::ServerContext* context, ::sonet::starterpack::v1::GetStarterpackItemsRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::starterpack::v1::GetStarterpackItemsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSuggestedStarterpacks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetSuggestedStarterpacks() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_GetSuggestedStarterpacks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSuggestedStarterpacks(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest* /*request*/, ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSuggestedStarterpacks(::grpc::ServerContext* context, ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateStarterpack<WithAsyncMethod_GetStarterpack<WithAsyncMethod_GetUserStarterpacks<WithAsyncMethod_UpdateStarterpack<WithAsyncMethod_DeleteStarterpack<WithAsyncMethod_AddStarterpackItem<WithAsyncMethod_RemoveStarterpackItem<WithAsyncMethod_GetStarterpackItems<WithAsyncMethod_GetSuggestedStarterpacks<Service > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_CreateStarterpack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateStarterpack() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::starterpack::v1::CreateStarterpackRequest, ::sonet::starterpack::v1::CreateStarterpackResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::starterpack::v1::CreateStarterpackRequest* request, ::sonet::starterpack::v1::CreateStarterpackResponse* response) { return this->CreateStarterpack(context, request, response); }));}
    void SetMessageAllocatorFor_CreateStarterpack(
        ::grpc::MessageAllocator< ::sonet::starterpack::v1::CreateStarterpackRequest, ::sonet::starterpack::v1::CreateStarterpackResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::starterpack::v1::CreateStarterpackRequest, ::sonet::starterpack::v1::CreateStarterpackResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateStarterpack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateStarterpack(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::CreateStarterpackRequest* /*request*/, ::sonet::starterpack::v1::CreateStarterpackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateStarterpack(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::starterpack::v1::CreateStarterpackRequest* /*request*/, ::sonet::starterpack::v1::CreateStarterpackResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetStarterpack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetStarterpack() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::starterpack::v1::GetStarterpackRequest, ::sonet::starterpack::v1::GetStarterpackResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::starterpack::v1::GetStarterpackRequest* request, ::sonet::starterpack::v1::GetStarterpackResponse* response) { return this->GetStarterpack(context, request, response); }));}
    void SetMessageAllocatorFor_GetStarterpack(
        ::grpc::MessageAllocator< ::sonet::starterpack::v1::GetStarterpackRequest, ::sonet::starterpack::v1::GetStarterpackResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::starterpack::v1::GetStarterpackRequest, ::sonet::starterpack::v1::GetStarterpackResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetStarterpack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetStarterpack(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::GetStarterpackRequest* /*request*/, ::sonet::starterpack::v1::GetStarterpackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetStarterpack(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::starterpack::v1::GetStarterpackRequest* /*request*/, ::sonet::starterpack::v1::GetStarterpackResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetUserStarterpacks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetUserStarterpacks() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::starterpack::v1::GetUserStarterpacksRequest, ::sonet::starterpack::v1::GetUserStarterpacksResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::starterpack::v1::GetUserStarterpacksRequest* request, ::sonet::starterpack::v1::GetUserStarterpacksResponse* response) { return this->GetUserStarterpacks(context, request, response); }));}
    void SetMessageAllocatorFor_GetUserStarterpacks(
        ::grpc::MessageAllocator< ::sonet::starterpack::v1::GetUserStarterpacksRequest, ::sonet::starterpack::v1::GetUserStarterpacksResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::starterpack::v1::GetUserStarterpacksRequest, ::sonet::starterpack::v1::GetUserStarterpacksResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetUserStarterpacks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserStarterpacks(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::GetUserStarterpacksRequest* /*request*/, ::sonet::starterpack::v1::GetUserStarterpacksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUserStarterpacks(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::starterpack::v1::GetUserStarterpacksRequest* /*request*/, ::sonet::starterpack::v1::GetUserStarterpacksResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateStarterpack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateStarterpack() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::starterpack::v1::UpdateStarterpackRequest, ::sonet::starterpack::v1::UpdateStarterpackResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::starterpack::v1::UpdateStarterpackRequest* request, ::sonet::starterpack::v1::UpdateStarterpackResponse* response) { return this->UpdateStarterpack(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateStarterpack(
        ::grpc::MessageAllocator< ::sonet::starterpack::v1::UpdateStarterpackRequest, ::sonet::starterpack::v1::UpdateStarterpackResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::starterpack::v1::UpdateStarterpackRequest, ::sonet::starterpack::v1::UpdateStarterpackResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateStarterpack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateStarterpack(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::UpdateStarterpackRequest* /*request*/, ::sonet::starterpack::v1::UpdateStarterpackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateStarterpack(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::starterpack::v1::UpdateStarterpackRequest* /*request*/, ::sonet::starterpack::v1::UpdateStarterpackResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteStarterpack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteStarterpack() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::starterpack::v1::DeleteStarterpackRequest, ::sonet::starterpack::v1::DeleteStarterpackResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::starterpack::v1::DeleteStarterpackRequest* request, ::sonet::starterpack::v1::DeleteStarterpackResponse* response) { return this->DeleteStarterpack(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteStarterpack(
        ::grpc::MessageAllocator< ::sonet::starterpack::v1::DeleteStarterpackRequest, ::sonet::starterpack::v1::DeleteStarterpackResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::starterpack::v1::DeleteStarterpackRequest, ::sonet::starterpack::v1::DeleteStarterpackResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteStarterpack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteStarterpack(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::DeleteStarterpackRequest* /*request*/, ::sonet::starterpack::v1::DeleteStarterpackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteStarterpack(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::starterpack::v1::DeleteStarterpackRequest* /*request*/, ::sonet::starterpack::v1::DeleteStarterpackResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AddStarterpackItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddStarterpackItem() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::starterpack::v1::AddStarterpackItemRequest, ::sonet::starterpack::v1::AddStarterpackItemResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::starterpack::v1::AddStarterpackItemRequest* request, ::sonet::starterpack::v1::AddStarterpackItemResponse* response) { return this->AddStarterpackItem(context, request, response); }));}
    void SetMessageAllocatorFor_AddStarterpackItem(
        ::grpc::MessageAllocator< ::sonet::starterpack::v1::AddStarterpackItemRequest, ::sonet::starterpack::v1::AddStarterpackItemResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::starterpack::v1::AddStarterpackItemRequest, ::sonet::starterpack::v1::AddStarterpackItemResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddStarterpackItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddStarterpackItem(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::AddStarterpackItemRequest* /*request*/, ::sonet::starterpack::v1::AddStarterpackItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddStarterpackItem(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::starterpack::v1::AddStarterpackItemRequest* /*request*/, ::sonet::starterpack::v1::AddStarterpackItemResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RemoveStarterpackItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RemoveStarterpackItem() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::starterpack::v1::RemoveStarterpackItemRequest, ::sonet::starterpack::v1::RemoveStarterpackItemResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest* request, ::sonet::starterpack::v1::RemoveStarterpackItemResponse* response) { return this->RemoveStarterpackItem(context, request, response); }));}
    void SetMessageAllocatorFor_RemoveStarterpackItem(
        ::grpc::MessageAllocator< ::sonet::starterpack::v1::RemoveStarterpackItemRequest, ::sonet::starterpack::v1::RemoveStarterpackItemResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::starterpack::v1::RemoveStarterpackItemRequest, ::sonet::starterpack::v1::RemoveStarterpackItemResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RemoveStarterpackItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveStarterpackItem(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest* /*request*/, ::sonet::starterpack::v1::RemoveStarterpackItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveStarterpackItem(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest* /*request*/, ::sonet::starterpack::v1::RemoveStarterpackItemResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetStarterpackItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetStarterpackItems() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::starterpack::v1::GetStarterpackItemsRequest, ::sonet::starterpack::v1::GetStarterpackItemsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::starterpack::v1::GetStarterpackItemsRequest* request, ::sonet::starterpack::v1::GetStarterpackItemsResponse* response) { return this->GetStarterpackItems(context, request, response); }));}
    void SetMessageAllocatorFor_GetStarterpackItems(
        ::grpc::MessageAllocator< ::sonet::starterpack::v1::GetStarterpackItemsRequest, ::sonet::starterpack::v1::GetStarterpackItemsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::starterpack::v1::GetStarterpackItemsRequest, ::sonet::starterpack::v1::GetStarterpackItemsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetStarterpackItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetStarterpackItems(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::GetStarterpackItemsRequest* /*request*/, ::sonet::starterpack::v1::GetStarterpackItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetStarterpackItems(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::starterpack::v1::GetStarterpackItemsRequest* /*request*/, ::sonet::starterpack::v1::GetStarterpackItemsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetSuggestedStarterpacks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetSuggestedStarterpacks() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest, ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest* request, ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse* response) { return this->GetSuggestedStarterpacks(context, request, response); }));}
    void SetMessageAllocatorFor_GetSuggestedStarterpacks(
        ::grpc::MessageAllocator< ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest, ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest, ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetSuggestedStarterpacks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSuggestedStarterpacks(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest* /*request*/, ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSuggestedStarterpacks(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest* /*request*/, ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_CreateStarterpack<WithCallbackMethod_GetStarterpack<WithCallbackMethod_GetUserStarterpacks<WithCallbackMethod_UpdateStarterpack<WithCallbackMethod_DeleteStarterpack<WithCallbackMethod_AddStarterpackItem<WithCallbackMethod_RemoveStarterpackItem<WithCallbackMethod_GetStarterpackItems<WithCallbackMethod_GetSuggestedStarterpacks<Service > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateStarterpack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateStarterpack() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateStarterpack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateStarterpack(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::CreateStarterpackRequest* /*request*/, ::sonet::starterpack::v1::CreateStarterpackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetStarterpack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetStarterpack() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetStarterpack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetStarterpack(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::GetStarterpackRequest* /*request*/, ::sonet::starterpack::v1::GetStarterpackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetUserStarterpacks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetUserStarterpacks() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetUserStarterpacks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserStarterpacks(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::GetUserStarterpacksRequest* /*request*/, ::sonet::starterpack::v1::GetUserStarterpacksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateStarterpack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateStarterpack() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_UpdateStarterpack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateStarterpack(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::UpdateStarterpackRequest* /*request*/, ::sonet::starterpack::v1::UpdateStarterpackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteStarterpack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteStarterpack() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_DeleteStarterpack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteStarterpack(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::DeleteStarterpackRequest* /*request*/, ::sonet::starterpack::v1::DeleteStarterpackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddStarterpackItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddStarterpackItem() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_AddStarterpackItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddStarterpackItem(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::AddStarterpackItemRequest* /*request*/, ::sonet::starterpack::v1::AddStarterpackItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveStarterpackItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RemoveStarterpackItem() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_RemoveStarterpackItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveStarterpackItem(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest* /*request*/, ::sonet::starterpack::v1::RemoveStarterpackItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetStarterpackItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetStarterpackItems() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_GetStarterpackItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetStarterpackItems(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::GetStarterpackItemsRequest* /*request*/, ::sonet::starterpack::v1::GetStarterpackItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSuggestedStarterpacks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetSuggestedStarterpacks() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_GetSuggestedStarterpacks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSuggestedStarterpacks(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest* /*request*/, ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateStarterpack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateStarterpack() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateStarterpack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateStarterpack(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::CreateStarterpackRequest* /*request*/, ::sonet::starterpack::v1::CreateStarterpackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateStarterpack(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetStarterpack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetStarterpack() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetStarterpack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetStarterpack(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::GetStarterpackRequest* /*request*/, ::sonet::starterpack::v1::GetStarterpackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetStarterpack(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetUserStarterpacks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetUserStarterpacks() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetUserStarterpacks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserStarterpacks(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::GetUserStarterpacksRequest* /*request*/, ::sonet::starterpack::v1::GetUserStarterpacksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUserStarterpacks(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateStarterpack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateStarterpack() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_UpdateStarterpack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateStarterpack(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::UpdateStarterpackRequest* /*request*/, ::sonet::starterpack::v1::UpdateStarterpackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateStarterpack(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteStarterpack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteStarterpack() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_DeleteStarterpack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteStarterpack(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::DeleteStarterpackRequest* /*request*/, ::sonet::starterpack::v1::DeleteStarterpackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteStarterpack(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddStarterpackItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddStarterpackItem() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_AddStarterpackItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddStarterpackItem(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::AddStarterpackItemRequest* /*request*/, ::sonet::starterpack::v1::AddStarterpackItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddStarterpackItem(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RemoveStarterpackItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RemoveStarterpackItem() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_RemoveStarterpackItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveStarterpackItem(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest* /*request*/, ::sonet::starterpack::v1::RemoveStarterpackItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveStarterpackItem(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetStarterpackItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetStarterpackItems() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_GetStarterpackItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetStarterpackItems(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::GetStarterpackItemsRequest* /*request*/, ::sonet::starterpack::v1::GetStarterpackItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetStarterpackItems(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetSuggestedStarterpacks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetSuggestedStarterpacks() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_GetSuggestedStarterpacks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSuggestedStarterpacks(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest* /*request*/, ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSuggestedStarterpacks(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateStarterpack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateStarterpack() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateStarterpack(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateStarterpack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateStarterpack(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::CreateStarterpackRequest* /*request*/, ::sonet::starterpack::v1::CreateStarterpackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateStarterpack(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetStarterpack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetStarterpack() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetStarterpack(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetStarterpack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetStarterpack(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::GetStarterpackRequest* /*request*/, ::sonet::starterpack::v1::GetStarterpackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetStarterpack(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetUserStarterpacks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetUserStarterpacks() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetUserStarterpacks(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetUserStarterpacks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserStarterpacks(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::GetUserStarterpacksRequest* /*request*/, ::sonet::starterpack::v1::GetUserStarterpacksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUserStarterpacks(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateStarterpack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateStarterpack() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateStarterpack(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateStarterpack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateStarterpack(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::UpdateStarterpackRequest* /*request*/, ::sonet::starterpack::v1::UpdateStarterpackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateStarterpack(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteStarterpack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteStarterpack() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteStarterpack(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteStarterpack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteStarterpack(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::DeleteStarterpackRequest* /*request*/, ::sonet::starterpack::v1::DeleteStarterpackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteStarterpack(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddStarterpackItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddStarterpackItem() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddStarterpackItem(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddStarterpackItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddStarterpackItem(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::AddStarterpackItemRequest* /*request*/, ::sonet::starterpack::v1::AddStarterpackItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddStarterpackItem(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RemoveStarterpackItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RemoveStarterpackItem() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RemoveStarterpackItem(context, request, response); }));
    }
    ~WithRawCallbackMethod_RemoveStarterpackItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveStarterpackItem(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest* /*request*/, ::sonet::starterpack::v1::RemoveStarterpackItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveStarterpackItem(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetStarterpackItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetStarterpackItems() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetStarterpackItems(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetStarterpackItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetStarterpackItems(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::GetStarterpackItemsRequest* /*request*/, ::sonet::starterpack::v1::GetStarterpackItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetStarterpackItems(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetSuggestedStarterpacks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetSuggestedStarterpacks() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetSuggestedStarterpacks(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetSuggestedStarterpacks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSuggestedStarterpacks(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest* /*request*/, ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSuggestedStarterpacks(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateStarterpack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateStarterpack() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::starterpack::v1::CreateStarterpackRequest, ::sonet::starterpack::v1::CreateStarterpackResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::starterpack::v1::CreateStarterpackRequest, ::sonet::starterpack::v1::CreateStarterpackResponse>* streamer) {
                       return this->StreamedCreateStarterpack(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateStarterpack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateStarterpack(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::CreateStarterpackRequest* /*request*/, ::sonet::starterpack::v1::CreateStarterpackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateStarterpack(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::starterpack::v1::CreateStarterpackRequest,::sonet::starterpack::v1::CreateStarterpackResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetStarterpack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetStarterpack() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::starterpack::v1::GetStarterpackRequest, ::sonet::starterpack::v1::GetStarterpackResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::starterpack::v1::GetStarterpackRequest, ::sonet::starterpack::v1::GetStarterpackResponse>* streamer) {
                       return this->StreamedGetStarterpack(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetStarterpack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetStarterpack(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::GetStarterpackRequest* /*request*/, ::sonet::starterpack::v1::GetStarterpackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetStarterpack(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::starterpack::v1::GetStarterpackRequest,::sonet::starterpack::v1::GetStarterpackResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetUserStarterpacks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetUserStarterpacks() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::starterpack::v1::GetUserStarterpacksRequest, ::sonet::starterpack::v1::GetUserStarterpacksResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::starterpack::v1::GetUserStarterpacksRequest, ::sonet::starterpack::v1::GetUserStarterpacksResponse>* streamer) {
                       return this->StreamedGetUserStarterpacks(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetUserStarterpacks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetUserStarterpacks(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::GetUserStarterpacksRequest* /*request*/, ::sonet::starterpack::v1::GetUserStarterpacksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetUserStarterpacks(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::starterpack::v1::GetUserStarterpacksRequest,::sonet::starterpack::v1::GetUserStarterpacksResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateStarterpack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateStarterpack() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::starterpack::v1::UpdateStarterpackRequest, ::sonet::starterpack::v1::UpdateStarterpackResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::starterpack::v1::UpdateStarterpackRequest, ::sonet::starterpack::v1::UpdateStarterpackResponse>* streamer) {
                       return this->StreamedUpdateStarterpack(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateStarterpack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateStarterpack(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::UpdateStarterpackRequest* /*request*/, ::sonet::starterpack::v1::UpdateStarterpackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateStarterpack(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::starterpack::v1::UpdateStarterpackRequest,::sonet::starterpack::v1::UpdateStarterpackResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteStarterpack : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteStarterpack() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::starterpack::v1::DeleteStarterpackRequest, ::sonet::starterpack::v1::DeleteStarterpackResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::starterpack::v1::DeleteStarterpackRequest, ::sonet::starterpack::v1::DeleteStarterpackResponse>* streamer) {
                       return this->StreamedDeleteStarterpack(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteStarterpack() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteStarterpack(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::DeleteStarterpackRequest* /*request*/, ::sonet::starterpack::v1::DeleteStarterpackResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteStarterpack(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::starterpack::v1::DeleteStarterpackRequest,::sonet::starterpack::v1::DeleteStarterpackResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddStarterpackItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddStarterpackItem() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::starterpack::v1::AddStarterpackItemRequest, ::sonet::starterpack::v1::AddStarterpackItemResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::starterpack::v1::AddStarterpackItemRequest, ::sonet::starterpack::v1::AddStarterpackItemResponse>* streamer) {
                       return this->StreamedAddStarterpackItem(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddStarterpackItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddStarterpackItem(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::AddStarterpackItemRequest* /*request*/, ::sonet::starterpack::v1::AddStarterpackItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddStarterpackItem(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::starterpack::v1::AddStarterpackItemRequest,::sonet::starterpack::v1::AddStarterpackItemResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveStarterpackItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RemoveStarterpackItem() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::starterpack::v1::RemoveStarterpackItemRequest, ::sonet::starterpack::v1::RemoveStarterpackItemResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::starterpack::v1::RemoveStarterpackItemRequest, ::sonet::starterpack::v1::RemoveStarterpackItemResponse>* streamer) {
                       return this->StreamedRemoveStarterpackItem(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RemoveStarterpackItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveStarterpackItem(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest* /*request*/, ::sonet::starterpack::v1::RemoveStarterpackItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveStarterpackItem(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::starterpack::v1::RemoveStarterpackItemRequest,::sonet::starterpack::v1::RemoveStarterpackItemResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetStarterpackItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetStarterpackItems() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::starterpack::v1::GetStarterpackItemsRequest, ::sonet::starterpack::v1::GetStarterpackItemsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::starterpack::v1::GetStarterpackItemsRequest, ::sonet::starterpack::v1::GetStarterpackItemsResponse>* streamer) {
                       return this->StreamedGetStarterpackItems(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetStarterpackItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetStarterpackItems(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::GetStarterpackItemsRequest* /*request*/, ::sonet::starterpack::v1::GetStarterpackItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetStarterpackItems(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::starterpack::v1::GetStarterpackItemsRequest,::sonet::starterpack::v1::GetStarterpackItemsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetSuggestedStarterpacks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetSuggestedStarterpacks() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest, ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest, ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse>* streamer) {
                       return this->StreamedGetSuggestedStarterpacks(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetSuggestedStarterpacks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSuggestedStarterpacks(::grpc::ServerContext* /*context*/, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest* /*request*/, ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetSuggestedStarterpacks(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest,::sonet::starterpack::v1::GetSuggestedStarterpacksResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateStarterpack<WithStreamedUnaryMethod_GetStarterpack<WithStreamedUnaryMethod_GetUserStarterpacks<WithStreamedUnaryMethod_UpdateStarterpack<WithStreamedUnaryMethod_DeleteStarterpack<WithStreamedUnaryMethod_AddStarterpackItem<WithStreamedUnaryMethod_RemoveStarterpackItem<WithStreamedUnaryMethod_GetStarterpackItems<WithStreamedUnaryMethod_GetSuggestedStarterpacks<Service > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateStarterpack<WithStreamedUnaryMethod_GetStarterpack<WithStreamedUnaryMethod_GetUserStarterpacks<WithStreamedUnaryMethod_UpdateStarterpack<WithStreamedUnaryMethod_DeleteStarterpack<WithStreamedUnaryMethod_AddStarterpackItem<WithStreamedUnaryMethod_RemoveStarterpackItem<WithStreamedUnaryMethod_GetStarterpackItems<WithStreamedUnaryMethod_GetSuggestedStarterpacks<Service > > > > > > > > > StreamedService;
};

}  // namespace v1
}  // namespace starterpack
}  // namespace sonet


#endif  // GRPC_services_2fstarterpack_5fservice_2eproto__INCLUDED
