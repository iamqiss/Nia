// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: services/messaging.proto
// Original file comments:
//
// Copyright (c) 2025 Neo Qiss
// All rights reserved.
// 
// This software is proprietary and confidential.
// Unauthorized copying, distribution, or use is strictly prohibited.
//
#ifndef GRPC_services_2fmessaging_2eproto__INCLUDED
#define GRPC_services_2fmessaging_2eproto__INCLUDED

#include "services/messaging.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace sonet {
namespace messaging {

// Messaging service
class MessagingService final {
 public:
  static constexpr char const* service_full_name() {
    return "sonet.messaging.MessagingService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Message operations
    virtual ::grpc::Status SendMessage(::grpc::ClientContext* context, const ::sonet::messaging::SendMessageRequest& request, ::sonet::messaging::SendMessageResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::SendMessageResponse>> AsyncSendMessage(::grpc::ClientContext* context, const ::sonet::messaging::SendMessageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::SendMessageResponse>>(AsyncSendMessageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::SendMessageResponse>> PrepareAsyncSendMessage(::grpc::ClientContext* context, const ::sonet::messaging::SendMessageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::SendMessageResponse>>(PrepareAsyncSendMessageRaw(context, request, cq));
    }
    virtual ::grpc::Status GetMessages(::grpc::ClientContext* context, const ::sonet::messaging::GetMessagesRequest& request, ::sonet::messaging::GetMessagesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::GetMessagesResponse>> AsyncGetMessages(::grpc::ClientContext* context, const ::sonet::messaging::GetMessagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::GetMessagesResponse>>(AsyncGetMessagesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::GetMessagesResponse>> PrepareAsyncGetMessages(::grpc::ClientContext* context, const ::sonet::messaging::GetMessagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::GetMessagesResponse>>(PrepareAsyncGetMessagesRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateMessageStatus(::grpc::ClientContext* context, const ::sonet::messaging::UpdateMessageStatusRequest& request, ::sonet::messaging::UpdateMessageStatusResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::UpdateMessageStatusResponse>> AsyncUpdateMessageStatus(::grpc::ClientContext* context, const ::sonet::messaging::UpdateMessageStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::UpdateMessageStatusResponse>>(AsyncUpdateMessageStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::UpdateMessageStatusResponse>> PrepareAsyncUpdateMessageStatus(::grpc::ClientContext* context, const ::sonet::messaging::UpdateMessageStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::UpdateMessageStatusResponse>>(PrepareAsyncUpdateMessageStatusRaw(context, request, cq));
    }
    virtual ::grpc::Status SearchMessages(::grpc::ClientContext* context, const ::sonet::messaging::SearchMessagesRequest& request, ::sonet::messaging::SearchMessagesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::SearchMessagesResponse>> AsyncSearchMessages(::grpc::ClientContext* context, const ::sonet::messaging::SearchMessagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::SearchMessagesResponse>>(AsyncSearchMessagesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::SearchMessagesResponse>> PrepareAsyncSearchMessages(::grpc::ClientContext* context, const ::sonet::messaging::SearchMessagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::SearchMessagesResponse>>(PrepareAsyncSearchMessagesRaw(context, request, cq));
    }
    // Chat operations
    virtual ::grpc::Status CreateChat(::grpc::ClientContext* context, const ::sonet::messaging::CreateChatRequest& request, ::sonet::messaging::CreateChatResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::CreateChatResponse>> AsyncCreateChat(::grpc::ClientContext* context, const ::sonet::messaging::CreateChatRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::CreateChatResponse>>(AsyncCreateChatRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::CreateChatResponse>> PrepareAsyncCreateChat(::grpc::ClientContext* context, const ::sonet::messaging::CreateChatRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::CreateChatResponse>>(PrepareAsyncCreateChatRaw(context, request, cq));
    }
    virtual ::grpc::Status GetChats(::grpc::ClientContext* context, const ::sonet::messaging::GetChatsRequest& request, ::sonet::messaging::GetChatsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::GetChatsResponse>> AsyncGetChats(::grpc::ClientContext* context, const ::sonet::messaging::GetChatsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::GetChatsResponse>>(AsyncGetChatsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::GetChatsResponse>> PrepareAsyncGetChats(::grpc::ClientContext* context, const ::sonet::messaging::GetChatsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::GetChatsResponse>>(PrepareAsyncGetChatsRaw(context, request, cq));
    }
    // Attachment operations
    virtual ::grpc::Status UploadAttachment(::grpc::ClientContext* context, const ::sonet::messaging::UploadAttachmentRequest& request, ::sonet::messaging::UploadAttachmentResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::UploadAttachmentResponse>> AsyncUploadAttachment(::grpc::ClientContext* context, const ::sonet::messaging::UploadAttachmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::UploadAttachmentResponse>>(AsyncUploadAttachmentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::UploadAttachmentResponse>> PrepareAsyncUploadAttachment(::grpc::ClientContext* context, const ::sonet::messaging::UploadAttachmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::UploadAttachmentResponse>>(PrepareAsyncUploadAttachmentRaw(context, request, cq));
    }
    // Real-time operations
    virtual ::grpc::Status SetTyping(::grpc::ClientContext* context, const ::sonet::messaging::SetTypingRequest& request, ::sonet::messaging::SetTypingResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::SetTypingResponse>> AsyncSetTyping(::grpc::ClientContext* context, const ::sonet::messaging::SetTypingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::SetTypingResponse>>(AsyncSetTypingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::SetTypingResponse>> PrepareAsyncSetTyping(::grpc::ClientContext* context, const ::sonet::messaging::SetTypingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::SetTypingResponse>>(PrepareAsyncSetTypingRaw(context, request, cq));
    }
    // Streaming endpoints
    std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::sonet::messaging::WebSocketMessage, ::sonet::messaging::WebSocketMessage>> StreamMessages(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriterInterface< ::sonet::messaging::WebSocketMessage, ::sonet::messaging::WebSocketMessage>>(StreamMessagesRaw(context));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::sonet::messaging::WebSocketMessage, ::sonet::messaging::WebSocketMessage>> AsyncStreamMessages(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::sonet::messaging::WebSocketMessage, ::sonet::messaging::WebSocketMessage>>(AsyncStreamMessagesRaw(context, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::sonet::messaging::WebSocketMessage, ::sonet::messaging::WebSocketMessage>> PrepareAsyncStreamMessages(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriterInterface< ::sonet::messaging::WebSocketMessage, ::sonet::messaging::WebSocketMessage>>(PrepareAsyncStreamMessagesRaw(context, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Message operations
      virtual void SendMessage(::grpc::ClientContext* context, const ::sonet::messaging::SendMessageRequest* request, ::sonet::messaging::SendMessageResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendMessage(::grpc::ClientContext* context, const ::sonet::messaging::SendMessageRequest* request, ::sonet::messaging::SendMessageResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetMessages(::grpc::ClientContext* context, const ::sonet::messaging::GetMessagesRequest* request, ::sonet::messaging::GetMessagesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetMessages(::grpc::ClientContext* context, const ::sonet::messaging::GetMessagesRequest* request, ::sonet::messaging::GetMessagesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateMessageStatus(::grpc::ClientContext* context, const ::sonet::messaging::UpdateMessageStatusRequest* request, ::sonet::messaging::UpdateMessageStatusResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateMessageStatus(::grpc::ClientContext* context, const ::sonet::messaging::UpdateMessageStatusRequest* request, ::sonet::messaging::UpdateMessageStatusResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SearchMessages(::grpc::ClientContext* context, const ::sonet::messaging::SearchMessagesRequest* request, ::sonet::messaging::SearchMessagesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SearchMessages(::grpc::ClientContext* context, const ::sonet::messaging::SearchMessagesRequest* request, ::sonet::messaging::SearchMessagesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Chat operations
      virtual void CreateChat(::grpc::ClientContext* context, const ::sonet::messaging::CreateChatRequest* request, ::sonet::messaging::CreateChatResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateChat(::grpc::ClientContext* context, const ::sonet::messaging::CreateChatRequest* request, ::sonet::messaging::CreateChatResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetChats(::grpc::ClientContext* context, const ::sonet::messaging::GetChatsRequest* request, ::sonet::messaging::GetChatsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetChats(::grpc::ClientContext* context, const ::sonet::messaging::GetChatsRequest* request, ::sonet::messaging::GetChatsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Attachment operations
      virtual void UploadAttachment(::grpc::ClientContext* context, const ::sonet::messaging::UploadAttachmentRequest* request, ::sonet::messaging::UploadAttachmentResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UploadAttachment(::grpc::ClientContext* context, const ::sonet::messaging::UploadAttachmentRequest* request, ::sonet::messaging::UploadAttachmentResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Real-time operations
      virtual void SetTyping(::grpc::ClientContext* context, const ::sonet::messaging::SetTypingRequest* request, ::sonet::messaging::SetTypingResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetTyping(::grpc::ClientContext* context, const ::sonet::messaging::SetTypingRequest* request, ::sonet::messaging::SetTypingResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Streaming endpoints
      virtual void StreamMessages(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::sonet::messaging::WebSocketMessage,::sonet::messaging::WebSocketMessage>* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::SendMessageResponse>* AsyncSendMessageRaw(::grpc::ClientContext* context, const ::sonet::messaging::SendMessageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::SendMessageResponse>* PrepareAsyncSendMessageRaw(::grpc::ClientContext* context, const ::sonet::messaging::SendMessageRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::GetMessagesResponse>* AsyncGetMessagesRaw(::grpc::ClientContext* context, const ::sonet::messaging::GetMessagesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::GetMessagesResponse>* PrepareAsyncGetMessagesRaw(::grpc::ClientContext* context, const ::sonet::messaging::GetMessagesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::UpdateMessageStatusResponse>* AsyncUpdateMessageStatusRaw(::grpc::ClientContext* context, const ::sonet::messaging::UpdateMessageStatusRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::UpdateMessageStatusResponse>* PrepareAsyncUpdateMessageStatusRaw(::grpc::ClientContext* context, const ::sonet::messaging::UpdateMessageStatusRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::SearchMessagesResponse>* AsyncSearchMessagesRaw(::grpc::ClientContext* context, const ::sonet::messaging::SearchMessagesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::SearchMessagesResponse>* PrepareAsyncSearchMessagesRaw(::grpc::ClientContext* context, const ::sonet::messaging::SearchMessagesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::CreateChatResponse>* AsyncCreateChatRaw(::grpc::ClientContext* context, const ::sonet::messaging::CreateChatRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::CreateChatResponse>* PrepareAsyncCreateChatRaw(::grpc::ClientContext* context, const ::sonet::messaging::CreateChatRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::GetChatsResponse>* AsyncGetChatsRaw(::grpc::ClientContext* context, const ::sonet::messaging::GetChatsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::GetChatsResponse>* PrepareAsyncGetChatsRaw(::grpc::ClientContext* context, const ::sonet::messaging::GetChatsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::UploadAttachmentResponse>* AsyncUploadAttachmentRaw(::grpc::ClientContext* context, const ::sonet::messaging::UploadAttachmentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::UploadAttachmentResponse>* PrepareAsyncUploadAttachmentRaw(::grpc::ClientContext* context, const ::sonet::messaging::UploadAttachmentRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::SetTypingResponse>* AsyncSetTypingRaw(::grpc::ClientContext* context, const ::sonet::messaging::SetTypingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::messaging::SetTypingResponse>* PrepareAsyncSetTypingRaw(::grpc::ClientContext* context, const ::sonet::messaging::SetTypingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderWriterInterface< ::sonet::messaging::WebSocketMessage, ::sonet::messaging::WebSocketMessage>* StreamMessagesRaw(::grpc::ClientContext* context) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::sonet::messaging::WebSocketMessage, ::sonet::messaging::WebSocketMessage>* AsyncStreamMessagesRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderWriterInterface< ::sonet::messaging::WebSocketMessage, ::sonet::messaging::WebSocketMessage>* PrepareAsyncStreamMessagesRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status SendMessage(::grpc::ClientContext* context, const ::sonet::messaging::SendMessageRequest& request, ::sonet::messaging::SendMessageResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::SendMessageResponse>> AsyncSendMessage(::grpc::ClientContext* context, const ::sonet::messaging::SendMessageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::SendMessageResponse>>(AsyncSendMessageRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::SendMessageResponse>> PrepareAsyncSendMessage(::grpc::ClientContext* context, const ::sonet::messaging::SendMessageRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::SendMessageResponse>>(PrepareAsyncSendMessageRaw(context, request, cq));
    }
    ::grpc::Status GetMessages(::grpc::ClientContext* context, const ::sonet::messaging::GetMessagesRequest& request, ::sonet::messaging::GetMessagesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::GetMessagesResponse>> AsyncGetMessages(::grpc::ClientContext* context, const ::sonet::messaging::GetMessagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::GetMessagesResponse>>(AsyncGetMessagesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::GetMessagesResponse>> PrepareAsyncGetMessages(::grpc::ClientContext* context, const ::sonet::messaging::GetMessagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::GetMessagesResponse>>(PrepareAsyncGetMessagesRaw(context, request, cq));
    }
    ::grpc::Status UpdateMessageStatus(::grpc::ClientContext* context, const ::sonet::messaging::UpdateMessageStatusRequest& request, ::sonet::messaging::UpdateMessageStatusResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::UpdateMessageStatusResponse>> AsyncUpdateMessageStatus(::grpc::ClientContext* context, const ::sonet::messaging::UpdateMessageStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::UpdateMessageStatusResponse>>(AsyncUpdateMessageStatusRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::UpdateMessageStatusResponse>> PrepareAsyncUpdateMessageStatus(::grpc::ClientContext* context, const ::sonet::messaging::UpdateMessageStatusRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::UpdateMessageStatusResponse>>(PrepareAsyncUpdateMessageStatusRaw(context, request, cq));
    }
    ::grpc::Status SearchMessages(::grpc::ClientContext* context, const ::sonet::messaging::SearchMessagesRequest& request, ::sonet::messaging::SearchMessagesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::SearchMessagesResponse>> AsyncSearchMessages(::grpc::ClientContext* context, const ::sonet::messaging::SearchMessagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::SearchMessagesResponse>>(AsyncSearchMessagesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::SearchMessagesResponse>> PrepareAsyncSearchMessages(::grpc::ClientContext* context, const ::sonet::messaging::SearchMessagesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::SearchMessagesResponse>>(PrepareAsyncSearchMessagesRaw(context, request, cq));
    }
    ::grpc::Status CreateChat(::grpc::ClientContext* context, const ::sonet::messaging::CreateChatRequest& request, ::sonet::messaging::CreateChatResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::CreateChatResponse>> AsyncCreateChat(::grpc::ClientContext* context, const ::sonet::messaging::CreateChatRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::CreateChatResponse>>(AsyncCreateChatRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::CreateChatResponse>> PrepareAsyncCreateChat(::grpc::ClientContext* context, const ::sonet::messaging::CreateChatRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::CreateChatResponse>>(PrepareAsyncCreateChatRaw(context, request, cq));
    }
    ::grpc::Status GetChats(::grpc::ClientContext* context, const ::sonet::messaging::GetChatsRequest& request, ::sonet::messaging::GetChatsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::GetChatsResponse>> AsyncGetChats(::grpc::ClientContext* context, const ::sonet::messaging::GetChatsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::GetChatsResponse>>(AsyncGetChatsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::GetChatsResponse>> PrepareAsyncGetChats(::grpc::ClientContext* context, const ::sonet::messaging::GetChatsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::GetChatsResponse>>(PrepareAsyncGetChatsRaw(context, request, cq));
    }
    ::grpc::Status UploadAttachment(::grpc::ClientContext* context, const ::sonet::messaging::UploadAttachmentRequest& request, ::sonet::messaging::UploadAttachmentResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::UploadAttachmentResponse>> AsyncUploadAttachment(::grpc::ClientContext* context, const ::sonet::messaging::UploadAttachmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::UploadAttachmentResponse>>(AsyncUploadAttachmentRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::UploadAttachmentResponse>> PrepareAsyncUploadAttachment(::grpc::ClientContext* context, const ::sonet::messaging::UploadAttachmentRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::UploadAttachmentResponse>>(PrepareAsyncUploadAttachmentRaw(context, request, cq));
    }
    ::grpc::Status SetTyping(::grpc::ClientContext* context, const ::sonet::messaging::SetTypingRequest& request, ::sonet::messaging::SetTypingResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::SetTypingResponse>> AsyncSetTyping(::grpc::ClientContext* context, const ::sonet::messaging::SetTypingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::SetTypingResponse>>(AsyncSetTypingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::SetTypingResponse>> PrepareAsyncSetTyping(::grpc::ClientContext* context, const ::sonet::messaging::SetTypingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::messaging::SetTypingResponse>>(PrepareAsyncSetTypingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderWriter< ::sonet::messaging::WebSocketMessage, ::sonet::messaging::WebSocketMessage>> StreamMessages(::grpc::ClientContext* context) {
      return std::unique_ptr< ::grpc::ClientReaderWriter< ::sonet::messaging::WebSocketMessage, ::sonet::messaging::WebSocketMessage>>(StreamMessagesRaw(context));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::sonet::messaging::WebSocketMessage, ::sonet::messaging::WebSocketMessage>> AsyncStreamMessages(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::sonet::messaging::WebSocketMessage, ::sonet::messaging::WebSocketMessage>>(AsyncStreamMessagesRaw(context, cq, tag));
    }
    std::unique_ptr<  ::grpc::ClientAsyncReaderWriter< ::sonet::messaging::WebSocketMessage, ::sonet::messaging::WebSocketMessage>> PrepareAsyncStreamMessages(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderWriter< ::sonet::messaging::WebSocketMessage, ::sonet::messaging::WebSocketMessage>>(PrepareAsyncStreamMessagesRaw(context, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void SendMessage(::grpc::ClientContext* context, const ::sonet::messaging::SendMessageRequest* request, ::sonet::messaging::SendMessageResponse* response, std::function<void(::grpc::Status)>) override;
      void SendMessage(::grpc::ClientContext* context, const ::sonet::messaging::SendMessageRequest* request, ::sonet::messaging::SendMessageResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetMessages(::grpc::ClientContext* context, const ::sonet::messaging::GetMessagesRequest* request, ::sonet::messaging::GetMessagesResponse* response, std::function<void(::grpc::Status)>) override;
      void GetMessages(::grpc::ClientContext* context, const ::sonet::messaging::GetMessagesRequest* request, ::sonet::messaging::GetMessagesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateMessageStatus(::grpc::ClientContext* context, const ::sonet::messaging::UpdateMessageStatusRequest* request, ::sonet::messaging::UpdateMessageStatusResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateMessageStatus(::grpc::ClientContext* context, const ::sonet::messaging::UpdateMessageStatusRequest* request, ::sonet::messaging::UpdateMessageStatusResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SearchMessages(::grpc::ClientContext* context, const ::sonet::messaging::SearchMessagesRequest* request, ::sonet::messaging::SearchMessagesResponse* response, std::function<void(::grpc::Status)>) override;
      void SearchMessages(::grpc::ClientContext* context, const ::sonet::messaging::SearchMessagesRequest* request, ::sonet::messaging::SearchMessagesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateChat(::grpc::ClientContext* context, const ::sonet::messaging::CreateChatRequest* request, ::sonet::messaging::CreateChatResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateChat(::grpc::ClientContext* context, const ::sonet::messaging::CreateChatRequest* request, ::sonet::messaging::CreateChatResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetChats(::grpc::ClientContext* context, const ::sonet::messaging::GetChatsRequest* request, ::sonet::messaging::GetChatsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetChats(::grpc::ClientContext* context, const ::sonet::messaging::GetChatsRequest* request, ::sonet::messaging::GetChatsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UploadAttachment(::grpc::ClientContext* context, const ::sonet::messaging::UploadAttachmentRequest* request, ::sonet::messaging::UploadAttachmentResponse* response, std::function<void(::grpc::Status)>) override;
      void UploadAttachment(::grpc::ClientContext* context, const ::sonet::messaging::UploadAttachmentRequest* request, ::sonet::messaging::UploadAttachmentResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetTyping(::grpc::ClientContext* context, const ::sonet::messaging::SetTypingRequest* request, ::sonet::messaging::SetTypingResponse* response, std::function<void(::grpc::Status)>) override;
      void SetTyping(::grpc::ClientContext* context, const ::sonet::messaging::SetTypingRequest* request, ::sonet::messaging::SetTypingResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StreamMessages(::grpc::ClientContext* context, ::grpc::ClientBidiReactor< ::sonet::messaging::WebSocketMessage,::sonet::messaging::WebSocketMessage>* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::sonet::messaging::SendMessageResponse>* AsyncSendMessageRaw(::grpc::ClientContext* context, const ::sonet::messaging::SendMessageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::messaging::SendMessageResponse>* PrepareAsyncSendMessageRaw(::grpc::ClientContext* context, const ::sonet::messaging::SendMessageRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::messaging::GetMessagesResponse>* AsyncGetMessagesRaw(::grpc::ClientContext* context, const ::sonet::messaging::GetMessagesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::messaging::GetMessagesResponse>* PrepareAsyncGetMessagesRaw(::grpc::ClientContext* context, const ::sonet::messaging::GetMessagesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::messaging::UpdateMessageStatusResponse>* AsyncUpdateMessageStatusRaw(::grpc::ClientContext* context, const ::sonet::messaging::UpdateMessageStatusRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::messaging::UpdateMessageStatusResponse>* PrepareAsyncUpdateMessageStatusRaw(::grpc::ClientContext* context, const ::sonet::messaging::UpdateMessageStatusRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::messaging::SearchMessagesResponse>* AsyncSearchMessagesRaw(::grpc::ClientContext* context, const ::sonet::messaging::SearchMessagesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::messaging::SearchMessagesResponse>* PrepareAsyncSearchMessagesRaw(::grpc::ClientContext* context, const ::sonet::messaging::SearchMessagesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::messaging::CreateChatResponse>* AsyncCreateChatRaw(::grpc::ClientContext* context, const ::sonet::messaging::CreateChatRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::messaging::CreateChatResponse>* PrepareAsyncCreateChatRaw(::grpc::ClientContext* context, const ::sonet::messaging::CreateChatRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::messaging::GetChatsResponse>* AsyncGetChatsRaw(::grpc::ClientContext* context, const ::sonet::messaging::GetChatsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::messaging::GetChatsResponse>* PrepareAsyncGetChatsRaw(::grpc::ClientContext* context, const ::sonet::messaging::GetChatsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::messaging::UploadAttachmentResponse>* AsyncUploadAttachmentRaw(::grpc::ClientContext* context, const ::sonet::messaging::UploadAttachmentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::messaging::UploadAttachmentResponse>* PrepareAsyncUploadAttachmentRaw(::grpc::ClientContext* context, const ::sonet::messaging::UploadAttachmentRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::messaging::SetTypingResponse>* AsyncSetTypingRaw(::grpc::ClientContext* context, const ::sonet::messaging::SetTypingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::messaging::SetTypingResponse>* PrepareAsyncSetTypingRaw(::grpc::ClientContext* context, const ::sonet::messaging::SetTypingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReaderWriter< ::sonet::messaging::WebSocketMessage, ::sonet::messaging::WebSocketMessage>* StreamMessagesRaw(::grpc::ClientContext* context) override;
    ::grpc::ClientAsyncReaderWriter< ::sonet::messaging::WebSocketMessage, ::sonet::messaging::WebSocketMessage>* AsyncStreamMessagesRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReaderWriter< ::sonet::messaging::WebSocketMessage, ::sonet::messaging::WebSocketMessage>* PrepareAsyncStreamMessagesRaw(::grpc::ClientContext* context, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_SendMessage_;
    const ::grpc::internal::RpcMethod rpcmethod_GetMessages_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateMessageStatus_;
    const ::grpc::internal::RpcMethod rpcmethod_SearchMessages_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateChat_;
    const ::grpc::internal::RpcMethod rpcmethod_GetChats_;
    const ::grpc::internal::RpcMethod rpcmethod_UploadAttachment_;
    const ::grpc::internal::RpcMethod rpcmethod_SetTyping_;
    const ::grpc::internal::RpcMethod rpcmethod_StreamMessages_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Message operations
    virtual ::grpc::Status SendMessage(::grpc::ServerContext* context, const ::sonet::messaging::SendMessageRequest* request, ::sonet::messaging::SendMessageResponse* response);
    virtual ::grpc::Status GetMessages(::grpc::ServerContext* context, const ::sonet::messaging::GetMessagesRequest* request, ::sonet::messaging::GetMessagesResponse* response);
    virtual ::grpc::Status UpdateMessageStatus(::grpc::ServerContext* context, const ::sonet::messaging::UpdateMessageStatusRequest* request, ::sonet::messaging::UpdateMessageStatusResponse* response);
    virtual ::grpc::Status SearchMessages(::grpc::ServerContext* context, const ::sonet::messaging::SearchMessagesRequest* request, ::sonet::messaging::SearchMessagesResponse* response);
    // Chat operations
    virtual ::grpc::Status CreateChat(::grpc::ServerContext* context, const ::sonet::messaging::CreateChatRequest* request, ::sonet::messaging::CreateChatResponse* response);
    virtual ::grpc::Status GetChats(::grpc::ServerContext* context, const ::sonet::messaging::GetChatsRequest* request, ::sonet::messaging::GetChatsResponse* response);
    // Attachment operations
    virtual ::grpc::Status UploadAttachment(::grpc::ServerContext* context, const ::sonet::messaging::UploadAttachmentRequest* request, ::sonet::messaging::UploadAttachmentResponse* response);
    // Real-time operations
    virtual ::grpc::Status SetTyping(::grpc::ServerContext* context, const ::sonet::messaging::SetTypingRequest* request, ::sonet::messaging::SetTypingResponse* response);
    // Streaming endpoints
    virtual ::grpc::Status StreamMessages(::grpc::ServerContext* context, ::grpc::ServerReaderWriter< ::sonet::messaging::WebSocketMessage, ::sonet::messaging::WebSocketMessage>* stream);
  };
  template <class BaseClass>
  class WithAsyncMethod_SendMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendMessage() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_SendMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendMessage(::grpc::ServerContext* /*context*/, const ::sonet::messaging::SendMessageRequest* /*request*/, ::sonet::messaging::SendMessageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendMessage(::grpc::ServerContext* context, ::sonet::messaging::SendMessageRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::messaging::SendMessageResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetMessages() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMessages(::grpc::ServerContext* /*context*/, const ::sonet::messaging::GetMessagesRequest* /*request*/, ::sonet::messaging::GetMessagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMessages(::grpc::ServerContext* context, ::sonet::messaging::GetMessagesRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::messaging::GetMessagesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateMessageStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateMessageStatus() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_UpdateMessageStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateMessageStatus(::grpc::ServerContext* /*context*/, const ::sonet::messaging::UpdateMessageStatusRequest* /*request*/, ::sonet::messaging::UpdateMessageStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateMessageStatus(::grpc::ServerContext* context, ::sonet::messaging::UpdateMessageStatusRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::messaging::UpdateMessageStatusResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SearchMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SearchMessages() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_SearchMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchMessages(::grpc::ServerContext* /*context*/, const ::sonet::messaging::SearchMessagesRequest* /*request*/, ::sonet::messaging::SearchMessagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearchMessages(::grpc::ServerContext* context, ::sonet::messaging::SearchMessagesRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::messaging::SearchMessagesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateChat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateChat() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_CreateChat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateChat(::grpc::ServerContext* /*context*/, const ::sonet::messaging::CreateChatRequest* /*request*/, ::sonet::messaging::CreateChatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateChat(::grpc::ServerContext* context, ::sonet::messaging::CreateChatRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::messaging::CreateChatResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetChats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetChats() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_GetChats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetChats(::grpc::ServerContext* /*context*/, const ::sonet::messaging::GetChatsRequest* /*request*/, ::sonet::messaging::GetChatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetChats(::grpc::ServerContext* context, ::sonet::messaging::GetChatsRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::messaging::GetChatsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UploadAttachment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UploadAttachment() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_UploadAttachment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadAttachment(::grpc::ServerContext* /*context*/, const ::sonet::messaging::UploadAttachmentRequest* /*request*/, ::sonet::messaging::UploadAttachmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUploadAttachment(::grpc::ServerContext* context, ::sonet::messaging::UploadAttachmentRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::messaging::UploadAttachmentResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetTyping : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetTyping() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_SetTyping() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetTyping(::grpc::ServerContext* /*context*/, const ::sonet::messaging::SetTypingRequest* /*request*/, ::sonet::messaging::SetTypingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetTyping(::grpc::ServerContext* context, ::sonet::messaging::SetTypingRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::messaging::SetTypingResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StreamMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StreamMessages() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_StreamMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamMessages(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::sonet::messaging::WebSocketMessage, ::sonet::messaging::WebSocketMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStreamMessages(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::sonet::messaging::WebSocketMessage, ::sonet::messaging::WebSocketMessage>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(8, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_SendMessage<WithAsyncMethod_GetMessages<WithAsyncMethod_UpdateMessageStatus<WithAsyncMethod_SearchMessages<WithAsyncMethod_CreateChat<WithAsyncMethod_GetChats<WithAsyncMethod_UploadAttachment<WithAsyncMethod_SetTyping<WithAsyncMethod_StreamMessages<Service > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_SendMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendMessage() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::messaging::SendMessageRequest, ::sonet::messaging::SendMessageResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::messaging::SendMessageRequest* request, ::sonet::messaging::SendMessageResponse* response) { return this->SendMessage(context, request, response); }));}
    void SetMessageAllocatorFor_SendMessage(
        ::grpc::MessageAllocator< ::sonet::messaging::SendMessageRequest, ::sonet::messaging::SendMessageResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::messaging::SendMessageRequest, ::sonet::messaging::SendMessageResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendMessage(::grpc::ServerContext* /*context*/, const ::sonet::messaging::SendMessageRequest* /*request*/, ::sonet::messaging::SendMessageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendMessage(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::messaging::SendMessageRequest* /*request*/, ::sonet::messaging::SendMessageResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetMessages() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::messaging::GetMessagesRequest, ::sonet::messaging::GetMessagesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::messaging::GetMessagesRequest* request, ::sonet::messaging::GetMessagesResponse* response) { return this->GetMessages(context, request, response); }));}
    void SetMessageAllocatorFor_GetMessages(
        ::grpc::MessageAllocator< ::sonet::messaging::GetMessagesRequest, ::sonet::messaging::GetMessagesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::messaging::GetMessagesRequest, ::sonet::messaging::GetMessagesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMessages(::grpc::ServerContext* /*context*/, const ::sonet::messaging::GetMessagesRequest* /*request*/, ::sonet::messaging::GetMessagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMessages(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::messaging::GetMessagesRequest* /*request*/, ::sonet::messaging::GetMessagesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateMessageStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateMessageStatus() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::messaging::UpdateMessageStatusRequest, ::sonet::messaging::UpdateMessageStatusResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::messaging::UpdateMessageStatusRequest* request, ::sonet::messaging::UpdateMessageStatusResponse* response) { return this->UpdateMessageStatus(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateMessageStatus(
        ::grpc::MessageAllocator< ::sonet::messaging::UpdateMessageStatusRequest, ::sonet::messaging::UpdateMessageStatusResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::messaging::UpdateMessageStatusRequest, ::sonet::messaging::UpdateMessageStatusResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateMessageStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateMessageStatus(::grpc::ServerContext* /*context*/, const ::sonet::messaging::UpdateMessageStatusRequest* /*request*/, ::sonet::messaging::UpdateMessageStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateMessageStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::messaging::UpdateMessageStatusRequest* /*request*/, ::sonet::messaging::UpdateMessageStatusResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SearchMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SearchMessages() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::messaging::SearchMessagesRequest, ::sonet::messaging::SearchMessagesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::messaging::SearchMessagesRequest* request, ::sonet::messaging::SearchMessagesResponse* response) { return this->SearchMessages(context, request, response); }));}
    void SetMessageAllocatorFor_SearchMessages(
        ::grpc::MessageAllocator< ::sonet::messaging::SearchMessagesRequest, ::sonet::messaging::SearchMessagesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::messaging::SearchMessagesRequest, ::sonet::messaging::SearchMessagesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SearchMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchMessages(::grpc::ServerContext* /*context*/, const ::sonet::messaging::SearchMessagesRequest* /*request*/, ::sonet::messaging::SearchMessagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SearchMessages(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::messaging::SearchMessagesRequest* /*request*/, ::sonet::messaging::SearchMessagesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateChat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateChat() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::messaging::CreateChatRequest, ::sonet::messaging::CreateChatResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::messaging::CreateChatRequest* request, ::sonet::messaging::CreateChatResponse* response) { return this->CreateChat(context, request, response); }));}
    void SetMessageAllocatorFor_CreateChat(
        ::grpc::MessageAllocator< ::sonet::messaging::CreateChatRequest, ::sonet::messaging::CreateChatResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::messaging::CreateChatRequest, ::sonet::messaging::CreateChatResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateChat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateChat(::grpc::ServerContext* /*context*/, const ::sonet::messaging::CreateChatRequest* /*request*/, ::sonet::messaging::CreateChatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateChat(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::messaging::CreateChatRequest* /*request*/, ::sonet::messaging::CreateChatResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetChats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetChats() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::messaging::GetChatsRequest, ::sonet::messaging::GetChatsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::messaging::GetChatsRequest* request, ::sonet::messaging::GetChatsResponse* response) { return this->GetChats(context, request, response); }));}
    void SetMessageAllocatorFor_GetChats(
        ::grpc::MessageAllocator< ::sonet::messaging::GetChatsRequest, ::sonet::messaging::GetChatsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::messaging::GetChatsRequest, ::sonet::messaging::GetChatsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetChats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetChats(::grpc::ServerContext* /*context*/, const ::sonet::messaging::GetChatsRequest* /*request*/, ::sonet::messaging::GetChatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetChats(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::messaging::GetChatsRequest* /*request*/, ::sonet::messaging::GetChatsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UploadAttachment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UploadAttachment() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::messaging::UploadAttachmentRequest, ::sonet::messaging::UploadAttachmentResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::messaging::UploadAttachmentRequest* request, ::sonet::messaging::UploadAttachmentResponse* response) { return this->UploadAttachment(context, request, response); }));}
    void SetMessageAllocatorFor_UploadAttachment(
        ::grpc::MessageAllocator< ::sonet::messaging::UploadAttachmentRequest, ::sonet::messaging::UploadAttachmentResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::messaging::UploadAttachmentRequest, ::sonet::messaging::UploadAttachmentResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UploadAttachment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadAttachment(::grpc::ServerContext* /*context*/, const ::sonet::messaging::UploadAttachmentRequest* /*request*/, ::sonet::messaging::UploadAttachmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UploadAttachment(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::messaging::UploadAttachmentRequest* /*request*/, ::sonet::messaging::UploadAttachmentResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetTyping : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetTyping() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::messaging::SetTypingRequest, ::sonet::messaging::SetTypingResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::messaging::SetTypingRequest* request, ::sonet::messaging::SetTypingResponse* response) { return this->SetTyping(context, request, response); }));}
    void SetMessageAllocatorFor_SetTyping(
        ::grpc::MessageAllocator< ::sonet::messaging::SetTypingRequest, ::sonet::messaging::SetTypingResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::messaging::SetTypingRequest, ::sonet::messaging::SetTypingResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetTyping() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetTyping(::grpc::ServerContext* /*context*/, const ::sonet::messaging::SetTypingRequest* /*request*/, ::sonet::messaging::SetTypingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetTyping(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::messaging::SetTypingRequest* /*request*/, ::sonet::messaging::SetTypingResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StreamMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StreamMessages() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackBidiHandler< ::sonet::messaging::WebSocketMessage, ::sonet::messaging::WebSocketMessage>(
            [this](
                   ::grpc::CallbackServerContext* context) { return this->StreamMessages(context); }));
    }
    ~WithCallbackMethod_StreamMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamMessages(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::sonet::messaging::WebSocketMessage, ::sonet::messaging::WebSocketMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerBidiReactor< ::sonet::messaging::WebSocketMessage, ::sonet::messaging::WebSocketMessage>* StreamMessages(
      ::grpc::CallbackServerContext* /*context*/)
      { return nullptr; }
  };
  typedef WithCallbackMethod_SendMessage<WithCallbackMethod_GetMessages<WithCallbackMethod_UpdateMessageStatus<WithCallbackMethod_SearchMessages<WithCallbackMethod_CreateChat<WithCallbackMethod_GetChats<WithCallbackMethod_UploadAttachment<WithCallbackMethod_SetTyping<WithCallbackMethod_StreamMessages<Service > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_SendMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendMessage() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_SendMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendMessage(::grpc::ServerContext* /*context*/, const ::sonet::messaging::SendMessageRequest* /*request*/, ::sonet::messaging::SendMessageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetMessages() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMessages(::grpc::ServerContext* /*context*/, const ::sonet::messaging::GetMessagesRequest* /*request*/, ::sonet::messaging::GetMessagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateMessageStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateMessageStatus() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_UpdateMessageStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateMessageStatus(::grpc::ServerContext* /*context*/, const ::sonet::messaging::UpdateMessageStatusRequest* /*request*/, ::sonet::messaging::UpdateMessageStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SearchMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SearchMessages() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_SearchMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchMessages(::grpc::ServerContext* /*context*/, const ::sonet::messaging::SearchMessagesRequest* /*request*/, ::sonet::messaging::SearchMessagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateChat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateChat() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_CreateChat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateChat(::grpc::ServerContext* /*context*/, const ::sonet::messaging::CreateChatRequest* /*request*/, ::sonet::messaging::CreateChatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetChats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetChats() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_GetChats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetChats(::grpc::ServerContext* /*context*/, const ::sonet::messaging::GetChatsRequest* /*request*/, ::sonet::messaging::GetChatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UploadAttachment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UploadAttachment() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_UploadAttachment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadAttachment(::grpc::ServerContext* /*context*/, const ::sonet::messaging::UploadAttachmentRequest* /*request*/, ::sonet::messaging::UploadAttachmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetTyping : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetTyping() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_SetTyping() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetTyping(::grpc::ServerContext* /*context*/, const ::sonet::messaging::SetTypingRequest* /*request*/, ::sonet::messaging::SetTypingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StreamMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StreamMessages() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_StreamMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamMessages(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::sonet::messaging::WebSocketMessage, ::sonet::messaging::WebSocketMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendMessage() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_SendMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendMessage(::grpc::ServerContext* /*context*/, const ::sonet::messaging::SendMessageRequest* /*request*/, ::sonet::messaging::SendMessageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendMessage(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetMessages() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMessages(::grpc::ServerContext* /*context*/, const ::sonet::messaging::GetMessagesRequest* /*request*/, ::sonet::messaging::GetMessagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMessages(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateMessageStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateMessageStatus() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_UpdateMessageStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateMessageStatus(::grpc::ServerContext* /*context*/, const ::sonet::messaging::UpdateMessageStatusRequest* /*request*/, ::sonet::messaging::UpdateMessageStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateMessageStatus(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SearchMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SearchMessages() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_SearchMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchMessages(::grpc::ServerContext* /*context*/, const ::sonet::messaging::SearchMessagesRequest* /*request*/, ::sonet::messaging::SearchMessagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearchMessages(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateChat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateChat() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_CreateChat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateChat(::grpc::ServerContext* /*context*/, const ::sonet::messaging::CreateChatRequest* /*request*/, ::sonet::messaging::CreateChatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateChat(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetChats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetChats() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_GetChats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetChats(::grpc::ServerContext* /*context*/, const ::sonet::messaging::GetChatsRequest* /*request*/, ::sonet::messaging::GetChatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetChats(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UploadAttachment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UploadAttachment() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_UploadAttachment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadAttachment(::grpc::ServerContext* /*context*/, const ::sonet::messaging::UploadAttachmentRequest* /*request*/, ::sonet::messaging::UploadAttachmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUploadAttachment(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetTyping : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetTyping() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_SetTyping() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetTyping(::grpc::ServerContext* /*context*/, const ::sonet::messaging::SetTypingRequest* /*request*/, ::sonet::messaging::SetTypingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetTyping(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StreamMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StreamMessages() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_StreamMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamMessages(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::sonet::messaging::WebSocketMessage, ::sonet::messaging::WebSocketMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStreamMessages(::grpc::ServerContext* context, ::grpc::ServerAsyncReaderWriter< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* stream, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncBidiStreaming(8, context, stream, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendMessage() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendMessage(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendMessage(::grpc::ServerContext* /*context*/, const ::sonet::messaging::SendMessageRequest* /*request*/, ::sonet::messaging::SendMessageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendMessage(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetMessages() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetMessages(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMessages(::grpc::ServerContext* /*context*/, const ::sonet::messaging::GetMessagesRequest* /*request*/, ::sonet::messaging::GetMessagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMessages(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateMessageStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateMessageStatus() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateMessageStatus(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateMessageStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateMessageStatus(::grpc::ServerContext* /*context*/, const ::sonet::messaging::UpdateMessageStatusRequest* /*request*/, ::sonet::messaging::UpdateMessageStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateMessageStatus(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SearchMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SearchMessages() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SearchMessages(context, request, response); }));
    }
    ~WithRawCallbackMethod_SearchMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchMessages(::grpc::ServerContext* /*context*/, const ::sonet::messaging::SearchMessagesRequest* /*request*/, ::sonet::messaging::SearchMessagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SearchMessages(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateChat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateChat() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateChat(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateChat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateChat(::grpc::ServerContext* /*context*/, const ::sonet::messaging::CreateChatRequest* /*request*/, ::sonet::messaging::CreateChatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateChat(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetChats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetChats() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetChats(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetChats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetChats(::grpc::ServerContext* /*context*/, const ::sonet::messaging::GetChatsRequest* /*request*/, ::sonet::messaging::GetChatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetChats(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UploadAttachment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UploadAttachment() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UploadAttachment(context, request, response); }));
    }
    ~WithRawCallbackMethod_UploadAttachment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadAttachment(::grpc::ServerContext* /*context*/, const ::sonet::messaging::UploadAttachmentRequest* /*request*/, ::sonet::messaging::UploadAttachmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UploadAttachment(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetTyping : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetTyping() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetTyping(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetTyping() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetTyping(::grpc::ServerContext* /*context*/, const ::sonet::messaging::SetTypingRequest* /*request*/, ::sonet::messaging::SetTypingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetTyping(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StreamMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StreamMessages() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackBidiHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context) { return this->StreamMessages(context); }));
    }
    ~WithRawCallbackMethod_StreamMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamMessages(::grpc::ServerContext* /*context*/, ::grpc::ServerReaderWriter< ::sonet::messaging::WebSocketMessage, ::sonet::messaging::WebSocketMessage>* /*stream*/)  override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerBidiReactor< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* StreamMessages(
      ::grpc::CallbackServerContext* /*context*/)
      { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendMessage : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendMessage() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::messaging::SendMessageRequest, ::sonet::messaging::SendMessageResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::messaging::SendMessageRequest, ::sonet::messaging::SendMessageResponse>* streamer) {
                       return this->StreamedSendMessage(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendMessage() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendMessage(::grpc::ServerContext* /*context*/, const ::sonet::messaging::SendMessageRequest* /*request*/, ::sonet::messaging::SendMessageResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendMessage(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::messaging::SendMessageRequest,::sonet::messaging::SendMessageResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetMessages() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::messaging::GetMessagesRequest, ::sonet::messaging::GetMessagesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::messaging::GetMessagesRequest, ::sonet::messaging::GetMessagesResponse>* streamer) {
                       return this->StreamedGetMessages(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetMessages(::grpc::ServerContext* /*context*/, const ::sonet::messaging::GetMessagesRequest* /*request*/, ::sonet::messaging::GetMessagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetMessages(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::messaging::GetMessagesRequest,::sonet::messaging::GetMessagesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateMessageStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateMessageStatus() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::messaging::UpdateMessageStatusRequest, ::sonet::messaging::UpdateMessageStatusResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::messaging::UpdateMessageStatusRequest, ::sonet::messaging::UpdateMessageStatusResponse>* streamer) {
                       return this->StreamedUpdateMessageStatus(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateMessageStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateMessageStatus(::grpc::ServerContext* /*context*/, const ::sonet::messaging::UpdateMessageStatusRequest* /*request*/, ::sonet::messaging::UpdateMessageStatusResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateMessageStatus(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::messaging::UpdateMessageStatusRequest,::sonet::messaging::UpdateMessageStatusResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SearchMessages : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SearchMessages() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::messaging::SearchMessagesRequest, ::sonet::messaging::SearchMessagesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::messaging::SearchMessagesRequest, ::sonet::messaging::SearchMessagesResponse>* streamer) {
                       return this->StreamedSearchMessages(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SearchMessages() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SearchMessages(::grpc::ServerContext* /*context*/, const ::sonet::messaging::SearchMessagesRequest* /*request*/, ::sonet::messaging::SearchMessagesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSearchMessages(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::messaging::SearchMessagesRequest,::sonet::messaging::SearchMessagesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateChat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateChat() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::messaging::CreateChatRequest, ::sonet::messaging::CreateChatResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::messaging::CreateChatRequest, ::sonet::messaging::CreateChatResponse>* streamer) {
                       return this->StreamedCreateChat(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateChat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateChat(::grpc::ServerContext* /*context*/, const ::sonet::messaging::CreateChatRequest* /*request*/, ::sonet::messaging::CreateChatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateChat(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::messaging::CreateChatRequest,::sonet::messaging::CreateChatResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetChats : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetChats() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::messaging::GetChatsRequest, ::sonet::messaging::GetChatsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::messaging::GetChatsRequest, ::sonet::messaging::GetChatsResponse>* streamer) {
                       return this->StreamedGetChats(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetChats() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetChats(::grpc::ServerContext* /*context*/, const ::sonet::messaging::GetChatsRequest* /*request*/, ::sonet::messaging::GetChatsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetChats(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::messaging::GetChatsRequest,::sonet::messaging::GetChatsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UploadAttachment : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UploadAttachment() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::messaging::UploadAttachmentRequest, ::sonet::messaging::UploadAttachmentResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::messaging::UploadAttachmentRequest, ::sonet::messaging::UploadAttachmentResponse>* streamer) {
                       return this->StreamedUploadAttachment(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UploadAttachment() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UploadAttachment(::grpc::ServerContext* /*context*/, const ::sonet::messaging::UploadAttachmentRequest* /*request*/, ::sonet::messaging::UploadAttachmentResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUploadAttachment(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::messaging::UploadAttachmentRequest,::sonet::messaging::UploadAttachmentResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetTyping : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetTyping() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::messaging::SetTypingRequest, ::sonet::messaging::SetTypingResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::messaging::SetTypingRequest, ::sonet::messaging::SetTypingResponse>* streamer) {
                       return this->StreamedSetTyping(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetTyping() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetTyping(::grpc::ServerContext* /*context*/, const ::sonet::messaging::SetTypingRequest* /*request*/, ::sonet::messaging::SetTypingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetTyping(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::messaging::SetTypingRequest,::sonet::messaging::SetTypingResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_SendMessage<WithStreamedUnaryMethod_GetMessages<WithStreamedUnaryMethod_UpdateMessageStatus<WithStreamedUnaryMethod_SearchMessages<WithStreamedUnaryMethod_CreateChat<WithStreamedUnaryMethod_GetChats<WithStreamedUnaryMethod_UploadAttachment<WithStreamedUnaryMethod_SetTyping<Service > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_SendMessage<WithStreamedUnaryMethod_GetMessages<WithStreamedUnaryMethod_UpdateMessageStatus<WithStreamedUnaryMethod_SearchMessages<WithStreamedUnaryMethod_CreateChat<WithStreamedUnaryMethod_GetChats<WithStreamedUnaryMethod_UploadAttachment<WithStreamedUnaryMethod_SetTyping<Service > > > > > > > > StreamedService;
};

}  // namespace messaging
}  // namespace sonet


#endif  // GRPC_services_2fmessaging_2eproto__INCLUDED
