// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services/starterpack_service.proto

#include "services/starterpack_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace sonet {
namespace starterpack {
namespace v1 {
PROTOBUF_CONSTEXPR Starterpack::Starterpack(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.starterpack_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.creator_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.avatar_url_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.created_at_)*/nullptr
  , /*decltype(_impl_.updated_at_)*/nullptr
  , /*decltype(_impl_.is_public_)*/false
  , /*decltype(_impl_.item_count_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StarterpackDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StarterpackDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StarterpackDefaultTypeInternal() {}
  union {
    Starterpack _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StarterpackDefaultTypeInternal _Starterpack_default_instance_;
PROTOBUF_CONSTEXPR StarterpackItem::StarterpackItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.starterpack_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.item_uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.created_at_)*/nullptr
  , /*decltype(_impl_.item_type_)*/0
  , /*decltype(_impl_.item_order_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StarterpackItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StarterpackItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StarterpackItemDefaultTypeInternal() {}
  union {
    StarterpackItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StarterpackItemDefaultTypeInternal _StarterpackItem_default_instance_;
PROTOBUF_CONSTEXPR CreateStarterpackRequest::CreateStarterpackRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.creator_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.avatar_url_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.is_public_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateStarterpackRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateStarterpackRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateStarterpackRequestDefaultTypeInternal() {}
  union {
    CreateStarterpackRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateStarterpackRequestDefaultTypeInternal _CreateStarterpackRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateStarterpackResponse::CreateStarterpackResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.starterpack_)*/nullptr
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateStarterpackResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateStarterpackResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateStarterpackResponseDefaultTypeInternal() {}
  union {
    CreateStarterpackResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateStarterpackResponseDefaultTypeInternal _CreateStarterpackResponse_default_instance_;
PROTOBUF_CONSTEXPR GetStarterpackRequest::GetStarterpackRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.starterpack_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.requester_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetStarterpackRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetStarterpackRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetStarterpackRequestDefaultTypeInternal() {}
  union {
    GetStarterpackRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetStarterpackRequestDefaultTypeInternal _GetStarterpackRequest_default_instance_;
PROTOBUF_CONSTEXPR GetStarterpackResponse::GetStarterpackResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.starterpack_)*/nullptr
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetStarterpackResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetStarterpackResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetStarterpackResponseDefaultTypeInternal() {}
  union {
    GetStarterpackResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetStarterpackResponseDefaultTypeInternal _GetStarterpackResponse_default_instance_;
PROTOBUF_CONSTEXPR GetUserStarterpacksRequest::GetUserStarterpacksRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.user_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.requester_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.cursor_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.limit_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetUserStarterpacksRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetUserStarterpacksRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetUserStarterpacksRequestDefaultTypeInternal() {}
  union {
    GetUserStarterpacksRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetUserStarterpacksRequestDefaultTypeInternal _GetUserStarterpacksRequest_default_instance_;
PROTOBUF_CONSTEXPR GetUserStarterpacksResponse::GetUserStarterpacksResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.starterpacks_)*/{}
  , /*decltype(_impl_.next_cursor_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.error_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetUserStarterpacksResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetUserStarterpacksResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetUserStarterpacksResponseDefaultTypeInternal() {}
  union {
    GetUserStarterpacksResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetUserStarterpacksResponseDefaultTypeInternal _GetUserStarterpacksResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateStarterpackRequest::UpdateStarterpackRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.starterpack_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.requester_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.avatar_url_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.is_public_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateStarterpackRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateStarterpackRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateStarterpackRequestDefaultTypeInternal() {}
  union {
    UpdateStarterpackRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateStarterpackRequestDefaultTypeInternal _UpdateStarterpackRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateStarterpackResponse::UpdateStarterpackResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.starterpack_)*/nullptr
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateStarterpackResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateStarterpackResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateStarterpackResponseDefaultTypeInternal() {}
  union {
    UpdateStarterpackResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateStarterpackResponseDefaultTypeInternal _UpdateStarterpackResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteStarterpackRequest::DeleteStarterpackRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.starterpack_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.requester_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteStarterpackRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteStarterpackRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteStarterpackRequestDefaultTypeInternal() {}
  union {
    DeleteStarterpackRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteStarterpackRequestDefaultTypeInternal _DeleteStarterpackRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteStarterpackResponse::DeleteStarterpackResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteStarterpackResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteStarterpackResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteStarterpackResponseDefaultTypeInternal() {}
  union {
    DeleteStarterpackResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteStarterpackResponseDefaultTypeInternal _DeleteStarterpackResponse_default_instance_;
PROTOBUF_CONSTEXPR AddStarterpackItemRequest::AddStarterpackItemRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.starterpack_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.item_uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.added_by_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.item_type_)*/0
  , /*decltype(_impl_.item_order_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddStarterpackItemRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddStarterpackItemRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddStarterpackItemRequestDefaultTypeInternal() {}
  union {
    AddStarterpackItemRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddStarterpackItemRequestDefaultTypeInternal _AddStarterpackItemRequest_default_instance_;
PROTOBUF_CONSTEXPR AddStarterpackItemResponse::AddStarterpackItemResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.item_)*/nullptr
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddStarterpackItemResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddStarterpackItemResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddStarterpackItemResponseDefaultTypeInternal() {}
  union {
    AddStarterpackItemResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddStarterpackItemResponseDefaultTypeInternal _AddStarterpackItemResponse_default_instance_;
PROTOBUF_CONSTEXPR RemoveStarterpackItemRequest::RemoveStarterpackItemRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.starterpack_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.item_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.removed_by_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RemoveStarterpackItemRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveStarterpackItemRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveStarterpackItemRequestDefaultTypeInternal() {}
  union {
    RemoveStarterpackItemRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveStarterpackItemRequestDefaultTypeInternal _RemoveStarterpackItemRequest_default_instance_;
PROTOBUF_CONSTEXPR RemoveStarterpackItemResponse::RemoveStarterpackItemResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RemoveStarterpackItemResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveStarterpackItemResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveStarterpackItemResponseDefaultTypeInternal() {}
  union {
    RemoveStarterpackItemResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveStarterpackItemResponseDefaultTypeInternal _RemoveStarterpackItemResponse_default_instance_;
PROTOBUF_CONSTEXPR GetStarterpackItemsRequest::GetStarterpackItemsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.starterpack_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.requester_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.cursor_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.limit_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetStarterpackItemsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetStarterpackItemsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetStarterpackItemsRequestDefaultTypeInternal() {}
  union {
    GetStarterpackItemsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetStarterpackItemsRequestDefaultTypeInternal _GetStarterpackItemsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetStarterpackItemsResponse::GetStarterpackItemsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_.next_cursor_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.error_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetStarterpackItemsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetStarterpackItemsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetStarterpackItemsResponseDefaultTypeInternal() {}
  union {
    GetStarterpackItemsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetStarterpackItemsResponseDefaultTypeInternal _GetStarterpackItemsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetSuggestedStarterpacksRequest::GetSuggestedStarterpacksRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.user_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.cursor_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.limit_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSuggestedStarterpacksRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSuggestedStarterpacksRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSuggestedStarterpacksRequestDefaultTypeInternal() {}
  union {
    GetSuggestedStarterpacksRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSuggestedStarterpacksRequestDefaultTypeInternal _GetSuggestedStarterpacksRequest_default_instance_;
PROTOBUF_CONSTEXPR GetSuggestedStarterpacksResponse::GetSuggestedStarterpacksResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.starterpacks_)*/{}
  , /*decltype(_impl_.next_cursor_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.error_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSuggestedStarterpacksResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSuggestedStarterpacksResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSuggestedStarterpacksResponseDefaultTypeInternal() {}
  union {
    GetSuggestedStarterpacksResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSuggestedStarterpacksResponseDefaultTypeInternal _GetSuggestedStarterpacksResponse_default_instance_;
}  // namespace v1
}  // namespace starterpack
}  // namespace sonet
static ::_pb::Metadata file_level_metadata_services_2fstarterpack_5fservice_2eproto[20];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_services_2fstarterpack_5fservice_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_services_2fstarterpack_5fservice_2eproto = nullptr;

const uint32_t TableStruct_services_2fstarterpack_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::Starterpack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::Starterpack, _impl_.starterpack_id_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::Starterpack, _impl_.creator_id_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::Starterpack, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::Starterpack, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::Starterpack, _impl_.avatar_url_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::Starterpack, _impl_.is_public_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::Starterpack, _impl_.created_at_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::Starterpack, _impl_.updated_at_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::Starterpack, _impl_.item_count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::StarterpackItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::StarterpackItem, _impl_.item_id_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::StarterpackItem, _impl_.starterpack_id_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::StarterpackItem, _impl_.item_type_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::StarterpackItem, _impl_.item_uri_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::StarterpackItem, _impl_.item_order_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::StarterpackItem, _impl_.created_at_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::CreateStarterpackRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::CreateStarterpackRequest, _impl_.creator_id_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::CreateStarterpackRequest, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::CreateStarterpackRequest, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::CreateStarterpackRequest, _impl_.avatar_url_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::CreateStarterpackRequest, _impl_.is_public_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::CreateStarterpackResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::CreateStarterpackResponse, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::CreateStarterpackResponse, _impl_.starterpack_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::CreateStarterpackResponse, _impl_.error_message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetStarterpackRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetStarterpackRequest, _impl_.starterpack_id_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetStarterpackRequest, _impl_.requester_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetStarterpackResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetStarterpackResponse, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetStarterpackResponse, _impl_.starterpack_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetStarterpackResponse, _impl_.error_message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetUserStarterpacksRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetUserStarterpacksRequest, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetUserStarterpacksRequest, _impl_.requester_id_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetUserStarterpacksRequest, _impl_.limit_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetUserStarterpacksRequest, _impl_.cursor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetUserStarterpacksResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetUserStarterpacksResponse, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetUserStarterpacksResponse, _impl_.starterpacks_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetUserStarterpacksResponse, _impl_.next_cursor_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetUserStarterpacksResponse, _impl_.error_message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::UpdateStarterpackRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::UpdateStarterpackRequest, _impl_.starterpack_id_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::UpdateStarterpackRequest, _impl_.requester_id_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::UpdateStarterpackRequest, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::UpdateStarterpackRequest, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::UpdateStarterpackRequest, _impl_.avatar_url_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::UpdateStarterpackRequest, _impl_.is_public_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::UpdateStarterpackResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::UpdateStarterpackResponse, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::UpdateStarterpackResponse, _impl_.starterpack_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::UpdateStarterpackResponse, _impl_.error_message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::DeleteStarterpackRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::DeleteStarterpackRequest, _impl_.starterpack_id_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::DeleteStarterpackRequest, _impl_.requester_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::DeleteStarterpackResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::DeleteStarterpackResponse, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::DeleteStarterpackResponse, _impl_.error_message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::AddStarterpackItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::AddStarterpackItemRequest, _impl_.starterpack_id_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::AddStarterpackItemRequest, _impl_.item_type_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::AddStarterpackItemRequest, _impl_.item_uri_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::AddStarterpackItemRequest, _impl_.item_order_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::AddStarterpackItemRequest, _impl_.added_by_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::AddStarterpackItemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::AddStarterpackItemResponse, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::AddStarterpackItemResponse, _impl_.item_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::AddStarterpackItemResponse, _impl_.error_message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::RemoveStarterpackItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::RemoveStarterpackItemRequest, _impl_.starterpack_id_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::RemoveStarterpackItemRequest, _impl_.item_id_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::RemoveStarterpackItemRequest, _impl_.removed_by_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::RemoveStarterpackItemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::RemoveStarterpackItemResponse, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::RemoveStarterpackItemResponse, _impl_.error_message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetStarterpackItemsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetStarterpackItemsRequest, _impl_.starterpack_id_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetStarterpackItemsRequest, _impl_.requester_id_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetStarterpackItemsRequest, _impl_.limit_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetStarterpackItemsRequest, _impl_.cursor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetStarterpackItemsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetStarterpackItemsResponse, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetStarterpackItemsResponse, _impl_.items_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetStarterpackItemsResponse, _impl_.next_cursor_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetStarterpackItemsResponse, _impl_.error_message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetSuggestedStarterpacksRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetSuggestedStarterpacksRequest, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetSuggestedStarterpacksRequest, _impl_.limit_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetSuggestedStarterpacksRequest, _impl_.cursor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetSuggestedStarterpacksResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetSuggestedStarterpacksResponse, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetSuggestedStarterpacksResponse, _impl_.starterpacks_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetSuggestedStarterpacksResponse, _impl_.next_cursor_),
  PROTOBUF_FIELD_OFFSET(::sonet::starterpack::v1::GetSuggestedStarterpacksResponse, _impl_.error_message_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::sonet::starterpack::v1::Starterpack)},
  { 15, -1, -1, sizeof(::sonet::starterpack::v1::StarterpackItem)},
  { 27, -1, -1, sizeof(::sonet::starterpack::v1::CreateStarterpackRequest)},
  { 38, -1, -1, sizeof(::sonet::starterpack::v1::CreateStarterpackResponse)},
  { 47, -1, -1, sizeof(::sonet::starterpack::v1::GetStarterpackRequest)},
  { 55, -1, -1, sizeof(::sonet::starterpack::v1::GetStarterpackResponse)},
  { 64, -1, -1, sizeof(::sonet::starterpack::v1::GetUserStarterpacksRequest)},
  { 74, -1, -1, sizeof(::sonet::starterpack::v1::GetUserStarterpacksResponse)},
  { 84, -1, -1, sizeof(::sonet::starterpack::v1::UpdateStarterpackRequest)},
  { 96, -1, -1, sizeof(::sonet::starterpack::v1::UpdateStarterpackResponse)},
  { 105, -1, -1, sizeof(::sonet::starterpack::v1::DeleteStarterpackRequest)},
  { 113, -1, -1, sizeof(::sonet::starterpack::v1::DeleteStarterpackResponse)},
  { 121, -1, -1, sizeof(::sonet::starterpack::v1::AddStarterpackItemRequest)},
  { 132, -1, -1, sizeof(::sonet::starterpack::v1::AddStarterpackItemResponse)},
  { 141, -1, -1, sizeof(::sonet::starterpack::v1::RemoveStarterpackItemRequest)},
  { 150, -1, -1, sizeof(::sonet::starterpack::v1::RemoveStarterpackItemResponse)},
  { 158, -1, -1, sizeof(::sonet::starterpack::v1::GetStarterpackItemsRequest)},
  { 168, -1, -1, sizeof(::sonet::starterpack::v1::GetStarterpackItemsResponse)},
  { 178, -1, -1, sizeof(::sonet::starterpack::v1::GetSuggestedStarterpacksRequest)},
  { 187, -1, -1, sizeof(::sonet::starterpack::v1::GetSuggestedStarterpacksResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::sonet::starterpack::v1::_Starterpack_default_instance_._instance,
  &::sonet::starterpack::v1::_StarterpackItem_default_instance_._instance,
  &::sonet::starterpack::v1::_CreateStarterpackRequest_default_instance_._instance,
  &::sonet::starterpack::v1::_CreateStarterpackResponse_default_instance_._instance,
  &::sonet::starterpack::v1::_GetStarterpackRequest_default_instance_._instance,
  &::sonet::starterpack::v1::_GetStarterpackResponse_default_instance_._instance,
  &::sonet::starterpack::v1::_GetUserStarterpacksRequest_default_instance_._instance,
  &::sonet::starterpack::v1::_GetUserStarterpacksResponse_default_instance_._instance,
  &::sonet::starterpack::v1::_UpdateStarterpackRequest_default_instance_._instance,
  &::sonet::starterpack::v1::_UpdateStarterpackResponse_default_instance_._instance,
  &::sonet::starterpack::v1::_DeleteStarterpackRequest_default_instance_._instance,
  &::sonet::starterpack::v1::_DeleteStarterpackResponse_default_instance_._instance,
  &::sonet::starterpack::v1::_AddStarterpackItemRequest_default_instance_._instance,
  &::sonet::starterpack::v1::_AddStarterpackItemResponse_default_instance_._instance,
  &::sonet::starterpack::v1::_RemoveStarterpackItemRequest_default_instance_._instance,
  &::sonet::starterpack::v1::_RemoveStarterpackItemResponse_default_instance_._instance,
  &::sonet::starterpack::v1::_GetStarterpackItemsRequest_default_instance_._instance,
  &::sonet::starterpack::v1::_GetStarterpackItemsResponse_default_instance_._instance,
  &::sonet::starterpack::v1::_GetSuggestedStarterpacksRequest_default_instance_._instance,
  &::sonet::starterpack::v1::_GetSuggestedStarterpacksResponse_default_instance_._instance,
};

const char descriptor_table_protodef_services_2fstarterpack_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\"services/starterpack_service.proto\022\024so"
  "net.starterpack.v1\032\037google/protobuf/time"
  "stamp.proto\"\367\001\n\013Starterpack\022\026\n\016starterpa"
  "ck_id\030\001 \001(\t\022\022\n\ncreator_id\030\002 \001(\t\022\014\n\004name\030"
  "\003 \001(\t\022\023\n\013description\030\004 \001(\t\022\022\n\navatar_url"
  "\030\005 \001(\t\022\021\n\tis_public\030\006 \001(\010\022.\n\ncreated_at\030"
  "\007 \001(\0132\032.google.protobuf.Timestamp\022.\n\nupd"
  "ated_at\030\010 \001(\0132\032.google.protobuf.Timestam"
  "p\022\022\n\nitem_count\030\t \001(\005\"\303\001\n\017StarterpackIte"
  "m\022\017\n\007item_id\030\001 \001(\t\022\026\n\016starterpack_id\030\002 \001"
  "(\t\0221\n\titem_type\030\003 \001(\0162\036.sonet.starterpac"
  "k.v1.ItemType\022\020\n\010item_uri\030\004 \001(\t\022\022\n\nitem_"
  "order\030\005 \001(\005\022.\n\ncreated_at\030\006 \001(\0132\032.google"
  ".protobuf.Timestamp\"x\n\030CreateStarterpack"
  "Request\022\022\n\ncreator_id\030\001 \001(\t\022\014\n\004name\030\002 \001("
  "\t\022\023\n\013description\030\003 \001(\t\022\022\n\navatar_url\030\004 \001"
  "(\t\022\021\n\tis_public\030\005 \001(\010\"{\n\031CreateStarterpa"
  "ckResponse\022\017\n\007success\030\001 \001(\010\0226\n\013starterpa"
  "ck\030\002 \001(\0132!.sonet.starterpack.v1.Starterp"
  "ack\022\025\n\rerror_message\030\003 \001(\t\"E\n\025GetStarter"
  "packRequest\022\026\n\016starterpack_id\030\001 \001(\t\022\024\n\014r"
  "equester_id\030\002 \001(\t\"x\n\026GetStarterpackRespo"
  "nse\022\017\n\007success\030\001 \001(\010\0226\n\013starterpack\030\002 \001("
  "\0132!.sonet.starterpack.v1.Starterpack\022\025\n\r"
  "error_message\030\003 \001(\t\"b\n\032GetUserStarterpac"
  "ksRequest\022\017\n\007user_id\030\001 \001(\t\022\024\n\014requester_"
  "id\030\002 \001(\t\022\r\n\005limit\030\003 \001(\005\022\016\n\006cursor\030\004 \001(\t\""
  "\223\001\n\033GetUserStarterpacksResponse\022\017\n\007succe"
  "ss\030\001 \001(\010\0227\n\014starterpacks\030\002 \003(\0132!.sonet.s"
  "tarterpack.v1.Starterpack\022\023\n\013next_cursor"
  "\030\003 \001(\t\022\025\n\rerror_message\030\004 \001(\t\"\222\001\n\030Update"
  "StarterpackRequest\022\026\n\016starterpack_id\030\001 \001"
  "(\t\022\024\n\014requester_id\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\022\023"
  "\n\013description\030\004 \001(\t\022\022\n\navatar_url\030\005 \001(\t\022"
  "\021\n\tis_public\030\006 \001(\010\"{\n\031UpdateStarterpackR"
  "esponse\022\017\n\007success\030\001 \001(\010\0226\n\013starterpack\030"
  "\002 \001(\0132!.sonet.starterpack.v1.Starterpack"
  "\022\025\n\rerror_message\030\003 \001(\t\"H\n\030DeleteStarter"
  "packRequest\022\026\n\016starterpack_id\030\001 \001(\t\022\024\n\014r"
  "equester_id\030\002 \001(\t\"C\n\031DeleteStarterpackRe"
  "sponse\022\017\n\007success\030\001 \001(\010\022\025\n\rerror_message"
  "\030\002 \001(\t\"\236\001\n\031AddStarterpackItemRequest\022\026\n\016"
  "starterpack_id\030\001 \001(\t\0221\n\titem_type\030\002 \001(\0162"
  "\036.sonet.starterpack.v1.ItemType\022\020\n\010item_"
  "uri\030\003 \001(\t\022\022\n\nitem_order\030\004 \001(\005\022\020\n\010added_b"
  "y\030\005 \001(\t\"y\n\032AddStarterpackItemResponse\022\017\n"
  "\007success\030\001 \001(\010\0223\n\004item\030\002 \001(\0132%.sonet.sta"
  "rterpack.v1.StarterpackItem\022\025\n\rerror_mes"
  "sage\030\003 \001(\t\"[\n\034RemoveStarterpackItemReque"
  "st\022\026\n\016starterpack_id\030\001 \001(\t\022\017\n\007item_id\030\002 "
  "\001(\t\022\022\n\nremoved_by\030\003 \001(\t\"G\n\035RemoveStarter"
  "packItemResponse\022\017\n\007success\030\001 \001(\010\022\025\n\rerr"
  "or_message\030\002 \001(\t\"i\n\032GetStarterpackItemsR"
  "equest\022\026\n\016starterpack_id\030\001 \001(\t\022\024\n\014reques"
  "ter_id\030\002 \001(\t\022\r\n\005limit\030\003 \001(\005\022\016\n\006cursor\030\004 "
  "\001(\t\"\220\001\n\033GetStarterpackItemsResponse\022\017\n\007s"
  "uccess\030\001 \001(\010\0224\n\005items\030\002 \003(\0132%.sonet.star"
  "terpack.v1.StarterpackItem\022\023\n\013next_curso"
  "r\030\003 \001(\t\022\025\n\rerror_message\030\004 \001(\t\"Q\n\037GetSug"
  "gestedStarterpacksRequest\022\017\n\007user_id\030\001 \001"
  "(\t\022\r\n\005limit\030\002 \001(\005\022\016\n\006cursor\030\003 \001(\t\"\230\001\n Ge"
  "tSuggestedStarterpacksResponse\022\017\n\007succes"
  "s\030\001 \001(\010\0227\n\014starterpacks\030\002 \003(\0132!.sonet.st"
  "arterpack.v1.Starterpack\022\023\n\013next_cursor\030"
  "\003 \001(\t\022\025\n\rerror_message\030\004 \001(\t*P\n\010ItemType"
  "\022\031\n\025ITEM_TYPE_UNSPECIFIED\020\000\022\025\n\021ITEM_TYPE"
  "_PROFILE\020\001\022\022\n\016ITEM_TYPE_FEED\020\0022\343\010\n\022Start"
  "erpackService\022t\n\021CreateStarterpack\022..son"
  "et.starterpack.v1.CreateStarterpackReque"
  "st\032/.sonet.starterpack.v1.CreateStarterp"
  "ackResponse\022k\n\016GetStarterpack\022+.sonet.st"
  "arterpack.v1.GetStarterpackRequest\032,.son"
  "et.starterpack.v1.GetStarterpackResponse"
  "\022z\n\023GetUserStarterpacks\0220.sonet.starterp"
  "ack.v1.GetUserStarterpacksRequest\0321.sone"
  "t.starterpack.v1.GetUserStarterpacksResp"
  "onse\022t\n\021UpdateStarterpack\022..sonet.starte"
  "rpack.v1.UpdateStarterpackRequest\032/.sone"
  "t.starterpack.v1.UpdateStarterpackRespon"
  "se\022t\n\021DeleteStarterpack\022..sonet.starterp"
  "ack.v1.DeleteStarterpackRequest\032/.sonet."
  "starterpack.v1.DeleteStarterpackResponse"
  "\022w\n\022AddStarterpackItem\022/.sonet.starterpa"
  "ck.v1.AddStarterpackItemRequest\0320.sonet."
  "starterpack.v1.AddStarterpackItemRespons"
  "e\022\200\001\n\025RemoveStarterpackItem\0222.sonet.star"
  "terpack.v1.RemoveStarterpackItemRequest\032"
  "3.sonet.starterpack.v1.RemoveStarterpack"
  "ItemResponse\022z\n\023GetStarterpackItems\0220.so"
  "net.starterpack.v1.GetStarterpackItemsRe"
  "quest\0321.sonet.starterpack.v1.GetStarterp"
  "ackItemsResponse\022\211\001\n\030GetSuggestedStarter"
  "packs\0225.sonet.starterpack.v1.GetSuggeste"
  "dStarterpacksRequest\0326.sonet.starterpack"
  ".v1.GetSuggestedStarterpacksResponseB.Z,"
  "sonet/src/services/starterpack_service/p"
  "rotob\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_services_2fstarterpack_5fservice_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::_pbi::once_flag descriptor_table_services_2fstarterpack_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_services_2fstarterpack_5fservice_2eproto = {
    false, false, 3852, descriptor_table_protodef_services_2fstarterpack_5fservice_2eproto,
    "services/starterpack_service.proto",
    &descriptor_table_services_2fstarterpack_5fservice_2eproto_once, descriptor_table_services_2fstarterpack_5fservice_2eproto_deps, 1, 20,
    schemas, file_default_instances, TableStruct_services_2fstarterpack_5fservice_2eproto::offsets,
    file_level_metadata_services_2fstarterpack_5fservice_2eproto, file_level_enum_descriptors_services_2fstarterpack_5fservice_2eproto,
    file_level_service_descriptors_services_2fstarterpack_5fservice_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_services_2fstarterpack_5fservice_2eproto_getter() {
  return &descriptor_table_services_2fstarterpack_5fservice_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_services_2fstarterpack_5fservice_2eproto(&descriptor_table_services_2fstarterpack_5fservice_2eproto);
namespace sonet {
namespace starterpack {
namespace v1 {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ItemType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_services_2fstarterpack_5fservice_2eproto);
  return file_level_enum_descriptors_services_2fstarterpack_5fservice_2eproto[0];
}
bool ItemType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Starterpack::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_at(const Starterpack* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& updated_at(const Starterpack* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Starterpack::_Internal::created_at(const Starterpack* msg) {
  return *msg->_impl_.created_at_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Starterpack::_Internal::updated_at(const Starterpack* msg) {
  return *msg->_impl_.updated_at_;
}
void Starterpack::clear_created_at() {
  if (GetArenaForAllocation() == nullptr && _impl_.created_at_ != nullptr) {
    delete _impl_.created_at_;
  }
  _impl_.created_at_ = nullptr;
}
void Starterpack::clear_updated_at() {
  if (GetArenaForAllocation() == nullptr && _impl_.updated_at_ != nullptr) {
    delete _impl_.updated_at_;
  }
  _impl_.updated_at_ = nullptr;
}
Starterpack::Starterpack(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.starterpack.v1.Starterpack)
}
Starterpack::Starterpack(const Starterpack& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Starterpack* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.starterpack_id_){}
    , decltype(_impl_.creator_id_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.avatar_url_){}
    , decltype(_impl_.created_at_){nullptr}
    , decltype(_impl_.updated_at_){nullptr}
    , decltype(_impl_.is_public_){}
    , decltype(_impl_.item_count_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.starterpack_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.starterpack_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_starterpack_id().empty()) {
    _this->_impl_.starterpack_id_.Set(from._internal_starterpack_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.creator_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.creator_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_creator_id().empty()) {
    _this->_impl_.creator_id_.Set(from._internal_creator_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  _impl_.avatar_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.avatar_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_avatar_url().empty()) {
    _this->_impl_.avatar_url_.Set(from._internal_avatar_url(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_created_at()) {
    _this->_impl_.created_at_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.created_at_);
  }
  if (from._internal_has_updated_at()) {
    _this->_impl_.updated_at_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.updated_at_);
  }
  ::memcpy(&_impl_.is_public_, &from._impl_.is_public_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.item_count_) -
    reinterpret_cast<char*>(&_impl_.is_public_)) + sizeof(_impl_.item_count_));
  // @@protoc_insertion_point(copy_constructor:sonet.starterpack.v1.Starterpack)
}

inline void Starterpack::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.starterpack_id_){}
    , decltype(_impl_.creator_id_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.avatar_url_){}
    , decltype(_impl_.created_at_){nullptr}
    , decltype(_impl_.updated_at_){nullptr}
    , decltype(_impl_.is_public_){false}
    , decltype(_impl_.item_count_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.starterpack_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.starterpack_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.creator_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.creator_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.avatar_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.avatar_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Starterpack::~Starterpack() {
  // @@protoc_insertion_point(destructor:sonet.starterpack.v1.Starterpack)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Starterpack::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.starterpack_id_.Destroy();
  _impl_.creator_id_.Destroy();
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
  _impl_.avatar_url_.Destroy();
  if (this != internal_default_instance()) delete _impl_.created_at_;
  if (this != internal_default_instance()) delete _impl_.updated_at_;
}

void Starterpack::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Starterpack::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.starterpack.v1.Starterpack)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.starterpack_id_.ClearToEmpty();
  _impl_.creator_id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.avatar_url_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.created_at_ != nullptr) {
    delete _impl_.created_at_;
  }
  _impl_.created_at_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.updated_at_ != nullptr) {
    delete _impl_.updated_at_;
  }
  _impl_.updated_at_ = nullptr;
  ::memset(&_impl_.is_public_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.item_count_) -
      reinterpret_cast<char*>(&_impl_.is_public_)) + sizeof(_impl_.item_count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Starterpack::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string starterpack_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_starterpack_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.Starterpack.starterpack_id"));
        } else
          goto handle_unusual;
        continue;
      // string creator_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_creator_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.Starterpack.creator_id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.Starterpack.name"));
        } else
          goto handle_unusual;
        continue;
      // string description = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.Starterpack.description"));
        } else
          goto handle_unusual;
        continue;
      // string avatar_url = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_avatar_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.Starterpack.avatar_url"));
        } else
          goto handle_unusual;
        continue;
      // bool is_public = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.is_public_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_at = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp updated_at = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated_at(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 item_count = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _impl_.item_count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Starterpack::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.starterpack.v1.Starterpack)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string starterpack_id = 1;
  if (!this->_internal_starterpack_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_starterpack_id().data(), static_cast<int>(this->_internal_starterpack_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.Starterpack.starterpack_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_starterpack_id(), target);
  }

  // string creator_id = 2;
  if (!this->_internal_creator_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_creator_id().data(), static_cast<int>(this->_internal_creator_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.Starterpack.creator_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_creator_id(), target);
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.Starterpack.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // string description = 4;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.Starterpack.description");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_description(), target);
  }

  // string avatar_url = 5;
  if (!this->_internal_avatar_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_avatar_url().data(), static_cast<int>(this->_internal_avatar_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.Starterpack.avatar_url");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_avatar_url(), target);
  }

  // bool is_public = 6;
  if (this->_internal_is_public() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_is_public(), target);
  }

  // .google.protobuf.Timestamp created_at = 7;
  if (this->_internal_has_created_at()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::created_at(this),
        _Internal::created_at(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp updated_at = 8;
  if (this->_internal_has_updated_at()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::updated_at(this),
        _Internal::updated_at(this).GetCachedSize(), target, stream);
  }

  // int32 item_count = 9;
  if (this->_internal_item_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(9, this->_internal_item_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.starterpack.v1.Starterpack)
  return target;
}

size_t Starterpack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.starterpack.v1.Starterpack)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string starterpack_id = 1;
  if (!this->_internal_starterpack_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_starterpack_id());
  }

  // string creator_id = 2;
  if (!this->_internal_creator_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_creator_id());
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 4;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string avatar_url = 5;
  if (!this->_internal_avatar_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_avatar_url());
  }

  // .google.protobuf.Timestamp created_at = 7;
  if (this->_internal_has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.created_at_);
  }

  // .google.protobuf.Timestamp updated_at = 8;
  if (this->_internal_has_updated_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.updated_at_);
  }

  // bool is_public = 6;
  if (this->_internal_is_public() != 0) {
    total_size += 1 + 1;
  }

  // int32 item_count = 9;
  if (this->_internal_item_count() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_item_count());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Starterpack::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Starterpack::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Starterpack::GetClassData() const { return &_class_data_; }


void Starterpack::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Starterpack*>(&to_msg);
  auto& from = static_cast<const Starterpack&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.starterpack.v1.Starterpack)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_starterpack_id().empty()) {
    _this->_internal_set_starterpack_id(from._internal_starterpack_id());
  }
  if (!from._internal_creator_id().empty()) {
    _this->_internal_set_creator_id(from._internal_creator_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_avatar_url().empty()) {
    _this->_internal_set_avatar_url(from._internal_avatar_url());
  }
  if (from._internal_has_created_at()) {
    _this->_internal_mutable_created_at()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_created_at());
  }
  if (from._internal_has_updated_at()) {
    _this->_internal_mutable_updated_at()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_updated_at());
  }
  if (from._internal_is_public() != 0) {
    _this->_internal_set_is_public(from._internal_is_public());
  }
  if (from._internal_item_count() != 0) {
    _this->_internal_set_item_count(from._internal_item_count());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Starterpack::CopyFrom(const Starterpack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.starterpack.v1.Starterpack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Starterpack::IsInitialized() const {
  return true;
}

void Starterpack::InternalSwap(Starterpack* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.starterpack_id_, lhs_arena,
      &other->_impl_.starterpack_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.creator_id_, lhs_arena,
      &other->_impl_.creator_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.avatar_url_, lhs_arena,
      &other->_impl_.avatar_url_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Starterpack, _impl_.item_count_)
      + sizeof(Starterpack::_impl_.item_count_)
      - PROTOBUF_FIELD_OFFSET(Starterpack, _impl_.created_at_)>(
          reinterpret_cast<char*>(&_impl_.created_at_),
          reinterpret_cast<char*>(&other->_impl_.created_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Starterpack::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fstarterpack_5fservice_2eproto_getter, &descriptor_table_services_2fstarterpack_5fservice_2eproto_once,
      file_level_metadata_services_2fstarterpack_5fservice_2eproto[0]);
}

// ===================================================================

class StarterpackItem::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_at(const StarterpackItem* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Timestamp&
StarterpackItem::_Internal::created_at(const StarterpackItem* msg) {
  return *msg->_impl_.created_at_;
}
void StarterpackItem::clear_created_at() {
  if (GetArenaForAllocation() == nullptr && _impl_.created_at_ != nullptr) {
    delete _impl_.created_at_;
  }
  _impl_.created_at_ = nullptr;
}
StarterpackItem::StarterpackItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.starterpack.v1.StarterpackItem)
}
StarterpackItem::StarterpackItem(const StarterpackItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StarterpackItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_){}
    , decltype(_impl_.starterpack_id_){}
    , decltype(_impl_.item_uri_){}
    , decltype(_impl_.created_at_){nullptr}
    , decltype(_impl_.item_type_){}
    , decltype(_impl_.item_order_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.item_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.item_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_item_id().empty()) {
    _this->_impl_.item_id_.Set(from._internal_item_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.starterpack_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.starterpack_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_starterpack_id().empty()) {
    _this->_impl_.starterpack_id_.Set(from._internal_starterpack_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.item_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.item_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_item_uri().empty()) {
    _this->_impl_.item_uri_.Set(from._internal_item_uri(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_created_at()) {
    _this->_impl_.created_at_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.created_at_);
  }
  ::memcpy(&_impl_.item_type_, &from._impl_.item_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.item_order_) -
    reinterpret_cast<char*>(&_impl_.item_type_)) + sizeof(_impl_.item_order_));
  // @@protoc_insertion_point(copy_constructor:sonet.starterpack.v1.StarterpackItem)
}

inline void StarterpackItem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_id_){}
    , decltype(_impl_.starterpack_id_){}
    , decltype(_impl_.item_uri_){}
    , decltype(_impl_.created_at_){nullptr}
    , decltype(_impl_.item_type_){0}
    , decltype(_impl_.item_order_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.item_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.item_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.starterpack_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.starterpack_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.item_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.item_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StarterpackItem::~StarterpackItem() {
  // @@protoc_insertion_point(destructor:sonet.starterpack.v1.StarterpackItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StarterpackItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.item_id_.Destroy();
  _impl_.starterpack_id_.Destroy();
  _impl_.item_uri_.Destroy();
  if (this != internal_default_instance()) delete _impl_.created_at_;
}

void StarterpackItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StarterpackItem::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.starterpack.v1.StarterpackItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.item_id_.ClearToEmpty();
  _impl_.starterpack_id_.ClearToEmpty();
  _impl_.item_uri_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.created_at_ != nullptr) {
    delete _impl_.created_at_;
  }
  _impl_.created_at_ = nullptr;
  ::memset(&_impl_.item_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.item_order_) -
      reinterpret_cast<char*>(&_impl_.item_type_)) + sizeof(_impl_.item_order_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StarterpackItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string item_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_item_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.StarterpackItem.item_id"));
        } else
          goto handle_unusual;
        continue;
      // string starterpack_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_starterpack_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.StarterpackItem.starterpack_id"));
        } else
          goto handle_unusual;
        continue;
      // .sonet.starterpack.v1.ItemType item_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_item_type(static_cast<::sonet::starterpack::v1::ItemType>(val));
        } else
          goto handle_unusual;
        continue;
      // string item_uri = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_item_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.StarterpackItem.item_uri"));
        } else
          goto handle_unusual;
        continue;
      // int32 item_order = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.item_order_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_at = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StarterpackItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.starterpack.v1.StarterpackItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string item_id = 1;
  if (!this->_internal_item_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_item_id().data(), static_cast<int>(this->_internal_item_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.StarterpackItem.item_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_item_id(), target);
  }

  // string starterpack_id = 2;
  if (!this->_internal_starterpack_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_starterpack_id().data(), static_cast<int>(this->_internal_starterpack_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.StarterpackItem.starterpack_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_starterpack_id(), target);
  }

  // .sonet.starterpack.v1.ItemType item_type = 3;
  if (this->_internal_item_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_item_type(), target);
  }

  // string item_uri = 4;
  if (!this->_internal_item_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_item_uri().data(), static_cast<int>(this->_internal_item_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.StarterpackItem.item_uri");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_item_uri(), target);
  }

  // int32 item_order = 5;
  if (this->_internal_item_order() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_item_order(), target);
  }

  // .google.protobuf.Timestamp created_at = 6;
  if (this->_internal_has_created_at()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::created_at(this),
        _Internal::created_at(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.starterpack.v1.StarterpackItem)
  return target;
}

size_t StarterpackItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.starterpack.v1.StarterpackItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string item_id = 1;
  if (!this->_internal_item_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_item_id());
  }

  // string starterpack_id = 2;
  if (!this->_internal_starterpack_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_starterpack_id());
  }

  // string item_uri = 4;
  if (!this->_internal_item_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_item_uri());
  }

  // .google.protobuf.Timestamp created_at = 6;
  if (this->_internal_has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.created_at_);
  }

  // .sonet.starterpack.v1.ItemType item_type = 3;
  if (this->_internal_item_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_item_type());
  }

  // int32 item_order = 5;
  if (this->_internal_item_order() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_item_order());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StarterpackItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StarterpackItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StarterpackItem::GetClassData() const { return &_class_data_; }


void StarterpackItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StarterpackItem*>(&to_msg);
  auto& from = static_cast<const StarterpackItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.starterpack.v1.StarterpackItem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_item_id().empty()) {
    _this->_internal_set_item_id(from._internal_item_id());
  }
  if (!from._internal_starterpack_id().empty()) {
    _this->_internal_set_starterpack_id(from._internal_starterpack_id());
  }
  if (!from._internal_item_uri().empty()) {
    _this->_internal_set_item_uri(from._internal_item_uri());
  }
  if (from._internal_has_created_at()) {
    _this->_internal_mutable_created_at()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_created_at());
  }
  if (from._internal_item_type() != 0) {
    _this->_internal_set_item_type(from._internal_item_type());
  }
  if (from._internal_item_order() != 0) {
    _this->_internal_set_item_order(from._internal_item_order());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StarterpackItem::CopyFrom(const StarterpackItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.starterpack.v1.StarterpackItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StarterpackItem::IsInitialized() const {
  return true;
}

void StarterpackItem::InternalSwap(StarterpackItem* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.item_id_, lhs_arena,
      &other->_impl_.item_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.starterpack_id_, lhs_arena,
      &other->_impl_.starterpack_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.item_uri_, lhs_arena,
      &other->_impl_.item_uri_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StarterpackItem, _impl_.item_order_)
      + sizeof(StarterpackItem::_impl_.item_order_)
      - PROTOBUF_FIELD_OFFSET(StarterpackItem, _impl_.created_at_)>(
          reinterpret_cast<char*>(&_impl_.created_at_),
          reinterpret_cast<char*>(&other->_impl_.created_at_));
}

::PROTOBUF_NAMESPACE_ID::Metadata StarterpackItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fstarterpack_5fservice_2eproto_getter, &descriptor_table_services_2fstarterpack_5fservice_2eproto_once,
      file_level_metadata_services_2fstarterpack_5fservice_2eproto[1]);
}

// ===================================================================

class CreateStarterpackRequest::_Internal {
 public:
};

CreateStarterpackRequest::CreateStarterpackRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.starterpack.v1.CreateStarterpackRequest)
}
CreateStarterpackRequest::CreateStarterpackRequest(const CreateStarterpackRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateStarterpackRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.creator_id_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.avatar_url_){}
    , decltype(_impl_.is_public_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.creator_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.creator_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_creator_id().empty()) {
    _this->_impl_.creator_id_.Set(from._internal_creator_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  _impl_.avatar_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.avatar_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_avatar_url().empty()) {
    _this->_impl_.avatar_url_.Set(from._internal_avatar_url(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.is_public_ = from._impl_.is_public_;
  // @@protoc_insertion_point(copy_constructor:sonet.starterpack.v1.CreateStarterpackRequest)
}

inline void CreateStarterpackRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.creator_id_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.avatar_url_){}
    , decltype(_impl_.is_public_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.creator_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.creator_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.avatar_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.avatar_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateStarterpackRequest::~CreateStarterpackRequest() {
  // @@protoc_insertion_point(destructor:sonet.starterpack.v1.CreateStarterpackRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateStarterpackRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.creator_id_.Destroy();
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
  _impl_.avatar_url_.Destroy();
}

void CreateStarterpackRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateStarterpackRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.starterpack.v1.CreateStarterpackRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.creator_id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.avatar_url_.ClearToEmpty();
  _impl_.is_public_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateStarterpackRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string creator_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_creator_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.CreateStarterpackRequest.creator_id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.CreateStarterpackRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.CreateStarterpackRequest.description"));
        } else
          goto handle_unusual;
        continue;
      // string avatar_url = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_avatar_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.CreateStarterpackRequest.avatar_url"));
        } else
          goto handle_unusual;
        continue;
      // bool is_public = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.is_public_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateStarterpackRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.starterpack.v1.CreateStarterpackRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string creator_id = 1;
  if (!this->_internal_creator_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_creator_id().data(), static_cast<int>(this->_internal_creator_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.CreateStarterpackRequest.creator_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_creator_id(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.CreateStarterpackRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.CreateStarterpackRequest.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // string avatar_url = 4;
  if (!this->_internal_avatar_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_avatar_url().data(), static_cast<int>(this->_internal_avatar_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.CreateStarterpackRequest.avatar_url");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_avatar_url(), target);
  }

  // bool is_public = 5;
  if (this->_internal_is_public() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_is_public(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.starterpack.v1.CreateStarterpackRequest)
  return target;
}

size_t CreateStarterpackRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.starterpack.v1.CreateStarterpackRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string creator_id = 1;
  if (!this->_internal_creator_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_creator_id());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 3;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string avatar_url = 4;
  if (!this->_internal_avatar_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_avatar_url());
  }

  // bool is_public = 5;
  if (this->_internal_is_public() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateStarterpackRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateStarterpackRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateStarterpackRequest::GetClassData() const { return &_class_data_; }


void CreateStarterpackRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateStarterpackRequest*>(&to_msg);
  auto& from = static_cast<const CreateStarterpackRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.starterpack.v1.CreateStarterpackRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_creator_id().empty()) {
    _this->_internal_set_creator_id(from._internal_creator_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_avatar_url().empty()) {
    _this->_internal_set_avatar_url(from._internal_avatar_url());
  }
  if (from._internal_is_public() != 0) {
    _this->_internal_set_is_public(from._internal_is_public());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateStarterpackRequest::CopyFrom(const CreateStarterpackRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.starterpack.v1.CreateStarterpackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateStarterpackRequest::IsInitialized() const {
  return true;
}

void CreateStarterpackRequest::InternalSwap(CreateStarterpackRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.creator_id_, lhs_arena,
      &other->_impl_.creator_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.avatar_url_, lhs_arena,
      &other->_impl_.avatar_url_, rhs_arena
  );
  swap(_impl_.is_public_, other->_impl_.is_public_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateStarterpackRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fstarterpack_5fservice_2eproto_getter, &descriptor_table_services_2fstarterpack_5fservice_2eproto_once,
      file_level_metadata_services_2fstarterpack_5fservice_2eproto[2]);
}

// ===================================================================

class CreateStarterpackResponse::_Internal {
 public:
  static const ::sonet::starterpack::v1::Starterpack& starterpack(const CreateStarterpackResponse* msg);
};

const ::sonet::starterpack::v1::Starterpack&
CreateStarterpackResponse::_Internal::starterpack(const CreateStarterpackResponse* msg) {
  return *msg->_impl_.starterpack_;
}
CreateStarterpackResponse::CreateStarterpackResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.starterpack.v1.CreateStarterpackResponse)
}
CreateStarterpackResponse::CreateStarterpackResponse(const CreateStarterpackResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateStarterpackResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , decltype(_impl_.starterpack_){nullptr}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_starterpack()) {
    _this->_impl_.starterpack_ = new ::sonet::starterpack::v1::Starterpack(*from._impl_.starterpack_);
  }
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:sonet.starterpack.v1.CreateStarterpackResponse)
}

inline void CreateStarterpackResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , decltype(_impl_.starterpack_){nullptr}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateStarterpackResponse::~CreateStarterpackResponse() {
  // @@protoc_insertion_point(destructor:sonet.starterpack.v1.CreateStarterpackResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateStarterpackResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.starterpack_;
}

void CreateStarterpackResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateStarterpackResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.starterpack.v1.CreateStarterpackResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.starterpack_ != nullptr) {
    delete _impl_.starterpack_;
  }
  _impl_.starterpack_ = nullptr;
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateStarterpackResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .sonet.starterpack.v1.Starterpack starterpack = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_starterpack(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error_message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.CreateStarterpackResponse.error_message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateStarterpackResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.starterpack.v1.CreateStarterpackResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // .sonet.starterpack.v1.Starterpack starterpack = 2;
  if (this->_internal_has_starterpack()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::starterpack(this),
        _Internal::starterpack(this).GetCachedSize(), target, stream);
  }

  // string error_message = 3;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.CreateStarterpackResponse.error_message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_error_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.starterpack.v1.CreateStarterpackResponse)
  return target;
}

size_t CreateStarterpackResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.starterpack.v1.CreateStarterpackResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_message = 3;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // .sonet.starterpack.v1.Starterpack starterpack = 2;
  if (this->_internal_has_starterpack()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.starterpack_);
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateStarterpackResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateStarterpackResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateStarterpackResponse::GetClassData() const { return &_class_data_; }


void CreateStarterpackResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateStarterpackResponse*>(&to_msg);
  auto& from = static_cast<const CreateStarterpackResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.starterpack.v1.CreateStarterpackResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_has_starterpack()) {
    _this->_internal_mutable_starterpack()->::sonet::starterpack::v1::Starterpack::MergeFrom(
        from._internal_starterpack());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateStarterpackResponse::CopyFrom(const CreateStarterpackResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.starterpack.v1.CreateStarterpackResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateStarterpackResponse::IsInitialized() const {
  return true;
}

void CreateStarterpackResponse::InternalSwap(CreateStarterpackResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_message_, lhs_arena,
      &other->_impl_.error_message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateStarterpackResponse, _impl_.success_)
      + sizeof(CreateStarterpackResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(CreateStarterpackResponse, _impl_.starterpack_)>(
          reinterpret_cast<char*>(&_impl_.starterpack_),
          reinterpret_cast<char*>(&other->_impl_.starterpack_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateStarterpackResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fstarterpack_5fservice_2eproto_getter, &descriptor_table_services_2fstarterpack_5fservice_2eproto_once,
      file_level_metadata_services_2fstarterpack_5fservice_2eproto[3]);
}

// ===================================================================

class GetStarterpackRequest::_Internal {
 public:
};

GetStarterpackRequest::GetStarterpackRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.starterpack.v1.GetStarterpackRequest)
}
GetStarterpackRequest::GetStarterpackRequest(const GetStarterpackRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetStarterpackRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.starterpack_id_){}
    , decltype(_impl_.requester_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.starterpack_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.starterpack_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_starterpack_id().empty()) {
    _this->_impl_.starterpack_id_.Set(from._internal_starterpack_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.requester_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.requester_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_requester_id().empty()) {
    _this->_impl_.requester_id_.Set(from._internal_requester_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:sonet.starterpack.v1.GetStarterpackRequest)
}

inline void GetStarterpackRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.starterpack_id_){}
    , decltype(_impl_.requester_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.starterpack_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.starterpack_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.requester_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.requester_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetStarterpackRequest::~GetStarterpackRequest() {
  // @@protoc_insertion_point(destructor:sonet.starterpack.v1.GetStarterpackRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetStarterpackRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.starterpack_id_.Destroy();
  _impl_.requester_id_.Destroy();
}

void GetStarterpackRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetStarterpackRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.starterpack.v1.GetStarterpackRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.starterpack_id_.ClearToEmpty();
  _impl_.requester_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStarterpackRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string starterpack_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_starterpack_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.GetStarterpackRequest.starterpack_id"));
        } else
          goto handle_unusual;
        continue;
      // string requester_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_requester_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.GetStarterpackRequest.requester_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetStarterpackRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.starterpack.v1.GetStarterpackRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string starterpack_id = 1;
  if (!this->_internal_starterpack_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_starterpack_id().data(), static_cast<int>(this->_internal_starterpack_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.GetStarterpackRequest.starterpack_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_starterpack_id(), target);
  }

  // string requester_id = 2;
  if (!this->_internal_requester_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requester_id().data(), static_cast<int>(this->_internal_requester_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.GetStarterpackRequest.requester_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_requester_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.starterpack.v1.GetStarterpackRequest)
  return target;
}

size_t GetStarterpackRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.starterpack.v1.GetStarterpackRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string starterpack_id = 1;
  if (!this->_internal_starterpack_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_starterpack_id());
  }

  // string requester_id = 2;
  if (!this->_internal_requester_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requester_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetStarterpackRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetStarterpackRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetStarterpackRequest::GetClassData() const { return &_class_data_; }


void GetStarterpackRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetStarterpackRequest*>(&to_msg);
  auto& from = static_cast<const GetStarterpackRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.starterpack.v1.GetStarterpackRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_starterpack_id().empty()) {
    _this->_internal_set_starterpack_id(from._internal_starterpack_id());
  }
  if (!from._internal_requester_id().empty()) {
    _this->_internal_set_requester_id(from._internal_requester_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetStarterpackRequest::CopyFrom(const GetStarterpackRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.starterpack.v1.GetStarterpackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStarterpackRequest::IsInitialized() const {
  return true;
}

void GetStarterpackRequest::InternalSwap(GetStarterpackRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.starterpack_id_, lhs_arena,
      &other->_impl_.starterpack_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.requester_id_, lhs_arena,
      &other->_impl_.requester_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStarterpackRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fstarterpack_5fservice_2eproto_getter, &descriptor_table_services_2fstarterpack_5fservice_2eproto_once,
      file_level_metadata_services_2fstarterpack_5fservice_2eproto[4]);
}

// ===================================================================

class GetStarterpackResponse::_Internal {
 public:
  static const ::sonet::starterpack::v1::Starterpack& starterpack(const GetStarterpackResponse* msg);
};

const ::sonet::starterpack::v1::Starterpack&
GetStarterpackResponse::_Internal::starterpack(const GetStarterpackResponse* msg) {
  return *msg->_impl_.starterpack_;
}
GetStarterpackResponse::GetStarterpackResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.starterpack.v1.GetStarterpackResponse)
}
GetStarterpackResponse::GetStarterpackResponse(const GetStarterpackResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetStarterpackResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , decltype(_impl_.starterpack_){nullptr}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_starterpack()) {
    _this->_impl_.starterpack_ = new ::sonet::starterpack::v1::Starterpack(*from._impl_.starterpack_);
  }
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:sonet.starterpack.v1.GetStarterpackResponse)
}

inline void GetStarterpackResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , decltype(_impl_.starterpack_){nullptr}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetStarterpackResponse::~GetStarterpackResponse() {
  // @@protoc_insertion_point(destructor:sonet.starterpack.v1.GetStarterpackResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetStarterpackResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.starterpack_;
}

void GetStarterpackResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetStarterpackResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.starterpack.v1.GetStarterpackResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.starterpack_ != nullptr) {
    delete _impl_.starterpack_;
  }
  _impl_.starterpack_ = nullptr;
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStarterpackResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .sonet.starterpack.v1.Starterpack starterpack = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_starterpack(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error_message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.GetStarterpackResponse.error_message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetStarterpackResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.starterpack.v1.GetStarterpackResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // .sonet.starterpack.v1.Starterpack starterpack = 2;
  if (this->_internal_has_starterpack()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::starterpack(this),
        _Internal::starterpack(this).GetCachedSize(), target, stream);
  }

  // string error_message = 3;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.GetStarterpackResponse.error_message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_error_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.starterpack.v1.GetStarterpackResponse)
  return target;
}

size_t GetStarterpackResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.starterpack.v1.GetStarterpackResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_message = 3;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // .sonet.starterpack.v1.Starterpack starterpack = 2;
  if (this->_internal_has_starterpack()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.starterpack_);
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetStarterpackResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetStarterpackResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetStarterpackResponse::GetClassData() const { return &_class_data_; }


void GetStarterpackResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetStarterpackResponse*>(&to_msg);
  auto& from = static_cast<const GetStarterpackResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.starterpack.v1.GetStarterpackResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_has_starterpack()) {
    _this->_internal_mutable_starterpack()->::sonet::starterpack::v1::Starterpack::MergeFrom(
        from._internal_starterpack());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetStarterpackResponse::CopyFrom(const GetStarterpackResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.starterpack.v1.GetStarterpackResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStarterpackResponse::IsInitialized() const {
  return true;
}

void GetStarterpackResponse::InternalSwap(GetStarterpackResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_message_, lhs_arena,
      &other->_impl_.error_message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetStarterpackResponse, _impl_.success_)
      + sizeof(GetStarterpackResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(GetStarterpackResponse, _impl_.starterpack_)>(
          reinterpret_cast<char*>(&_impl_.starterpack_),
          reinterpret_cast<char*>(&other->_impl_.starterpack_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStarterpackResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fstarterpack_5fservice_2eproto_getter, &descriptor_table_services_2fstarterpack_5fservice_2eproto_once,
      file_level_metadata_services_2fstarterpack_5fservice_2eproto[5]);
}

// ===================================================================

class GetUserStarterpacksRequest::_Internal {
 public:
};

GetUserStarterpacksRequest::GetUserStarterpacksRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.starterpack.v1.GetUserStarterpacksRequest)
}
GetUserStarterpacksRequest::GetUserStarterpacksRequest(const GetUserStarterpacksRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetUserStarterpacksRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , decltype(_impl_.requester_id_){}
    , decltype(_impl_.cursor_){}
    , decltype(_impl_.limit_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    _this->_impl_.user_id_.Set(from._internal_user_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.requester_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.requester_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_requester_id().empty()) {
    _this->_impl_.requester_id_.Set(from._internal_requester_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.cursor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cursor_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cursor().empty()) {
    _this->_impl_.cursor_.Set(from._internal_cursor(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.limit_ = from._impl_.limit_;
  // @@protoc_insertion_point(copy_constructor:sonet.starterpack.v1.GetUserStarterpacksRequest)
}

inline void GetUserStarterpacksRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , decltype(_impl_.requester_id_){}
    , decltype(_impl_.cursor_){}
    , decltype(_impl_.limit_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.requester_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.requester_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.cursor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cursor_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetUserStarterpacksRequest::~GetUserStarterpacksRequest() {
  // @@protoc_insertion_point(destructor:sonet.starterpack.v1.GetUserStarterpacksRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetUserStarterpacksRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.user_id_.Destroy();
  _impl_.requester_id_.Destroy();
  _impl_.cursor_.Destroy();
}

void GetUserStarterpacksRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetUserStarterpacksRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.starterpack.v1.GetUserStarterpacksRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  _impl_.requester_id_.ClearToEmpty();
  _impl_.cursor_.ClearToEmpty();
  _impl_.limit_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetUserStarterpacksRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.GetUserStarterpacksRequest.user_id"));
        } else
          goto handle_unusual;
        continue;
      // string requester_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_requester_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.GetUserStarterpacksRequest.requester_id"));
        } else
          goto handle_unusual;
        continue;
      // int32 limit = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string cursor = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_cursor();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.GetUserStarterpacksRequest.cursor"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetUserStarterpacksRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.starterpack.v1.GetUserStarterpacksRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.GetUserStarterpacksRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  // string requester_id = 2;
  if (!this->_internal_requester_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requester_id().data(), static_cast<int>(this->_internal_requester_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.GetUserStarterpacksRequest.requester_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_requester_id(), target);
  }

  // int32 limit = 3;
  if (this->_internal_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_limit(), target);
  }

  // string cursor = 4;
  if (!this->_internal_cursor().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cursor().data(), static_cast<int>(this->_internal_cursor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.GetUserStarterpacksRequest.cursor");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_cursor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.starterpack.v1.GetUserStarterpacksRequest)
  return target;
}

size_t GetUserStarterpacksRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.starterpack.v1.GetUserStarterpacksRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_id = 1;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  // string requester_id = 2;
  if (!this->_internal_requester_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requester_id());
  }

  // string cursor = 4;
  if (!this->_internal_cursor().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cursor());
  }

  // int32 limit = 3;
  if (this->_internal_limit() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_limit());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetUserStarterpacksRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetUserStarterpacksRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetUserStarterpacksRequest::GetClassData() const { return &_class_data_; }


void GetUserStarterpacksRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetUserStarterpacksRequest*>(&to_msg);
  auto& from = static_cast<const GetUserStarterpacksRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.starterpack.v1.GetUserStarterpacksRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_requester_id().empty()) {
    _this->_internal_set_requester_id(from._internal_requester_id());
  }
  if (!from._internal_cursor().empty()) {
    _this->_internal_set_cursor(from._internal_cursor());
  }
  if (from._internal_limit() != 0) {
    _this->_internal_set_limit(from._internal_limit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetUserStarterpacksRequest::CopyFrom(const GetUserStarterpacksRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.starterpack.v1.GetUserStarterpacksRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserStarterpacksRequest::IsInitialized() const {
  return true;
}

void GetUserStarterpacksRequest::InternalSwap(GetUserStarterpacksRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_id_, lhs_arena,
      &other->_impl_.user_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.requester_id_, lhs_arena,
      &other->_impl_.requester_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.cursor_, lhs_arena,
      &other->_impl_.cursor_, rhs_arena
  );
  swap(_impl_.limit_, other->_impl_.limit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetUserStarterpacksRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fstarterpack_5fservice_2eproto_getter, &descriptor_table_services_2fstarterpack_5fservice_2eproto_once,
      file_level_metadata_services_2fstarterpack_5fservice_2eproto[6]);
}

// ===================================================================

class GetUserStarterpacksResponse::_Internal {
 public:
};

GetUserStarterpacksResponse::GetUserStarterpacksResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.starterpack.v1.GetUserStarterpacksResponse)
}
GetUserStarterpacksResponse::GetUserStarterpacksResponse(const GetUserStarterpacksResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetUserStarterpacksResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.starterpacks_){from._impl_.starterpacks_}
    , decltype(_impl_.next_cursor_){}
    , decltype(_impl_.error_message_){}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.next_cursor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_cursor_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_cursor().empty()) {
    _this->_impl_.next_cursor_.Set(from._internal_next_cursor(), 
      _this->GetArenaForAllocation());
  }
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:sonet.starterpack.v1.GetUserStarterpacksResponse)
}

inline void GetUserStarterpacksResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.starterpacks_){arena}
    , decltype(_impl_.next_cursor_){}
    , decltype(_impl_.error_message_){}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.next_cursor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_cursor_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetUserStarterpacksResponse::~GetUserStarterpacksResponse() {
  // @@protoc_insertion_point(destructor:sonet.starterpack.v1.GetUserStarterpacksResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetUserStarterpacksResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.starterpacks_.~RepeatedPtrField();
  _impl_.next_cursor_.Destroy();
  _impl_.error_message_.Destroy();
}

void GetUserStarterpacksResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetUserStarterpacksResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.starterpack.v1.GetUserStarterpacksResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.starterpacks_.Clear();
  _impl_.next_cursor_.ClearToEmpty();
  _impl_.error_message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetUserStarterpacksResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .sonet.starterpack.v1.Starterpack starterpacks = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_starterpacks(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_cursor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_next_cursor();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.GetUserStarterpacksResponse.next_cursor"));
        } else
          goto handle_unusual;
        continue;
      // string error_message = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.GetUserStarterpacksResponse.error_message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetUserStarterpacksResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.starterpack.v1.GetUserStarterpacksResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // repeated .sonet.starterpack.v1.Starterpack starterpacks = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_starterpacks_size()); i < n; i++) {
    const auto& repfield = this->_internal_starterpacks(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string next_cursor = 3;
  if (!this->_internal_next_cursor().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_cursor().data(), static_cast<int>(this->_internal_next_cursor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.GetUserStarterpacksResponse.next_cursor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_next_cursor(), target);
  }

  // string error_message = 4;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.GetUserStarterpacksResponse.error_message");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_error_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.starterpack.v1.GetUserStarterpacksResponse)
  return target;
}

size_t GetUserStarterpacksResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.starterpack.v1.GetUserStarterpacksResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sonet.starterpack.v1.Starterpack starterpacks = 2;
  total_size += 1UL * this->_internal_starterpacks_size();
  for (const auto& msg : this->_impl_.starterpacks_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_cursor = 3;
  if (!this->_internal_next_cursor().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_cursor());
  }

  // string error_message = 4;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetUserStarterpacksResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetUserStarterpacksResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetUserStarterpacksResponse::GetClassData() const { return &_class_data_; }


void GetUserStarterpacksResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetUserStarterpacksResponse*>(&to_msg);
  auto& from = static_cast<const GetUserStarterpacksResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.starterpack.v1.GetUserStarterpacksResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.starterpacks_.MergeFrom(from._impl_.starterpacks_);
  if (!from._internal_next_cursor().empty()) {
    _this->_internal_set_next_cursor(from._internal_next_cursor());
  }
  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetUserStarterpacksResponse::CopyFrom(const GetUserStarterpacksResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.starterpack.v1.GetUserStarterpacksResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserStarterpacksResponse::IsInitialized() const {
  return true;
}

void GetUserStarterpacksResponse::InternalSwap(GetUserStarterpacksResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.starterpacks_.InternalSwap(&other->_impl_.starterpacks_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.next_cursor_, lhs_arena,
      &other->_impl_.next_cursor_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_message_, lhs_arena,
      &other->_impl_.error_message_, rhs_arena
  );
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetUserStarterpacksResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fstarterpack_5fservice_2eproto_getter, &descriptor_table_services_2fstarterpack_5fservice_2eproto_once,
      file_level_metadata_services_2fstarterpack_5fservice_2eproto[7]);
}

// ===================================================================

class UpdateStarterpackRequest::_Internal {
 public:
};

UpdateStarterpackRequest::UpdateStarterpackRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.starterpack.v1.UpdateStarterpackRequest)
}
UpdateStarterpackRequest::UpdateStarterpackRequest(const UpdateStarterpackRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateStarterpackRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.starterpack_id_){}
    , decltype(_impl_.requester_id_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.avatar_url_){}
    , decltype(_impl_.is_public_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.starterpack_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.starterpack_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_starterpack_id().empty()) {
    _this->_impl_.starterpack_id_.Set(from._internal_starterpack_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.requester_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.requester_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_requester_id().empty()) {
    _this->_impl_.requester_id_.Set(from._internal_requester_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  _impl_.avatar_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.avatar_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_avatar_url().empty()) {
    _this->_impl_.avatar_url_.Set(from._internal_avatar_url(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.is_public_ = from._impl_.is_public_;
  // @@protoc_insertion_point(copy_constructor:sonet.starterpack.v1.UpdateStarterpackRequest)
}

inline void UpdateStarterpackRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.starterpack_id_){}
    , decltype(_impl_.requester_id_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.avatar_url_){}
    , decltype(_impl_.is_public_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.starterpack_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.starterpack_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.requester_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.requester_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.avatar_url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.avatar_url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateStarterpackRequest::~UpdateStarterpackRequest() {
  // @@protoc_insertion_point(destructor:sonet.starterpack.v1.UpdateStarterpackRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateStarterpackRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.starterpack_id_.Destroy();
  _impl_.requester_id_.Destroy();
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
  _impl_.avatar_url_.Destroy();
}

void UpdateStarterpackRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateStarterpackRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.starterpack.v1.UpdateStarterpackRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.starterpack_id_.ClearToEmpty();
  _impl_.requester_id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.avatar_url_.ClearToEmpty();
  _impl_.is_public_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateStarterpackRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string starterpack_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_starterpack_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.UpdateStarterpackRequest.starterpack_id"));
        } else
          goto handle_unusual;
        continue;
      // string requester_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_requester_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.UpdateStarterpackRequest.requester_id"));
        } else
          goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.UpdateStarterpackRequest.name"));
        } else
          goto handle_unusual;
        continue;
      // string description = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.UpdateStarterpackRequest.description"));
        } else
          goto handle_unusual;
        continue;
      // string avatar_url = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_avatar_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.UpdateStarterpackRequest.avatar_url"));
        } else
          goto handle_unusual;
        continue;
      // bool is_public = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.is_public_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateStarterpackRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.starterpack.v1.UpdateStarterpackRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string starterpack_id = 1;
  if (!this->_internal_starterpack_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_starterpack_id().data(), static_cast<int>(this->_internal_starterpack_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.UpdateStarterpackRequest.starterpack_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_starterpack_id(), target);
  }

  // string requester_id = 2;
  if (!this->_internal_requester_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requester_id().data(), static_cast<int>(this->_internal_requester_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.UpdateStarterpackRequest.requester_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_requester_id(), target);
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.UpdateStarterpackRequest.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // string description = 4;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.UpdateStarterpackRequest.description");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_description(), target);
  }

  // string avatar_url = 5;
  if (!this->_internal_avatar_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_avatar_url().data(), static_cast<int>(this->_internal_avatar_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.UpdateStarterpackRequest.avatar_url");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_avatar_url(), target);
  }

  // bool is_public = 6;
  if (this->_internal_is_public() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_is_public(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.starterpack.v1.UpdateStarterpackRequest)
  return target;
}

size_t UpdateStarterpackRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.starterpack.v1.UpdateStarterpackRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string starterpack_id = 1;
  if (!this->_internal_starterpack_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_starterpack_id());
  }

  // string requester_id = 2;
  if (!this->_internal_requester_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requester_id());
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 4;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string avatar_url = 5;
  if (!this->_internal_avatar_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_avatar_url());
  }

  // bool is_public = 6;
  if (this->_internal_is_public() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateStarterpackRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateStarterpackRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateStarterpackRequest::GetClassData() const { return &_class_data_; }


void UpdateStarterpackRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateStarterpackRequest*>(&to_msg);
  auto& from = static_cast<const UpdateStarterpackRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.starterpack.v1.UpdateStarterpackRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_starterpack_id().empty()) {
    _this->_internal_set_starterpack_id(from._internal_starterpack_id());
  }
  if (!from._internal_requester_id().empty()) {
    _this->_internal_set_requester_id(from._internal_requester_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_avatar_url().empty()) {
    _this->_internal_set_avatar_url(from._internal_avatar_url());
  }
  if (from._internal_is_public() != 0) {
    _this->_internal_set_is_public(from._internal_is_public());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateStarterpackRequest::CopyFrom(const UpdateStarterpackRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.starterpack.v1.UpdateStarterpackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateStarterpackRequest::IsInitialized() const {
  return true;
}

void UpdateStarterpackRequest::InternalSwap(UpdateStarterpackRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.starterpack_id_, lhs_arena,
      &other->_impl_.starterpack_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.requester_id_, lhs_arena,
      &other->_impl_.requester_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.avatar_url_, lhs_arena,
      &other->_impl_.avatar_url_, rhs_arena
  );
  swap(_impl_.is_public_, other->_impl_.is_public_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateStarterpackRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fstarterpack_5fservice_2eproto_getter, &descriptor_table_services_2fstarterpack_5fservice_2eproto_once,
      file_level_metadata_services_2fstarterpack_5fservice_2eproto[8]);
}

// ===================================================================

class UpdateStarterpackResponse::_Internal {
 public:
  static const ::sonet::starterpack::v1::Starterpack& starterpack(const UpdateStarterpackResponse* msg);
};

const ::sonet::starterpack::v1::Starterpack&
UpdateStarterpackResponse::_Internal::starterpack(const UpdateStarterpackResponse* msg) {
  return *msg->_impl_.starterpack_;
}
UpdateStarterpackResponse::UpdateStarterpackResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.starterpack.v1.UpdateStarterpackResponse)
}
UpdateStarterpackResponse::UpdateStarterpackResponse(const UpdateStarterpackResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateStarterpackResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , decltype(_impl_.starterpack_){nullptr}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_starterpack()) {
    _this->_impl_.starterpack_ = new ::sonet::starterpack::v1::Starterpack(*from._impl_.starterpack_);
  }
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:sonet.starterpack.v1.UpdateStarterpackResponse)
}

inline void UpdateStarterpackResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , decltype(_impl_.starterpack_){nullptr}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateStarterpackResponse::~UpdateStarterpackResponse() {
  // @@protoc_insertion_point(destructor:sonet.starterpack.v1.UpdateStarterpackResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateStarterpackResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.starterpack_;
}

void UpdateStarterpackResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateStarterpackResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.starterpack.v1.UpdateStarterpackResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.starterpack_ != nullptr) {
    delete _impl_.starterpack_;
  }
  _impl_.starterpack_ = nullptr;
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateStarterpackResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .sonet.starterpack.v1.Starterpack starterpack = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_starterpack(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error_message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.UpdateStarterpackResponse.error_message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateStarterpackResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.starterpack.v1.UpdateStarterpackResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // .sonet.starterpack.v1.Starterpack starterpack = 2;
  if (this->_internal_has_starterpack()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::starterpack(this),
        _Internal::starterpack(this).GetCachedSize(), target, stream);
  }

  // string error_message = 3;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.UpdateStarterpackResponse.error_message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_error_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.starterpack.v1.UpdateStarterpackResponse)
  return target;
}

size_t UpdateStarterpackResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.starterpack.v1.UpdateStarterpackResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_message = 3;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // .sonet.starterpack.v1.Starterpack starterpack = 2;
  if (this->_internal_has_starterpack()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.starterpack_);
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateStarterpackResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateStarterpackResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateStarterpackResponse::GetClassData() const { return &_class_data_; }


void UpdateStarterpackResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateStarterpackResponse*>(&to_msg);
  auto& from = static_cast<const UpdateStarterpackResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.starterpack.v1.UpdateStarterpackResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_has_starterpack()) {
    _this->_internal_mutable_starterpack()->::sonet::starterpack::v1::Starterpack::MergeFrom(
        from._internal_starterpack());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateStarterpackResponse::CopyFrom(const UpdateStarterpackResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.starterpack.v1.UpdateStarterpackResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateStarterpackResponse::IsInitialized() const {
  return true;
}

void UpdateStarterpackResponse::InternalSwap(UpdateStarterpackResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_message_, lhs_arena,
      &other->_impl_.error_message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateStarterpackResponse, _impl_.success_)
      + sizeof(UpdateStarterpackResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(UpdateStarterpackResponse, _impl_.starterpack_)>(
          reinterpret_cast<char*>(&_impl_.starterpack_),
          reinterpret_cast<char*>(&other->_impl_.starterpack_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateStarterpackResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fstarterpack_5fservice_2eproto_getter, &descriptor_table_services_2fstarterpack_5fservice_2eproto_once,
      file_level_metadata_services_2fstarterpack_5fservice_2eproto[9]);
}

// ===================================================================

class DeleteStarterpackRequest::_Internal {
 public:
};

DeleteStarterpackRequest::DeleteStarterpackRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.starterpack.v1.DeleteStarterpackRequest)
}
DeleteStarterpackRequest::DeleteStarterpackRequest(const DeleteStarterpackRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteStarterpackRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.starterpack_id_){}
    , decltype(_impl_.requester_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.starterpack_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.starterpack_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_starterpack_id().empty()) {
    _this->_impl_.starterpack_id_.Set(from._internal_starterpack_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.requester_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.requester_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_requester_id().empty()) {
    _this->_impl_.requester_id_.Set(from._internal_requester_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:sonet.starterpack.v1.DeleteStarterpackRequest)
}

inline void DeleteStarterpackRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.starterpack_id_){}
    , decltype(_impl_.requester_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.starterpack_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.starterpack_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.requester_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.requester_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteStarterpackRequest::~DeleteStarterpackRequest() {
  // @@protoc_insertion_point(destructor:sonet.starterpack.v1.DeleteStarterpackRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteStarterpackRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.starterpack_id_.Destroy();
  _impl_.requester_id_.Destroy();
}

void DeleteStarterpackRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteStarterpackRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.starterpack.v1.DeleteStarterpackRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.starterpack_id_.ClearToEmpty();
  _impl_.requester_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteStarterpackRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string starterpack_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_starterpack_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.DeleteStarterpackRequest.starterpack_id"));
        } else
          goto handle_unusual;
        continue;
      // string requester_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_requester_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.DeleteStarterpackRequest.requester_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteStarterpackRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.starterpack.v1.DeleteStarterpackRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string starterpack_id = 1;
  if (!this->_internal_starterpack_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_starterpack_id().data(), static_cast<int>(this->_internal_starterpack_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.DeleteStarterpackRequest.starterpack_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_starterpack_id(), target);
  }

  // string requester_id = 2;
  if (!this->_internal_requester_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requester_id().data(), static_cast<int>(this->_internal_requester_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.DeleteStarterpackRequest.requester_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_requester_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.starterpack.v1.DeleteStarterpackRequest)
  return target;
}

size_t DeleteStarterpackRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.starterpack.v1.DeleteStarterpackRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string starterpack_id = 1;
  if (!this->_internal_starterpack_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_starterpack_id());
  }

  // string requester_id = 2;
  if (!this->_internal_requester_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requester_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteStarterpackRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteStarterpackRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteStarterpackRequest::GetClassData() const { return &_class_data_; }


void DeleteStarterpackRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteStarterpackRequest*>(&to_msg);
  auto& from = static_cast<const DeleteStarterpackRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.starterpack.v1.DeleteStarterpackRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_starterpack_id().empty()) {
    _this->_internal_set_starterpack_id(from._internal_starterpack_id());
  }
  if (!from._internal_requester_id().empty()) {
    _this->_internal_set_requester_id(from._internal_requester_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteStarterpackRequest::CopyFrom(const DeleteStarterpackRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.starterpack.v1.DeleteStarterpackRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteStarterpackRequest::IsInitialized() const {
  return true;
}

void DeleteStarterpackRequest::InternalSwap(DeleteStarterpackRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.starterpack_id_, lhs_arena,
      &other->_impl_.starterpack_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.requester_id_, lhs_arena,
      &other->_impl_.requester_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteStarterpackRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fstarterpack_5fservice_2eproto_getter, &descriptor_table_services_2fstarterpack_5fservice_2eproto_once,
      file_level_metadata_services_2fstarterpack_5fservice_2eproto[10]);
}

// ===================================================================

class DeleteStarterpackResponse::_Internal {
 public:
};

DeleteStarterpackResponse::DeleteStarterpackResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.starterpack.v1.DeleteStarterpackResponse)
}
DeleteStarterpackResponse::DeleteStarterpackResponse(const DeleteStarterpackResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteStarterpackResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:sonet.starterpack.v1.DeleteStarterpackResponse)
}

inline void DeleteStarterpackResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteStarterpackResponse::~DeleteStarterpackResponse() {
  // @@protoc_insertion_point(destructor:sonet.starterpack.v1.DeleteStarterpackResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteStarterpackResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_message_.Destroy();
}

void DeleteStarterpackResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteStarterpackResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.starterpack.v1.DeleteStarterpackResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteStarterpackResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error_message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.DeleteStarterpackResponse.error_message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteStarterpackResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.starterpack.v1.DeleteStarterpackResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.DeleteStarterpackResponse.error_message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.starterpack.v1.DeleteStarterpackResponse)
  return target;
}

size_t DeleteStarterpackResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.starterpack.v1.DeleteStarterpackResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteStarterpackResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteStarterpackResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteStarterpackResponse::GetClassData() const { return &_class_data_; }


void DeleteStarterpackResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteStarterpackResponse*>(&to_msg);
  auto& from = static_cast<const DeleteStarterpackResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.starterpack.v1.DeleteStarterpackResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteStarterpackResponse::CopyFrom(const DeleteStarterpackResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.starterpack.v1.DeleteStarterpackResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteStarterpackResponse::IsInitialized() const {
  return true;
}

void DeleteStarterpackResponse::InternalSwap(DeleteStarterpackResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_message_, lhs_arena,
      &other->_impl_.error_message_, rhs_arena
  );
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteStarterpackResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fstarterpack_5fservice_2eproto_getter, &descriptor_table_services_2fstarterpack_5fservice_2eproto_once,
      file_level_metadata_services_2fstarterpack_5fservice_2eproto[11]);
}

// ===================================================================

class AddStarterpackItemRequest::_Internal {
 public:
};

AddStarterpackItemRequest::AddStarterpackItemRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.starterpack.v1.AddStarterpackItemRequest)
}
AddStarterpackItemRequest::AddStarterpackItemRequest(const AddStarterpackItemRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddStarterpackItemRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.starterpack_id_){}
    , decltype(_impl_.item_uri_){}
    , decltype(_impl_.added_by_){}
    , decltype(_impl_.item_type_){}
    , decltype(_impl_.item_order_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.starterpack_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.starterpack_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_starterpack_id().empty()) {
    _this->_impl_.starterpack_id_.Set(from._internal_starterpack_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.item_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.item_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_item_uri().empty()) {
    _this->_impl_.item_uri_.Set(from._internal_item_uri(), 
      _this->GetArenaForAllocation());
  }
  _impl_.added_by_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.added_by_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_added_by().empty()) {
    _this->_impl_.added_by_.Set(from._internal_added_by(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.item_type_, &from._impl_.item_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.item_order_) -
    reinterpret_cast<char*>(&_impl_.item_type_)) + sizeof(_impl_.item_order_));
  // @@protoc_insertion_point(copy_constructor:sonet.starterpack.v1.AddStarterpackItemRequest)
}

inline void AddStarterpackItemRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.starterpack_id_){}
    , decltype(_impl_.item_uri_){}
    , decltype(_impl_.added_by_){}
    , decltype(_impl_.item_type_){0}
    , decltype(_impl_.item_order_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.starterpack_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.starterpack_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.item_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.item_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.added_by_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.added_by_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AddStarterpackItemRequest::~AddStarterpackItemRequest() {
  // @@protoc_insertion_point(destructor:sonet.starterpack.v1.AddStarterpackItemRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddStarterpackItemRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.starterpack_id_.Destroy();
  _impl_.item_uri_.Destroy();
  _impl_.added_by_.Destroy();
}

void AddStarterpackItemRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddStarterpackItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.starterpack.v1.AddStarterpackItemRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.starterpack_id_.ClearToEmpty();
  _impl_.item_uri_.ClearToEmpty();
  _impl_.added_by_.ClearToEmpty();
  ::memset(&_impl_.item_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.item_order_) -
      reinterpret_cast<char*>(&_impl_.item_type_)) + sizeof(_impl_.item_order_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddStarterpackItemRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string starterpack_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_starterpack_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.AddStarterpackItemRequest.starterpack_id"));
        } else
          goto handle_unusual;
        continue;
      // .sonet.starterpack.v1.ItemType item_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_item_type(static_cast<::sonet::starterpack::v1::ItemType>(val));
        } else
          goto handle_unusual;
        continue;
      // string item_uri = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_item_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.AddStarterpackItemRequest.item_uri"));
        } else
          goto handle_unusual;
        continue;
      // int32 item_order = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.item_order_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string added_by = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_added_by();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.AddStarterpackItemRequest.added_by"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddStarterpackItemRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.starterpack.v1.AddStarterpackItemRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string starterpack_id = 1;
  if (!this->_internal_starterpack_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_starterpack_id().data(), static_cast<int>(this->_internal_starterpack_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.AddStarterpackItemRequest.starterpack_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_starterpack_id(), target);
  }

  // .sonet.starterpack.v1.ItemType item_type = 2;
  if (this->_internal_item_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_item_type(), target);
  }

  // string item_uri = 3;
  if (!this->_internal_item_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_item_uri().data(), static_cast<int>(this->_internal_item_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.AddStarterpackItemRequest.item_uri");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_item_uri(), target);
  }

  // int32 item_order = 4;
  if (this->_internal_item_order() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_item_order(), target);
  }

  // string added_by = 5;
  if (!this->_internal_added_by().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_added_by().data(), static_cast<int>(this->_internal_added_by().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.AddStarterpackItemRequest.added_by");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_added_by(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.starterpack.v1.AddStarterpackItemRequest)
  return target;
}

size_t AddStarterpackItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.starterpack.v1.AddStarterpackItemRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string starterpack_id = 1;
  if (!this->_internal_starterpack_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_starterpack_id());
  }

  // string item_uri = 3;
  if (!this->_internal_item_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_item_uri());
  }

  // string added_by = 5;
  if (!this->_internal_added_by().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_added_by());
  }

  // .sonet.starterpack.v1.ItemType item_type = 2;
  if (this->_internal_item_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_item_type());
  }

  // int32 item_order = 4;
  if (this->_internal_item_order() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_item_order());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddStarterpackItemRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddStarterpackItemRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddStarterpackItemRequest::GetClassData() const { return &_class_data_; }


void AddStarterpackItemRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddStarterpackItemRequest*>(&to_msg);
  auto& from = static_cast<const AddStarterpackItemRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.starterpack.v1.AddStarterpackItemRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_starterpack_id().empty()) {
    _this->_internal_set_starterpack_id(from._internal_starterpack_id());
  }
  if (!from._internal_item_uri().empty()) {
    _this->_internal_set_item_uri(from._internal_item_uri());
  }
  if (!from._internal_added_by().empty()) {
    _this->_internal_set_added_by(from._internal_added_by());
  }
  if (from._internal_item_type() != 0) {
    _this->_internal_set_item_type(from._internal_item_type());
  }
  if (from._internal_item_order() != 0) {
    _this->_internal_set_item_order(from._internal_item_order());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddStarterpackItemRequest::CopyFrom(const AddStarterpackItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.starterpack.v1.AddStarterpackItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddStarterpackItemRequest::IsInitialized() const {
  return true;
}

void AddStarterpackItemRequest::InternalSwap(AddStarterpackItemRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.starterpack_id_, lhs_arena,
      &other->_impl_.starterpack_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.item_uri_, lhs_arena,
      &other->_impl_.item_uri_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.added_by_, lhs_arena,
      &other->_impl_.added_by_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AddStarterpackItemRequest, _impl_.item_order_)
      + sizeof(AddStarterpackItemRequest::_impl_.item_order_)
      - PROTOBUF_FIELD_OFFSET(AddStarterpackItemRequest, _impl_.item_type_)>(
          reinterpret_cast<char*>(&_impl_.item_type_),
          reinterpret_cast<char*>(&other->_impl_.item_type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AddStarterpackItemRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fstarterpack_5fservice_2eproto_getter, &descriptor_table_services_2fstarterpack_5fservice_2eproto_once,
      file_level_metadata_services_2fstarterpack_5fservice_2eproto[12]);
}

// ===================================================================

class AddStarterpackItemResponse::_Internal {
 public:
  static const ::sonet::starterpack::v1::StarterpackItem& item(const AddStarterpackItemResponse* msg);
};

const ::sonet::starterpack::v1::StarterpackItem&
AddStarterpackItemResponse::_Internal::item(const AddStarterpackItemResponse* msg) {
  return *msg->_impl_.item_;
}
AddStarterpackItemResponse::AddStarterpackItemResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.starterpack.v1.AddStarterpackItemResponse)
}
AddStarterpackItemResponse::AddStarterpackItemResponse(const AddStarterpackItemResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddStarterpackItemResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , decltype(_impl_.item_){nullptr}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_item()) {
    _this->_impl_.item_ = new ::sonet::starterpack::v1::StarterpackItem(*from._impl_.item_);
  }
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:sonet.starterpack.v1.AddStarterpackItemResponse)
}

inline void AddStarterpackItemResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , decltype(_impl_.item_){nullptr}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AddStarterpackItemResponse::~AddStarterpackItemResponse() {
  // @@protoc_insertion_point(destructor:sonet.starterpack.v1.AddStarterpackItemResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddStarterpackItemResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.item_;
}

void AddStarterpackItemResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddStarterpackItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.starterpack.v1.AddStarterpackItemResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.item_ != nullptr) {
    delete _impl_.item_;
  }
  _impl_.item_ = nullptr;
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddStarterpackItemResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .sonet.starterpack.v1.StarterpackItem item = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_item(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error_message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.AddStarterpackItemResponse.error_message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddStarterpackItemResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.starterpack.v1.AddStarterpackItemResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // .sonet.starterpack.v1.StarterpackItem item = 2;
  if (this->_internal_has_item()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::item(this),
        _Internal::item(this).GetCachedSize(), target, stream);
  }

  // string error_message = 3;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.AddStarterpackItemResponse.error_message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_error_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.starterpack.v1.AddStarterpackItemResponse)
  return target;
}

size_t AddStarterpackItemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.starterpack.v1.AddStarterpackItemResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_message = 3;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // .sonet.starterpack.v1.StarterpackItem item = 2;
  if (this->_internal_has_item()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.item_);
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddStarterpackItemResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddStarterpackItemResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddStarterpackItemResponse::GetClassData() const { return &_class_data_; }


void AddStarterpackItemResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddStarterpackItemResponse*>(&to_msg);
  auto& from = static_cast<const AddStarterpackItemResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.starterpack.v1.AddStarterpackItemResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_has_item()) {
    _this->_internal_mutable_item()->::sonet::starterpack::v1::StarterpackItem::MergeFrom(
        from._internal_item());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddStarterpackItemResponse::CopyFrom(const AddStarterpackItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.starterpack.v1.AddStarterpackItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddStarterpackItemResponse::IsInitialized() const {
  return true;
}

void AddStarterpackItemResponse::InternalSwap(AddStarterpackItemResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_message_, lhs_arena,
      &other->_impl_.error_message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AddStarterpackItemResponse, _impl_.success_)
      + sizeof(AddStarterpackItemResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(AddStarterpackItemResponse, _impl_.item_)>(
          reinterpret_cast<char*>(&_impl_.item_),
          reinterpret_cast<char*>(&other->_impl_.item_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AddStarterpackItemResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fstarterpack_5fservice_2eproto_getter, &descriptor_table_services_2fstarterpack_5fservice_2eproto_once,
      file_level_metadata_services_2fstarterpack_5fservice_2eproto[13]);
}

// ===================================================================

class RemoveStarterpackItemRequest::_Internal {
 public:
};

RemoveStarterpackItemRequest::RemoveStarterpackItemRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.starterpack.v1.RemoveStarterpackItemRequest)
}
RemoveStarterpackItemRequest::RemoveStarterpackItemRequest(const RemoveStarterpackItemRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RemoveStarterpackItemRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.starterpack_id_){}
    , decltype(_impl_.item_id_){}
    , decltype(_impl_.removed_by_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.starterpack_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.starterpack_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_starterpack_id().empty()) {
    _this->_impl_.starterpack_id_.Set(from._internal_starterpack_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.item_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.item_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_item_id().empty()) {
    _this->_impl_.item_id_.Set(from._internal_item_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.removed_by_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.removed_by_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_removed_by().empty()) {
    _this->_impl_.removed_by_.Set(from._internal_removed_by(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:sonet.starterpack.v1.RemoveStarterpackItemRequest)
}

inline void RemoveStarterpackItemRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.starterpack_id_){}
    , decltype(_impl_.item_id_){}
    , decltype(_impl_.removed_by_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.starterpack_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.starterpack_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.item_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.item_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.removed_by_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.removed_by_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RemoveStarterpackItemRequest::~RemoveStarterpackItemRequest() {
  // @@protoc_insertion_point(destructor:sonet.starterpack.v1.RemoveStarterpackItemRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RemoveStarterpackItemRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.starterpack_id_.Destroy();
  _impl_.item_id_.Destroy();
  _impl_.removed_by_.Destroy();
}

void RemoveStarterpackItemRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RemoveStarterpackItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.starterpack.v1.RemoveStarterpackItemRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.starterpack_id_.ClearToEmpty();
  _impl_.item_id_.ClearToEmpty();
  _impl_.removed_by_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveStarterpackItemRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string starterpack_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_starterpack_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.RemoveStarterpackItemRequest.starterpack_id"));
        } else
          goto handle_unusual;
        continue;
      // string item_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_item_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.RemoveStarterpackItemRequest.item_id"));
        } else
          goto handle_unusual;
        continue;
      // string removed_by = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_removed_by();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.RemoveStarterpackItemRequest.removed_by"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RemoveStarterpackItemRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.starterpack.v1.RemoveStarterpackItemRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string starterpack_id = 1;
  if (!this->_internal_starterpack_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_starterpack_id().data(), static_cast<int>(this->_internal_starterpack_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.RemoveStarterpackItemRequest.starterpack_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_starterpack_id(), target);
  }

  // string item_id = 2;
  if (!this->_internal_item_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_item_id().data(), static_cast<int>(this->_internal_item_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.RemoveStarterpackItemRequest.item_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_item_id(), target);
  }

  // string removed_by = 3;
  if (!this->_internal_removed_by().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_removed_by().data(), static_cast<int>(this->_internal_removed_by().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.RemoveStarterpackItemRequest.removed_by");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_removed_by(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.starterpack.v1.RemoveStarterpackItemRequest)
  return target;
}

size_t RemoveStarterpackItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.starterpack.v1.RemoveStarterpackItemRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string starterpack_id = 1;
  if (!this->_internal_starterpack_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_starterpack_id());
  }

  // string item_id = 2;
  if (!this->_internal_item_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_item_id());
  }

  // string removed_by = 3;
  if (!this->_internal_removed_by().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_removed_by());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveStarterpackItemRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RemoveStarterpackItemRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveStarterpackItemRequest::GetClassData() const { return &_class_data_; }


void RemoveStarterpackItemRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RemoveStarterpackItemRequest*>(&to_msg);
  auto& from = static_cast<const RemoveStarterpackItemRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.starterpack.v1.RemoveStarterpackItemRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_starterpack_id().empty()) {
    _this->_internal_set_starterpack_id(from._internal_starterpack_id());
  }
  if (!from._internal_item_id().empty()) {
    _this->_internal_set_item_id(from._internal_item_id());
  }
  if (!from._internal_removed_by().empty()) {
    _this->_internal_set_removed_by(from._internal_removed_by());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveStarterpackItemRequest::CopyFrom(const RemoveStarterpackItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.starterpack.v1.RemoveStarterpackItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveStarterpackItemRequest::IsInitialized() const {
  return true;
}

void RemoveStarterpackItemRequest::InternalSwap(RemoveStarterpackItemRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.starterpack_id_, lhs_arena,
      &other->_impl_.starterpack_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.item_id_, lhs_arena,
      &other->_impl_.item_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.removed_by_, lhs_arena,
      &other->_impl_.removed_by_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveStarterpackItemRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fstarterpack_5fservice_2eproto_getter, &descriptor_table_services_2fstarterpack_5fservice_2eproto_once,
      file_level_metadata_services_2fstarterpack_5fservice_2eproto[14]);
}

// ===================================================================

class RemoveStarterpackItemResponse::_Internal {
 public:
};

RemoveStarterpackItemResponse::RemoveStarterpackItemResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.starterpack.v1.RemoveStarterpackItemResponse)
}
RemoveStarterpackItemResponse::RemoveStarterpackItemResponse(const RemoveStarterpackItemResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RemoveStarterpackItemResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:sonet.starterpack.v1.RemoveStarterpackItemResponse)
}

inline void RemoveStarterpackItemResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RemoveStarterpackItemResponse::~RemoveStarterpackItemResponse() {
  // @@protoc_insertion_point(destructor:sonet.starterpack.v1.RemoveStarterpackItemResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RemoveStarterpackItemResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_message_.Destroy();
}

void RemoveStarterpackItemResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RemoveStarterpackItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.starterpack.v1.RemoveStarterpackItemResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveStarterpackItemResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error_message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.RemoveStarterpackItemResponse.error_message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RemoveStarterpackItemResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.starterpack.v1.RemoveStarterpackItemResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.RemoveStarterpackItemResponse.error_message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.starterpack.v1.RemoveStarterpackItemResponse)
  return target;
}

size_t RemoveStarterpackItemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.starterpack.v1.RemoveStarterpackItemResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveStarterpackItemResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RemoveStarterpackItemResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveStarterpackItemResponse::GetClassData() const { return &_class_data_; }


void RemoveStarterpackItemResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RemoveStarterpackItemResponse*>(&to_msg);
  auto& from = static_cast<const RemoveStarterpackItemResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.starterpack.v1.RemoveStarterpackItemResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveStarterpackItemResponse::CopyFrom(const RemoveStarterpackItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.starterpack.v1.RemoveStarterpackItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveStarterpackItemResponse::IsInitialized() const {
  return true;
}

void RemoveStarterpackItemResponse::InternalSwap(RemoveStarterpackItemResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_message_, lhs_arena,
      &other->_impl_.error_message_, rhs_arena
  );
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveStarterpackItemResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fstarterpack_5fservice_2eproto_getter, &descriptor_table_services_2fstarterpack_5fservice_2eproto_once,
      file_level_metadata_services_2fstarterpack_5fservice_2eproto[15]);
}

// ===================================================================

class GetStarterpackItemsRequest::_Internal {
 public:
};

GetStarterpackItemsRequest::GetStarterpackItemsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.starterpack.v1.GetStarterpackItemsRequest)
}
GetStarterpackItemsRequest::GetStarterpackItemsRequest(const GetStarterpackItemsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetStarterpackItemsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.starterpack_id_){}
    , decltype(_impl_.requester_id_){}
    , decltype(_impl_.cursor_){}
    , decltype(_impl_.limit_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.starterpack_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.starterpack_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_starterpack_id().empty()) {
    _this->_impl_.starterpack_id_.Set(from._internal_starterpack_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.requester_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.requester_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_requester_id().empty()) {
    _this->_impl_.requester_id_.Set(from._internal_requester_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.cursor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cursor_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cursor().empty()) {
    _this->_impl_.cursor_.Set(from._internal_cursor(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.limit_ = from._impl_.limit_;
  // @@protoc_insertion_point(copy_constructor:sonet.starterpack.v1.GetStarterpackItemsRequest)
}

inline void GetStarterpackItemsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.starterpack_id_){}
    , decltype(_impl_.requester_id_){}
    , decltype(_impl_.cursor_){}
    , decltype(_impl_.limit_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.starterpack_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.starterpack_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.requester_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.requester_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.cursor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cursor_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetStarterpackItemsRequest::~GetStarterpackItemsRequest() {
  // @@protoc_insertion_point(destructor:sonet.starterpack.v1.GetStarterpackItemsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetStarterpackItemsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.starterpack_id_.Destroy();
  _impl_.requester_id_.Destroy();
  _impl_.cursor_.Destroy();
}

void GetStarterpackItemsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetStarterpackItemsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.starterpack.v1.GetStarterpackItemsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.starterpack_id_.ClearToEmpty();
  _impl_.requester_id_.ClearToEmpty();
  _impl_.cursor_.ClearToEmpty();
  _impl_.limit_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStarterpackItemsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string starterpack_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_starterpack_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.GetStarterpackItemsRequest.starterpack_id"));
        } else
          goto handle_unusual;
        continue;
      // string requester_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_requester_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.GetStarterpackItemsRequest.requester_id"));
        } else
          goto handle_unusual;
        continue;
      // int32 limit = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string cursor = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_cursor();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.GetStarterpackItemsRequest.cursor"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetStarterpackItemsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.starterpack.v1.GetStarterpackItemsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string starterpack_id = 1;
  if (!this->_internal_starterpack_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_starterpack_id().data(), static_cast<int>(this->_internal_starterpack_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.GetStarterpackItemsRequest.starterpack_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_starterpack_id(), target);
  }

  // string requester_id = 2;
  if (!this->_internal_requester_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requester_id().data(), static_cast<int>(this->_internal_requester_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.GetStarterpackItemsRequest.requester_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_requester_id(), target);
  }

  // int32 limit = 3;
  if (this->_internal_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_limit(), target);
  }

  // string cursor = 4;
  if (!this->_internal_cursor().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cursor().data(), static_cast<int>(this->_internal_cursor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.GetStarterpackItemsRequest.cursor");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_cursor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.starterpack.v1.GetStarterpackItemsRequest)
  return target;
}

size_t GetStarterpackItemsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.starterpack.v1.GetStarterpackItemsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string starterpack_id = 1;
  if (!this->_internal_starterpack_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_starterpack_id());
  }

  // string requester_id = 2;
  if (!this->_internal_requester_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requester_id());
  }

  // string cursor = 4;
  if (!this->_internal_cursor().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cursor());
  }

  // int32 limit = 3;
  if (this->_internal_limit() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_limit());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetStarterpackItemsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetStarterpackItemsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetStarterpackItemsRequest::GetClassData() const { return &_class_data_; }


void GetStarterpackItemsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetStarterpackItemsRequest*>(&to_msg);
  auto& from = static_cast<const GetStarterpackItemsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.starterpack.v1.GetStarterpackItemsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_starterpack_id().empty()) {
    _this->_internal_set_starterpack_id(from._internal_starterpack_id());
  }
  if (!from._internal_requester_id().empty()) {
    _this->_internal_set_requester_id(from._internal_requester_id());
  }
  if (!from._internal_cursor().empty()) {
    _this->_internal_set_cursor(from._internal_cursor());
  }
  if (from._internal_limit() != 0) {
    _this->_internal_set_limit(from._internal_limit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetStarterpackItemsRequest::CopyFrom(const GetStarterpackItemsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.starterpack.v1.GetStarterpackItemsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStarterpackItemsRequest::IsInitialized() const {
  return true;
}

void GetStarterpackItemsRequest::InternalSwap(GetStarterpackItemsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.starterpack_id_, lhs_arena,
      &other->_impl_.starterpack_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.requester_id_, lhs_arena,
      &other->_impl_.requester_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.cursor_, lhs_arena,
      &other->_impl_.cursor_, rhs_arena
  );
  swap(_impl_.limit_, other->_impl_.limit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStarterpackItemsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fstarterpack_5fservice_2eproto_getter, &descriptor_table_services_2fstarterpack_5fservice_2eproto_once,
      file_level_metadata_services_2fstarterpack_5fservice_2eproto[16]);
}

// ===================================================================

class GetStarterpackItemsResponse::_Internal {
 public:
};

GetStarterpackItemsResponse::GetStarterpackItemsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.starterpack.v1.GetStarterpackItemsResponse)
}
GetStarterpackItemsResponse::GetStarterpackItemsResponse(const GetStarterpackItemsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetStarterpackItemsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , decltype(_impl_.next_cursor_){}
    , decltype(_impl_.error_message_){}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.next_cursor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_cursor_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_cursor().empty()) {
    _this->_impl_.next_cursor_.Set(from._internal_next_cursor(), 
      _this->GetArenaForAllocation());
  }
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:sonet.starterpack.v1.GetStarterpackItemsResponse)
}

inline void GetStarterpackItemsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , decltype(_impl_.next_cursor_){}
    , decltype(_impl_.error_message_){}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.next_cursor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_cursor_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetStarterpackItemsResponse::~GetStarterpackItemsResponse() {
  // @@protoc_insertion_point(destructor:sonet.starterpack.v1.GetStarterpackItemsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetStarterpackItemsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
  _impl_.next_cursor_.Destroy();
  _impl_.error_message_.Destroy();
}

void GetStarterpackItemsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetStarterpackItemsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.starterpack.v1.GetStarterpackItemsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _impl_.next_cursor_.ClearToEmpty();
  _impl_.error_message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStarterpackItemsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .sonet.starterpack.v1.StarterpackItem items = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_cursor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_next_cursor();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.GetStarterpackItemsResponse.next_cursor"));
        } else
          goto handle_unusual;
        continue;
      // string error_message = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.GetStarterpackItemsResponse.error_message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetStarterpackItemsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.starterpack.v1.GetStarterpackItemsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // repeated .sonet.starterpack.v1.StarterpackItem items = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string next_cursor = 3;
  if (!this->_internal_next_cursor().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_cursor().data(), static_cast<int>(this->_internal_next_cursor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.GetStarterpackItemsResponse.next_cursor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_next_cursor(), target);
  }

  // string error_message = 4;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.GetStarterpackItemsResponse.error_message");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_error_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.starterpack.v1.GetStarterpackItemsResponse)
  return target;
}

size_t GetStarterpackItemsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.starterpack.v1.GetStarterpackItemsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sonet.starterpack.v1.StarterpackItem items = 2;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_cursor = 3;
  if (!this->_internal_next_cursor().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_cursor());
  }

  // string error_message = 4;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetStarterpackItemsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetStarterpackItemsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetStarterpackItemsResponse::GetClassData() const { return &_class_data_; }


void GetStarterpackItemsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetStarterpackItemsResponse*>(&to_msg);
  auto& from = static_cast<const GetStarterpackItemsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.starterpack.v1.GetStarterpackItemsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  if (!from._internal_next_cursor().empty()) {
    _this->_internal_set_next_cursor(from._internal_next_cursor());
  }
  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetStarterpackItemsResponse::CopyFrom(const GetStarterpackItemsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.starterpack.v1.GetStarterpackItemsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStarterpackItemsResponse::IsInitialized() const {
  return true;
}

void GetStarterpackItemsResponse::InternalSwap(GetStarterpackItemsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.next_cursor_, lhs_arena,
      &other->_impl_.next_cursor_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_message_, lhs_arena,
      &other->_impl_.error_message_, rhs_arena
  );
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStarterpackItemsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fstarterpack_5fservice_2eproto_getter, &descriptor_table_services_2fstarterpack_5fservice_2eproto_once,
      file_level_metadata_services_2fstarterpack_5fservice_2eproto[17]);
}

// ===================================================================

class GetSuggestedStarterpacksRequest::_Internal {
 public:
};

GetSuggestedStarterpacksRequest::GetSuggestedStarterpacksRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.starterpack.v1.GetSuggestedStarterpacksRequest)
}
GetSuggestedStarterpacksRequest::GetSuggestedStarterpacksRequest(const GetSuggestedStarterpacksRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSuggestedStarterpacksRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , decltype(_impl_.cursor_){}
    , decltype(_impl_.limit_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    _this->_impl_.user_id_.Set(from._internal_user_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.cursor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cursor_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cursor().empty()) {
    _this->_impl_.cursor_.Set(from._internal_cursor(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.limit_ = from._impl_.limit_;
  // @@protoc_insertion_point(copy_constructor:sonet.starterpack.v1.GetSuggestedStarterpacksRequest)
}

inline void GetSuggestedStarterpacksRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , decltype(_impl_.cursor_){}
    , decltype(_impl_.limit_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.cursor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cursor_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetSuggestedStarterpacksRequest::~GetSuggestedStarterpacksRequest() {
  // @@protoc_insertion_point(destructor:sonet.starterpack.v1.GetSuggestedStarterpacksRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSuggestedStarterpacksRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.user_id_.Destroy();
  _impl_.cursor_.Destroy();
}

void GetSuggestedStarterpacksRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSuggestedStarterpacksRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.starterpack.v1.GetSuggestedStarterpacksRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  _impl_.cursor_.ClearToEmpty();
  _impl_.limit_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSuggestedStarterpacksRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.GetSuggestedStarterpacksRequest.user_id"));
        } else
          goto handle_unusual;
        continue;
      // int32 limit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string cursor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_cursor();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.GetSuggestedStarterpacksRequest.cursor"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSuggestedStarterpacksRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.starterpack.v1.GetSuggestedStarterpacksRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.GetSuggestedStarterpacksRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  // int32 limit = 2;
  if (this->_internal_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_limit(), target);
  }

  // string cursor = 3;
  if (!this->_internal_cursor().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cursor().data(), static_cast<int>(this->_internal_cursor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.GetSuggestedStarterpacksRequest.cursor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_cursor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.starterpack.v1.GetSuggestedStarterpacksRequest)
  return target;
}

size_t GetSuggestedStarterpacksRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.starterpack.v1.GetSuggestedStarterpacksRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_id = 1;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  // string cursor = 3;
  if (!this->_internal_cursor().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cursor());
  }

  // int32 limit = 2;
  if (this->_internal_limit() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_limit());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSuggestedStarterpacksRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSuggestedStarterpacksRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSuggestedStarterpacksRequest::GetClassData() const { return &_class_data_; }


void GetSuggestedStarterpacksRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSuggestedStarterpacksRequest*>(&to_msg);
  auto& from = static_cast<const GetSuggestedStarterpacksRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.starterpack.v1.GetSuggestedStarterpacksRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_cursor().empty()) {
    _this->_internal_set_cursor(from._internal_cursor());
  }
  if (from._internal_limit() != 0) {
    _this->_internal_set_limit(from._internal_limit());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSuggestedStarterpacksRequest::CopyFrom(const GetSuggestedStarterpacksRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.starterpack.v1.GetSuggestedStarterpacksRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSuggestedStarterpacksRequest::IsInitialized() const {
  return true;
}

void GetSuggestedStarterpacksRequest::InternalSwap(GetSuggestedStarterpacksRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_id_, lhs_arena,
      &other->_impl_.user_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.cursor_, lhs_arena,
      &other->_impl_.cursor_, rhs_arena
  );
  swap(_impl_.limit_, other->_impl_.limit_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSuggestedStarterpacksRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fstarterpack_5fservice_2eproto_getter, &descriptor_table_services_2fstarterpack_5fservice_2eproto_once,
      file_level_metadata_services_2fstarterpack_5fservice_2eproto[18]);
}

// ===================================================================

class GetSuggestedStarterpacksResponse::_Internal {
 public:
};

GetSuggestedStarterpacksResponse::GetSuggestedStarterpacksResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.starterpack.v1.GetSuggestedStarterpacksResponse)
}
GetSuggestedStarterpacksResponse::GetSuggestedStarterpacksResponse(const GetSuggestedStarterpacksResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSuggestedStarterpacksResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.starterpacks_){from._impl_.starterpacks_}
    , decltype(_impl_.next_cursor_){}
    , decltype(_impl_.error_message_){}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.next_cursor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_cursor_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_cursor().empty()) {
    _this->_impl_.next_cursor_.Set(from._internal_next_cursor(), 
      _this->GetArenaForAllocation());
  }
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:sonet.starterpack.v1.GetSuggestedStarterpacksResponse)
}

inline void GetSuggestedStarterpacksResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.starterpacks_){arena}
    , decltype(_impl_.next_cursor_){}
    , decltype(_impl_.error_message_){}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.next_cursor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_cursor_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetSuggestedStarterpacksResponse::~GetSuggestedStarterpacksResponse() {
  // @@protoc_insertion_point(destructor:sonet.starterpack.v1.GetSuggestedStarterpacksResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSuggestedStarterpacksResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.starterpacks_.~RepeatedPtrField();
  _impl_.next_cursor_.Destroy();
  _impl_.error_message_.Destroy();
}

void GetSuggestedStarterpacksResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSuggestedStarterpacksResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.starterpack.v1.GetSuggestedStarterpacksResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.starterpacks_.Clear();
  _impl_.next_cursor_.ClearToEmpty();
  _impl_.error_message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSuggestedStarterpacksResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .sonet.starterpack.v1.Starterpack starterpacks = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_starterpacks(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_cursor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_next_cursor();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.GetSuggestedStarterpacksResponse.next_cursor"));
        } else
          goto handle_unusual;
        continue;
      // string error_message = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.starterpack.v1.GetSuggestedStarterpacksResponse.error_message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSuggestedStarterpacksResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.starterpack.v1.GetSuggestedStarterpacksResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // repeated .sonet.starterpack.v1.Starterpack starterpacks = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_starterpacks_size()); i < n; i++) {
    const auto& repfield = this->_internal_starterpacks(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string next_cursor = 3;
  if (!this->_internal_next_cursor().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_cursor().data(), static_cast<int>(this->_internal_next_cursor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.GetSuggestedStarterpacksResponse.next_cursor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_next_cursor(), target);
  }

  // string error_message = 4;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.starterpack.v1.GetSuggestedStarterpacksResponse.error_message");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_error_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.starterpack.v1.GetSuggestedStarterpacksResponse)
  return target;
}

size_t GetSuggestedStarterpacksResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.starterpack.v1.GetSuggestedStarterpacksResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sonet.starterpack.v1.Starterpack starterpacks = 2;
  total_size += 1UL * this->_internal_starterpacks_size();
  for (const auto& msg : this->_impl_.starterpacks_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string next_cursor = 3;
  if (!this->_internal_next_cursor().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_cursor());
  }

  // string error_message = 4;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSuggestedStarterpacksResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSuggestedStarterpacksResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSuggestedStarterpacksResponse::GetClassData() const { return &_class_data_; }


void GetSuggestedStarterpacksResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSuggestedStarterpacksResponse*>(&to_msg);
  auto& from = static_cast<const GetSuggestedStarterpacksResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.starterpack.v1.GetSuggestedStarterpacksResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.starterpacks_.MergeFrom(from._impl_.starterpacks_);
  if (!from._internal_next_cursor().empty()) {
    _this->_internal_set_next_cursor(from._internal_next_cursor());
  }
  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSuggestedStarterpacksResponse::CopyFrom(const GetSuggestedStarterpacksResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.starterpack.v1.GetSuggestedStarterpacksResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSuggestedStarterpacksResponse::IsInitialized() const {
  return true;
}

void GetSuggestedStarterpacksResponse::InternalSwap(GetSuggestedStarterpacksResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.starterpacks_.InternalSwap(&other->_impl_.starterpacks_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.next_cursor_, lhs_arena,
      &other->_impl_.next_cursor_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_message_, lhs_arena,
      &other->_impl_.error_message_, rhs_arena
  );
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSuggestedStarterpacksResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fstarterpack_5fservice_2eproto_getter, &descriptor_table_services_2fstarterpack_5fservice_2eproto_once,
      file_level_metadata_services_2fstarterpack_5fservice_2eproto[19]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace starterpack
}  // namespace sonet
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::sonet::starterpack::v1::Starterpack*
Arena::CreateMaybeMessage< ::sonet::starterpack::v1::Starterpack >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::starterpack::v1::Starterpack >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::starterpack::v1::StarterpackItem*
Arena::CreateMaybeMessage< ::sonet::starterpack::v1::StarterpackItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::starterpack::v1::StarterpackItem >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::starterpack::v1::CreateStarterpackRequest*
Arena::CreateMaybeMessage< ::sonet::starterpack::v1::CreateStarterpackRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::starterpack::v1::CreateStarterpackRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::starterpack::v1::CreateStarterpackResponse*
Arena::CreateMaybeMessage< ::sonet::starterpack::v1::CreateStarterpackResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::starterpack::v1::CreateStarterpackResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::starterpack::v1::GetStarterpackRequest*
Arena::CreateMaybeMessage< ::sonet::starterpack::v1::GetStarterpackRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::starterpack::v1::GetStarterpackRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::starterpack::v1::GetStarterpackResponse*
Arena::CreateMaybeMessage< ::sonet::starterpack::v1::GetStarterpackResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::starterpack::v1::GetStarterpackResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::starterpack::v1::GetUserStarterpacksRequest*
Arena::CreateMaybeMessage< ::sonet::starterpack::v1::GetUserStarterpacksRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::starterpack::v1::GetUserStarterpacksRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::starterpack::v1::GetUserStarterpacksResponse*
Arena::CreateMaybeMessage< ::sonet::starterpack::v1::GetUserStarterpacksResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::starterpack::v1::GetUserStarterpacksResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::starterpack::v1::UpdateStarterpackRequest*
Arena::CreateMaybeMessage< ::sonet::starterpack::v1::UpdateStarterpackRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::starterpack::v1::UpdateStarterpackRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::starterpack::v1::UpdateStarterpackResponse*
Arena::CreateMaybeMessage< ::sonet::starterpack::v1::UpdateStarterpackResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::starterpack::v1::UpdateStarterpackResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::starterpack::v1::DeleteStarterpackRequest*
Arena::CreateMaybeMessage< ::sonet::starterpack::v1::DeleteStarterpackRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::starterpack::v1::DeleteStarterpackRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::starterpack::v1::DeleteStarterpackResponse*
Arena::CreateMaybeMessage< ::sonet::starterpack::v1::DeleteStarterpackResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::starterpack::v1::DeleteStarterpackResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::starterpack::v1::AddStarterpackItemRequest*
Arena::CreateMaybeMessage< ::sonet::starterpack::v1::AddStarterpackItemRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::starterpack::v1::AddStarterpackItemRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::starterpack::v1::AddStarterpackItemResponse*
Arena::CreateMaybeMessage< ::sonet::starterpack::v1::AddStarterpackItemResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::starterpack::v1::AddStarterpackItemResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::starterpack::v1::RemoveStarterpackItemRequest*
Arena::CreateMaybeMessage< ::sonet::starterpack::v1::RemoveStarterpackItemRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::starterpack::v1::RemoveStarterpackItemRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::starterpack::v1::RemoveStarterpackItemResponse*
Arena::CreateMaybeMessage< ::sonet::starterpack::v1::RemoveStarterpackItemResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::starterpack::v1::RemoveStarterpackItemResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::starterpack::v1::GetStarterpackItemsRequest*
Arena::CreateMaybeMessage< ::sonet::starterpack::v1::GetStarterpackItemsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::starterpack::v1::GetStarterpackItemsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::starterpack::v1::GetStarterpackItemsResponse*
Arena::CreateMaybeMessage< ::sonet::starterpack::v1::GetStarterpackItemsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::starterpack::v1::GetStarterpackItemsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest*
Arena::CreateMaybeMessage< ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse*
Arena::CreateMaybeMessage< ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
