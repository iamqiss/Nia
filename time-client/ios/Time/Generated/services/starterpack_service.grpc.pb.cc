// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: services/starterpack_service.proto

#include "services/starterpack_service.pb.h"
#include "services/starterpack_service.grpc.pb.h"

#include <functional>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/channel_interface.h>
#include <grpcpp/impl/client_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/rpc_service_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/sync_stream.h>
namespace sonet {
namespace starterpack {
namespace v1 {

static const char* StarterpackService_method_names[] = {
  "/sonet.starterpack.v1.StarterpackService/CreateStarterpack",
  "/sonet.starterpack.v1.StarterpackService/GetStarterpack",
  "/sonet.starterpack.v1.StarterpackService/GetUserStarterpacks",
  "/sonet.starterpack.v1.StarterpackService/UpdateStarterpack",
  "/sonet.starterpack.v1.StarterpackService/DeleteStarterpack",
  "/sonet.starterpack.v1.StarterpackService/AddStarterpackItem",
  "/sonet.starterpack.v1.StarterpackService/RemoveStarterpackItem",
  "/sonet.starterpack.v1.StarterpackService/GetStarterpackItems",
  "/sonet.starterpack.v1.StarterpackService/GetSuggestedStarterpacks",
};

std::unique_ptr< StarterpackService::Stub> StarterpackService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< StarterpackService::Stub> stub(new StarterpackService::Stub(channel, options));
  return stub;
}

StarterpackService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_CreateStarterpack_(StarterpackService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetStarterpack_(StarterpackService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetUserStarterpacks_(StarterpackService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateStarterpack_(StarterpackService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteStarterpack_(StarterpackService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_AddStarterpackItem_(StarterpackService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_RemoveStarterpackItem_(StarterpackService_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetStarterpackItems_(StarterpackService_method_names[7], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetSuggestedStarterpacks_(StarterpackService_method_names[8], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status StarterpackService::Stub::CreateStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::CreateStarterpackRequest& request, ::sonet::starterpack::v1::CreateStarterpackResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::sonet::starterpack::v1::CreateStarterpackRequest, ::sonet::starterpack::v1::CreateStarterpackResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateStarterpack_, context, request, response);
}

void StarterpackService::Stub::async::CreateStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::CreateStarterpackRequest* request, ::sonet::starterpack::v1::CreateStarterpackResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::sonet::starterpack::v1::CreateStarterpackRequest, ::sonet::starterpack::v1::CreateStarterpackResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateStarterpack_, context, request, response, std::move(f));
}

void StarterpackService::Stub::async::CreateStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::CreateStarterpackRequest* request, ::sonet::starterpack::v1::CreateStarterpackResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateStarterpack_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::CreateStarterpackResponse>* StarterpackService::Stub::PrepareAsyncCreateStarterpackRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::CreateStarterpackRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::sonet::starterpack::v1::CreateStarterpackResponse, ::sonet::starterpack::v1::CreateStarterpackRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateStarterpack_, context, request);
}

::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::CreateStarterpackResponse>* StarterpackService::Stub::AsyncCreateStarterpackRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::CreateStarterpackRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateStarterpackRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status StarterpackService::Stub::GetStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackRequest& request, ::sonet::starterpack::v1::GetStarterpackResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::sonet::starterpack::v1::GetStarterpackRequest, ::sonet::starterpack::v1::GetStarterpackResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetStarterpack_, context, request, response);
}

void StarterpackService::Stub::async::GetStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackRequest* request, ::sonet::starterpack::v1::GetStarterpackResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::sonet::starterpack::v1::GetStarterpackRequest, ::sonet::starterpack::v1::GetStarterpackResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetStarterpack_, context, request, response, std::move(f));
}

void StarterpackService::Stub::async::GetStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackRequest* request, ::sonet::starterpack::v1::GetStarterpackResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetStarterpack_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetStarterpackResponse>* StarterpackService::Stub::PrepareAsyncGetStarterpackRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::sonet::starterpack::v1::GetStarterpackResponse, ::sonet::starterpack::v1::GetStarterpackRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetStarterpack_, context, request);
}

::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetStarterpackResponse>* StarterpackService::Stub::AsyncGetStarterpackRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetStarterpackRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status StarterpackService::Stub::GetUserStarterpacks(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetUserStarterpacksRequest& request, ::sonet::starterpack::v1::GetUserStarterpacksResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::sonet::starterpack::v1::GetUserStarterpacksRequest, ::sonet::starterpack::v1::GetUserStarterpacksResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetUserStarterpacks_, context, request, response);
}

void StarterpackService::Stub::async::GetUserStarterpacks(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetUserStarterpacksRequest* request, ::sonet::starterpack::v1::GetUserStarterpacksResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::sonet::starterpack::v1::GetUserStarterpacksRequest, ::sonet::starterpack::v1::GetUserStarterpacksResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetUserStarterpacks_, context, request, response, std::move(f));
}

void StarterpackService::Stub::async::GetUserStarterpacks(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetUserStarterpacksRequest* request, ::sonet::starterpack::v1::GetUserStarterpacksResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetUserStarterpacks_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetUserStarterpacksResponse>* StarterpackService::Stub::PrepareAsyncGetUserStarterpacksRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetUserStarterpacksRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::sonet::starterpack::v1::GetUserStarterpacksResponse, ::sonet::starterpack::v1::GetUserStarterpacksRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetUserStarterpacks_, context, request);
}

::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetUserStarterpacksResponse>* StarterpackService::Stub::AsyncGetUserStarterpacksRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetUserStarterpacksRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetUserStarterpacksRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status StarterpackService::Stub::UpdateStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::UpdateStarterpackRequest& request, ::sonet::starterpack::v1::UpdateStarterpackResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::sonet::starterpack::v1::UpdateStarterpackRequest, ::sonet::starterpack::v1::UpdateStarterpackResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateStarterpack_, context, request, response);
}

void StarterpackService::Stub::async::UpdateStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::UpdateStarterpackRequest* request, ::sonet::starterpack::v1::UpdateStarterpackResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::sonet::starterpack::v1::UpdateStarterpackRequest, ::sonet::starterpack::v1::UpdateStarterpackResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateStarterpack_, context, request, response, std::move(f));
}

void StarterpackService::Stub::async::UpdateStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::UpdateStarterpackRequest* request, ::sonet::starterpack::v1::UpdateStarterpackResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateStarterpack_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::UpdateStarterpackResponse>* StarterpackService::Stub::PrepareAsyncUpdateStarterpackRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::UpdateStarterpackRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::sonet::starterpack::v1::UpdateStarterpackResponse, ::sonet::starterpack::v1::UpdateStarterpackRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateStarterpack_, context, request);
}

::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::UpdateStarterpackResponse>* StarterpackService::Stub::AsyncUpdateStarterpackRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::UpdateStarterpackRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateStarterpackRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status StarterpackService::Stub::DeleteStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::DeleteStarterpackRequest& request, ::sonet::starterpack::v1::DeleteStarterpackResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::sonet::starterpack::v1::DeleteStarterpackRequest, ::sonet::starterpack::v1::DeleteStarterpackResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteStarterpack_, context, request, response);
}

void StarterpackService::Stub::async::DeleteStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::DeleteStarterpackRequest* request, ::sonet::starterpack::v1::DeleteStarterpackResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::sonet::starterpack::v1::DeleteStarterpackRequest, ::sonet::starterpack::v1::DeleteStarterpackResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteStarterpack_, context, request, response, std::move(f));
}

void StarterpackService::Stub::async::DeleteStarterpack(::grpc::ClientContext* context, const ::sonet::starterpack::v1::DeleteStarterpackRequest* request, ::sonet::starterpack::v1::DeleteStarterpackResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteStarterpack_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::DeleteStarterpackResponse>* StarterpackService::Stub::PrepareAsyncDeleteStarterpackRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::DeleteStarterpackRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::sonet::starterpack::v1::DeleteStarterpackResponse, ::sonet::starterpack::v1::DeleteStarterpackRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteStarterpack_, context, request);
}

::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::DeleteStarterpackResponse>* StarterpackService::Stub::AsyncDeleteStarterpackRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::DeleteStarterpackRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteStarterpackRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status StarterpackService::Stub::AddStarterpackItem(::grpc::ClientContext* context, const ::sonet::starterpack::v1::AddStarterpackItemRequest& request, ::sonet::starterpack::v1::AddStarterpackItemResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::sonet::starterpack::v1::AddStarterpackItemRequest, ::sonet::starterpack::v1::AddStarterpackItemResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_AddStarterpackItem_, context, request, response);
}

void StarterpackService::Stub::async::AddStarterpackItem(::grpc::ClientContext* context, const ::sonet::starterpack::v1::AddStarterpackItemRequest* request, ::sonet::starterpack::v1::AddStarterpackItemResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::sonet::starterpack::v1::AddStarterpackItemRequest, ::sonet::starterpack::v1::AddStarterpackItemResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_AddStarterpackItem_, context, request, response, std::move(f));
}

void StarterpackService::Stub::async::AddStarterpackItem(::grpc::ClientContext* context, const ::sonet::starterpack::v1::AddStarterpackItemRequest* request, ::sonet::starterpack::v1::AddStarterpackItemResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_AddStarterpackItem_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::AddStarterpackItemResponse>* StarterpackService::Stub::PrepareAsyncAddStarterpackItemRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::AddStarterpackItemRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::sonet::starterpack::v1::AddStarterpackItemResponse, ::sonet::starterpack::v1::AddStarterpackItemRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_AddStarterpackItem_, context, request);
}

::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::AddStarterpackItemResponse>* StarterpackService::Stub::AsyncAddStarterpackItemRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::AddStarterpackItemRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncAddStarterpackItemRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status StarterpackService::Stub::RemoveStarterpackItem(::grpc::ClientContext* context, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest& request, ::sonet::starterpack::v1::RemoveStarterpackItemResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::sonet::starterpack::v1::RemoveStarterpackItemRequest, ::sonet::starterpack::v1::RemoveStarterpackItemResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_RemoveStarterpackItem_, context, request, response);
}

void StarterpackService::Stub::async::RemoveStarterpackItem(::grpc::ClientContext* context, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest* request, ::sonet::starterpack::v1::RemoveStarterpackItemResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::sonet::starterpack::v1::RemoveStarterpackItemRequest, ::sonet::starterpack::v1::RemoveStarterpackItemResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_RemoveStarterpackItem_, context, request, response, std::move(f));
}

void StarterpackService::Stub::async::RemoveStarterpackItem(::grpc::ClientContext* context, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest* request, ::sonet::starterpack::v1::RemoveStarterpackItemResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_RemoveStarterpackItem_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::RemoveStarterpackItemResponse>* StarterpackService::Stub::PrepareAsyncRemoveStarterpackItemRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::sonet::starterpack::v1::RemoveStarterpackItemResponse, ::sonet::starterpack::v1::RemoveStarterpackItemRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_RemoveStarterpackItem_, context, request);
}

::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::RemoveStarterpackItemResponse>* StarterpackService::Stub::AsyncRemoveStarterpackItemRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncRemoveStarterpackItemRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status StarterpackService::Stub::GetStarterpackItems(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackItemsRequest& request, ::sonet::starterpack::v1::GetStarterpackItemsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::sonet::starterpack::v1::GetStarterpackItemsRequest, ::sonet::starterpack::v1::GetStarterpackItemsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetStarterpackItems_, context, request, response);
}

void StarterpackService::Stub::async::GetStarterpackItems(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackItemsRequest* request, ::sonet::starterpack::v1::GetStarterpackItemsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::sonet::starterpack::v1::GetStarterpackItemsRequest, ::sonet::starterpack::v1::GetStarterpackItemsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetStarterpackItems_, context, request, response, std::move(f));
}

void StarterpackService::Stub::async::GetStarterpackItems(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackItemsRequest* request, ::sonet::starterpack::v1::GetStarterpackItemsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetStarterpackItems_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetStarterpackItemsResponse>* StarterpackService::Stub::PrepareAsyncGetStarterpackItemsRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackItemsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::sonet::starterpack::v1::GetStarterpackItemsResponse, ::sonet::starterpack::v1::GetStarterpackItemsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetStarterpackItems_, context, request);
}

::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetStarterpackItemsResponse>* StarterpackService::Stub::AsyncGetStarterpackItemsRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetStarterpackItemsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetStarterpackItemsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status StarterpackService::Stub::GetSuggestedStarterpacks(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest& request, ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest, ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetSuggestedStarterpacks_, context, request, response);
}

void StarterpackService::Stub::async::GetSuggestedStarterpacks(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest* request, ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest, ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetSuggestedStarterpacks_, context, request, response, std::move(f));
}

void StarterpackService::Stub::async::GetSuggestedStarterpacks(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest* request, ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetSuggestedStarterpacks_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse>* StarterpackService::Stub::PrepareAsyncGetSuggestedStarterpacksRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse, ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetSuggestedStarterpacks_, context, request);
}

::grpc::ClientAsyncResponseReader< ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse>* StarterpackService::Stub::AsyncGetSuggestedStarterpacksRaw(::grpc::ClientContext* context, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetSuggestedStarterpacksRaw(context, request, cq);
  result->StartCall();
  return result;
}

StarterpackService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      StarterpackService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< StarterpackService::Service, ::sonet::starterpack::v1::CreateStarterpackRequest, ::sonet::starterpack::v1::CreateStarterpackResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](StarterpackService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::sonet::starterpack::v1::CreateStarterpackRequest* req,
             ::sonet::starterpack::v1::CreateStarterpackResponse* resp) {
               return service->CreateStarterpack(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      StarterpackService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< StarterpackService::Service, ::sonet::starterpack::v1::GetStarterpackRequest, ::sonet::starterpack::v1::GetStarterpackResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](StarterpackService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::sonet::starterpack::v1::GetStarterpackRequest* req,
             ::sonet::starterpack::v1::GetStarterpackResponse* resp) {
               return service->GetStarterpack(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      StarterpackService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< StarterpackService::Service, ::sonet::starterpack::v1::GetUserStarterpacksRequest, ::sonet::starterpack::v1::GetUserStarterpacksResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](StarterpackService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::sonet::starterpack::v1::GetUserStarterpacksRequest* req,
             ::sonet::starterpack::v1::GetUserStarterpacksResponse* resp) {
               return service->GetUserStarterpacks(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      StarterpackService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< StarterpackService::Service, ::sonet::starterpack::v1::UpdateStarterpackRequest, ::sonet::starterpack::v1::UpdateStarterpackResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](StarterpackService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::sonet::starterpack::v1::UpdateStarterpackRequest* req,
             ::sonet::starterpack::v1::UpdateStarterpackResponse* resp) {
               return service->UpdateStarterpack(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      StarterpackService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< StarterpackService::Service, ::sonet::starterpack::v1::DeleteStarterpackRequest, ::sonet::starterpack::v1::DeleteStarterpackResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](StarterpackService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::sonet::starterpack::v1::DeleteStarterpackRequest* req,
             ::sonet::starterpack::v1::DeleteStarterpackResponse* resp) {
               return service->DeleteStarterpack(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      StarterpackService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< StarterpackService::Service, ::sonet::starterpack::v1::AddStarterpackItemRequest, ::sonet::starterpack::v1::AddStarterpackItemResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](StarterpackService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::sonet::starterpack::v1::AddStarterpackItemRequest* req,
             ::sonet::starterpack::v1::AddStarterpackItemResponse* resp) {
               return service->AddStarterpackItem(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      StarterpackService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< StarterpackService::Service, ::sonet::starterpack::v1::RemoveStarterpackItemRequest, ::sonet::starterpack::v1::RemoveStarterpackItemResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](StarterpackService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::sonet::starterpack::v1::RemoveStarterpackItemRequest* req,
             ::sonet::starterpack::v1::RemoveStarterpackItemResponse* resp) {
               return service->RemoveStarterpackItem(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      StarterpackService_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< StarterpackService::Service, ::sonet::starterpack::v1::GetStarterpackItemsRequest, ::sonet::starterpack::v1::GetStarterpackItemsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](StarterpackService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::sonet::starterpack::v1::GetStarterpackItemsRequest* req,
             ::sonet::starterpack::v1::GetStarterpackItemsResponse* resp) {
               return service->GetStarterpackItems(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      StarterpackService_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< StarterpackService::Service, ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest, ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](StarterpackService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest* req,
             ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse* resp) {
               return service->GetSuggestedStarterpacks(ctx, req, resp);
             }, this)));
}

StarterpackService::Service::~Service() {
}

::grpc::Status StarterpackService::Service::CreateStarterpack(::grpc::ServerContext* context, const ::sonet::starterpack::v1::CreateStarterpackRequest* request, ::sonet::starterpack::v1::CreateStarterpackResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status StarterpackService::Service::GetStarterpack(::grpc::ServerContext* context, const ::sonet::starterpack::v1::GetStarterpackRequest* request, ::sonet::starterpack::v1::GetStarterpackResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status StarterpackService::Service::GetUserStarterpacks(::grpc::ServerContext* context, const ::sonet::starterpack::v1::GetUserStarterpacksRequest* request, ::sonet::starterpack::v1::GetUserStarterpacksResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status StarterpackService::Service::UpdateStarterpack(::grpc::ServerContext* context, const ::sonet::starterpack::v1::UpdateStarterpackRequest* request, ::sonet::starterpack::v1::UpdateStarterpackResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status StarterpackService::Service::DeleteStarterpack(::grpc::ServerContext* context, const ::sonet::starterpack::v1::DeleteStarterpackRequest* request, ::sonet::starterpack::v1::DeleteStarterpackResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status StarterpackService::Service::AddStarterpackItem(::grpc::ServerContext* context, const ::sonet::starterpack::v1::AddStarterpackItemRequest* request, ::sonet::starterpack::v1::AddStarterpackItemResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status StarterpackService::Service::RemoveStarterpackItem(::grpc::ServerContext* context, const ::sonet::starterpack::v1::RemoveStarterpackItemRequest* request, ::sonet::starterpack::v1::RemoveStarterpackItemResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status StarterpackService::Service::GetStarterpackItems(::grpc::ServerContext* context, const ::sonet::starterpack::v1::GetStarterpackItemsRequest* request, ::sonet::starterpack::v1::GetStarterpackItemsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status StarterpackService::Service::GetSuggestedStarterpacks(::grpc::ServerContext* context, const ::sonet::starterpack::v1::GetSuggestedStarterpacksRequest* request, ::sonet::starterpack::v1::GetSuggestedStarterpacksResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace sonet
}  // namespace starterpack
}  // namespace v1

