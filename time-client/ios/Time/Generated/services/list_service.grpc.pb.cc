// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: services/list_service.proto

#include "services/list_service.pb.h"
#include "services/list_service.grpc.pb.h"

#include <functional>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/channel_interface.h>
#include <grpcpp/impl/client_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/rpc_service_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/sync_stream.h>
namespace sonet {
namespace list {
namespace v1 {

static const char* ListService_method_names[] = {
  "/sonet.list.v1.ListService/CreateList",
  "/sonet.list.v1.ListService/GetList",
  "/sonet.list.v1.ListService/GetUserLists",
  "/sonet.list.v1.ListService/UpdateList",
  "/sonet.list.v1.ListService/DeleteList",
  "/sonet.list.v1.ListService/AddListMember",
  "/sonet.list.v1.ListService/RemoveListMember",
  "/sonet.list.v1.ListService/GetListMembers",
  "/sonet.list.v1.ListService/IsUserInList",
};

std::unique_ptr< ListService::Stub> ListService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< ListService::Stub> stub(new ListService::Stub(channel, options));
  return stub;
}

ListService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_CreateList_(ListService_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetList_(ListService_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetUserLists_(ListService_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateList_(ListService_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteList_(ListService_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_AddListMember_(ListService_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_RemoveListMember_(ListService_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetListMembers_(ListService_method_names[7], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_IsUserInList_(ListService_method_names[8], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status ListService::Stub::CreateList(::grpc::ClientContext* context, const ::sonet::list::v1::CreateListRequest& request, ::sonet::list::v1::CreateListResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::sonet::list::v1::CreateListRequest, ::sonet::list::v1::CreateListResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateList_, context, request, response);
}

void ListService::Stub::async::CreateList(::grpc::ClientContext* context, const ::sonet::list::v1::CreateListRequest* request, ::sonet::list::v1::CreateListResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::sonet::list::v1::CreateListRequest, ::sonet::list::v1::CreateListResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateList_, context, request, response, std::move(f));
}

void ListService::Stub::async::CreateList(::grpc::ClientContext* context, const ::sonet::list::v1::CreateListRequest* request, ::sonet::list::v1::CreateListResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateList_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::sonet::list::v1::CreateListResponse>* ListService::Stub::PrepareAsyncCreateListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::CreateListRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::sonet::list::v1::CreateListResponse, ::sonet::list::v1::CreateListRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateList_, context, request);
}

::grpc::ClientAsyncResponseReader< ::sonet::list::v1::CreateListResponse>* ListService::Stub::AsyncCreateListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::CreateListRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateListRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ListService::Stub::GetList(::grpc::ClientContext* context, const ::sonet::list::v1::GetListRequest& request, ::sonet::list::v1::GetListResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::sonet::list::v1::GetListRequest, ::sonet::list::v1::GetListResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetList_, context, request, response);
}

void ListService::Stub::async::GetList(::grpc::ClientContext* context, const ::sonet::list::v1::GetListRequest* request, ::sonet::list::v1::GetListResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::sonet::list::v1::GetListRequest, ::sonet::list::v1::GetListResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetList_, context, request, response, std::move(f));
}

void ListService::Stub::async::GetList(::grpc::ClientContext* context, const ::sonet::list::v1::GetListRequest* request, ::sonet::list::v1::GetListResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetList_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::sonet::list::v1::GetListResponse>* ListService::Stub::PrepareAsyncGetListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::GetListRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::sonet::list::v1::GetListResponse, ::sonet::list::v1::GetListRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetList_, context, request);
}

::grpc::ClientAsyncResponseReader< ::sonet::list::v1::GetListResponse>* ListService::Stub::AsyncGetListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::GetListRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetListRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ListService::Stub::GetUserLists(::grpc::ClientContext* context, const ::sonet::list::v1::GetUserListsRequest& request, ::sonet::list::v1::GetUserListsResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::sonet::list::v1::GetUserListsRequest, ::sonet::list::v1::GetUserListsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetUserLists_, context, request, response);
}

void ListService::Stub::async::GetUserLists(::grpc::ClientContext* context, const ::sonet::list::v1::GetUserListsRequest* request, ::sonet::list::v1::GetUserListsResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::sonet::list::v1::GetUserListsRequest, ::sonet::list::v1::GetUserListsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetUserLists_, context, request, response, std::move(f));
}

void ListService::Stub::async::GetUserLists(::grpc::ClientContext* context, const ::sonet::list::v1::GetUserListsRequest* request, ::sonet::list::v1::GetUserListsResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetUserLists_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::sonet::list::v1::GetUserListsResponse>* ListService::Stub::PrepareAsyncGetUserListsRaw(::grpc::ClientContext* context, const ::sonet::list::v1::GetUserListsRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::sonet::list::v1::GetUserListsResponse, ::sonet::list::v1::GetUserListsRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetUserLists_, context, request);
}

::grpc::ClientAsyncResponseReader< ::sonet::list::v1::GetUserListsResponse>* ListService::Stub::AsyncGetUserListsRaw(::grpc::ClientContext* context, const ::sonet::list::v1::GetUserListsRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetUserListsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ListService::Stub::UpdateList(::grpc::ClientContext* context, const ::sonet::list::v1::UpdateListRequest& request, ::sonet::list::v1::UpdateListResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::sonet::list::v1::UpdateListRequest, ::sonet::list::v1::UpdateListResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateList_, context, request, response);
}

void ListService::Stub::async::UpdateList(::grpc::ClientContext* context, const ::sonet::list::v1::UpdateListRequest* request, ::sonet::list::v1::UpdateListResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::sonet::list::v1::UpdateListRequest, ::sonet::list::v1::UpdateListResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateList_, context, request, response, std::move(f));
}

void ListService::Stub::async::UpdateList(::grpc::ClientContext* context, const ::sonet::list::v1::UpdateListRequest* request, ::sonet::list::v1::UpdateListResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateList_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::sonet::list::v1::UpdateListResponse>* ListService::Stub::PrepareAsyncUpdateListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::UpdateListRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::sonet::list::v1::UpdateListResponse, ::sonet::list::v1::UpdateListRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateList_, context, request);
}

::grpc::ClientAsyncResponseReader< ::sonet::list::v1::UpdateListResponse>* ListService::Stub::AsyncUpdateListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::UpdateListRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateListRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ListService::Stub::DeleteList(::grpc::ClientContext* context, const ::sonet::list::v1::DeleteListRequest& request, ::sonet::list::v1::DeleteListResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::sonet::list::v1::DeleteListRequest, ::sonet::list::v1::DeleteListResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteList_, context, request, response);
}

void ListService::Stub::async::DeleteList(::grpc::ClientContext* context, const ::sonet::list::v1::DeleteListRequest* request, ::sonet::list::v1::DeleteListResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::sonet::list::v1::DeleteListRequest, ::sonet::list::v1::DeleteListResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteList_, context, request, response, std::move(f));
}

void ListService::Stub::async::DeleteList(::grpc::ClientContext* context, const ::sonet::list::v1::DeleteListRequest* request, ::sonet::list::v1::DeleteListResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteList_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::sonet::list::v1::DeleteListResponse>* ListService::Stub::PrepareAsyncDeleteListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::DeleteListRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::sonet::list::v1::DeleteListResponse, ::sonet::list::v1::DeleteListRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteList_, context, request);
}

::grpc::ClientAsyncResponseReader< ::sonet::list::v1::DeleteListResponse>* ListService::Stub::AsyncDeleteListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::DeleteListRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteListRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ListService::Stub::AddListMember(::grpc::ClientContext* context, const ::sonet::list::v1::AddListMemberRequest& request, ::sonet::list::v1::AddListMemberResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::sonet::list::v1::AddListMemberRequest, ::sonet::list::v1::AddListMemberResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_AddListMember_, context, request, response);
}

void ListService::Stub::async::AddListMember(::grpc::ClientContext* context, const ::sonet::list::v1::AddListMemberRequest* request, ::sonet::list::v1::AddListMemberResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::sonet::list::v1::AddListMemberRequest, ::sonet::list::v1::AddListMemberResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_AddListMember_, context, request, response, std::move(f));
}

void ListService::Stub::async::AddListMember(::grpc::ClientContext* context, const ::sonet::list::v1::AddListMemberRequest* request, ::sonet::list::v1::AddListMemberResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_AddListMember_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::sonet::list::v1::AddListMemberResponse>* ListService::Stub::PrepareAsyncAddListMemberRaw(::grpc::ClientContext* context, const ::sonet::list::v1::AddListMemberRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::sonet::list::v1::AddListMemberResponse, ::sonet::list::v1::AddListMemberRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_AddListMember_, context, request);
}

::grpc::ClientAsyncResponseReader< ::sonet::list::v1::AddListMemberResponse>* ListService::Stub::AsyncAddListMemberRaw(::grpc::ClientContext* context, const ::sonet::list::v1::AddListMemberRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncAddListMemberRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ListService::Stub::RemoveListMember(::grpc::ClientContext* context, const ::sonet::list::v1::RemoveListMemberRequest& request, ::sonet::list::v1::RemoveListMemberResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::sonet::list::v1::RemoveListMemberRequest, ::sonet::list::v1::RemoveListMemberResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_RemoveListMember_, context, request, response);
}

void ListService::Stub::async::RemoveListMember(::grpc::ClientContext* context, const ::sonet::list::v1::RemoveListMemberRequest* request, ::sonet::list::v1::RemoveListMemberResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::sonet::list::v1::RemoveListMemberRequest, ::sonet::list::v1::RemoveListMemberResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_RemoveListMember_, context, request, response, std::move(f));
}

void ListService::Stub::async::RemoveListMember(::grpc::ClientContext* context, const ::sonet::list::v1::RemoveListMemberRequest* request, ::sonet::list::v1::RemoveListMemberResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_RemoveListMember_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::sonet::list::v1::RemoveListMemberResponse>* ListService::Stub::PrepareAsyncRemoveListMemberRaw(::grpc::ClientContext* context, const ::sonet::list::v1::RemoveListMemberRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::sonet::list::v1::RemoveListMemberResponse, ::sonet::list::v1::RemoveListMemberRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_RemoveListMember_, context, request);
}

::grpc::ClientAsyncResponseReader< ::sonet::list::v1::RemoveListMemberResponse>* ListService::Stub::AsyncRemoveListMemberRaw(::grpc::ClientContext* context, const ::sonet::list::v1::RemoveListMemberRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncRemoveListMemberRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ListService::Stub::GetListMembers(::grpc::ClientContext* context, const ::sonet::list::v1::GetListMembersRequest& request, ::sonet::list::v1::GetListMembersResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::sonet::list::v1::GetListMembersRequest, ::sonet::list::v1::GetListMembersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetListMembers_, context, request, response);
}

void ListService::Stub::async::GetListMembers(::grpc::ClientContext* context, const ::sonet::list::v1::GetListMembersRequest* request, ::sonet::list::v1::GetListMembersResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::sonet::list::v1::GetListMembersRequest, ::sonet::list::v1::GetListMembersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetListMembers_, context, request, response, std::move(f));
}

void ListService::Stub::async::GetListMembers(::grpc::ClientContext* context, const ::sonet::list::v1::GetListMembersRequest* request, ::sonet::list::v1::GetListMembersResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetListMembers_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::sonet::list::v1::GetListMembersResponse>* ListService::Stub::PrepareAsyncGetListMembersRaw(::grpc::ClientContext* context, const ::sonet::list::v1::GetListMembersRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::sonet::list::v1::GetListMembersResponse, ::sonet::list::v1::GetListMembersRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetListMembers_, context, request);
}

::grpc::ClientAsyncResponseReader< ::sonet::list::v1::GetListMembersResponse>* ListService::Stub::AsyncGetListMembersRaw(::grpc::ClientContext* context, const ::sonet::list::v1::GetListMembersRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetListMembersRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status ListService::Stub::IsUserInList(::grpc::ClientContext* context, const ::sonet::list::v1::IsUserInListRequest& request, ::sonet::list::v1::IsUserInListResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::sonet::list::v1::IsUserInListRequest, ::sonet::list::v1::IsUserInListResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_IsUserInList_, context, request, response);
}

void ListService::Stub::async::IsUserInList(::grpc::ClientContext* context, const ::sonet::list::v1::IsUserInListRequest* request, ::sonet::list::v1::IsUserInListResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::sonet::list::v1::IsUserInListRequest, ::sonet::list::v1::IsUserInListResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_IsUserInList_, context, request, response, std::move(f));
}

void ListService::Stub::async::IsUserInList(::grpc::ClientContext* context, const ::sonet::list::v1::IsUserInListRequest* request, ::sonet::list::v1::IsUserInListResponse* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_IsUserInList_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::sonet::list::v1::IsUserInListResponse>* ListService::Stub::PrepareAsyncIsUserInListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::IsUserInListRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::sonet::list::v1::IsUserInListResponse, ::sonet::list::v1::IsUserInListRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_IsUserInList_, context, request);
}

::grpc::ClientAsyncResponseReader< ::sonet::list::v1::IsUserInListResponse>* ListService::Stub::AsyncIsUserInListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::IsUserInListRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncIsUserInListRaw(context, request, cq);
  result->StartCall();
  return result;
}

ListService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ListService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ListService::Service, ::sonet::list::v1::CreateListRequest, ::sonet::list::v1::CreateListResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ListService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::sonet::list::v1::CreateListRequest* req,
             ::sonet::list::v1::CreateListResponse* resp) {
               return service->CreateList(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ListService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ListService::Service, ::sonet::list::v1::GetListRequest, ::sonet::list::v1::GetListResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ListService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::sonet::list::v1::GetListRequest* req,
             ::sonet::list::v1::GetListResponse* resp) {
               return service->GetList(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ListService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ListService::Service, ::sonet::list::v1::GetUserListsRequest, ::sonet::list::v1::GetUserListsResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ListService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::sonet::list::v1::GetUserListsRequest* req,
             ::sonet::list::v1::GetUserListsResponse* resp) {
               return service->GetUserLists(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ListService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ListService::Service, ::sonet::list::v1::UpdateListRequest, ::sonet::list::v1::UpdateListResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ListService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::sonet::list::v1::UpdateListRequest* req,
             ::sonet::list::v1::UpdateListResponse* resp) {
               return service->UpdateList(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ListService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ListService::Service, ::sonet::list::v1::DeleteListRequest, ::sonet::list::v1::DeleteListResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ListService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::sonet::list::v1::DeleteListRequest* req,
             ::sonet::list::v1::DeleteListResponse* resp) {
               return service->DeleteList(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ListService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ListService::Service, ::sonet::list::v1::AddListMemberRequest, ::sonet::list::v1::AddListMemberResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ListService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::sonet::list::v1::AddListMemberRequest* req,
             ::sonet::list::v1::AddListMemberResponse* resp) {
               return service->AddListMember(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ListService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ListService::Service, ::sonet::list::v1::RemoveListMemberRequest, ::sonet::list::v1::RemoveListMemberResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ListService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::sonet::list::v1::RemoveListMemberRequest* req,
             ::sonet::list::v1::RemoveListMemberResponse* resp) {
               return service->RemoveListMember(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ListService_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ListService::Service, ::sonet::list::v1::GetListMembersRequest, ::sonet::list::v1::GetListMembersResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ListService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::sonet::list::v1::GetListMembersRequest* req,
             ::sonet::list::v1::GetListMembersResponse* resp) {
               return service->GetListMembers(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      ListService_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< ListService::Service, ::sonet::list::v1::IsUserInListRequest, ::sonet::list::v1::IsUserInListResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](ListService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::sonet::list::v1::IsUserInListRequest* req,
             ::sonet::list::v1::IsUserInListResponse* resp) {
               return service->IsUserInList(ctx, req, resp);
             }, this)));
}

ListService::Service::~Service() {
}

::grpc::Status ListService::Service::CreateList(::grpc::ServerContext* context, const ::sonet::list::v1::CreateListRequest* request, ::sonet::list::v1::CreateListResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ListService::Service::GetList(::grpc::ServerContext* context, const ::sonet::list::v1::GetListRequest* request, ::sonet::list::v1::GetListResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ListService::Service::GetUserLists(::grpc::ServerContext* context, const ::sonet::list::v1::GetUserListsRequest* request, ::sonet::list::v1::GetUserListsResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ListService::Service::UpdateList(::grpc::ServerContext* context, const ::sonet::list::v1::UpdateListRequest* request, ::sonet::list::v1::UpdateListResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ListService::Service::DeleteList(::grpc::ServerContext* context, const ::sonet::list::v1::DeleteListRequest* request, ::sonet::list::v1::DeleteListResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ListService::Service::AddListMember(::grpc::ServerContext* context, const ::sonet::list::v1::AddListMemberRequest* request, ::sonet::list::v1::AddListMemberResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ListService::Service::RemoveListMember(::grpc::ServerContext* context, const ::sonet::list::v1::RemoveListMemberRequest* request, ::sonet::list::v1::RemoveListMemberResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ListService::Service::GetListMembers(::grpc::ServerContext* context, const ::sonet::list::v1::GetListMembersRequest* request, ::sonet::list::v1::GetListMembersResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status ListService::Service::IsUserInList(::grpc::ServerContext* context, const ::sonet::list::v1::IsUserInListRequest* request, ::sonet::list::v1::IsUserInListResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace sonet
}  // namespace list
}  // namespace v1

