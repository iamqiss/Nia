// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services/drafts_service.proto

#include "services/drafts_service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace sonet {
namespace drafts {
namespace v1 {
PROTOBUF_CONSTEXPR CreateDraftRequest::CreateDraftRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.images_)*/{}
  , /*decltype(_impl_.labels_)*/{}
  , /*decltype(_impl_.user_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.content_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.reply_to_uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.quote_uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.mention_handle_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.threadgate_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.interaction_settings_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.video_)*/nullptr
  , /*decltype(_impl_.is_auto_saved_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateDraftRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateDraftRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateDraftRequestDefaultTypeInternal() {}
  union {
    CreateDraftRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateDraftRequestDefaultTypeInternal _CreateDraftRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateDraftResponse::CreateDraftResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.draft_)*/nullptr
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateDraftResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateDraftResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateDraftResponseDefaultTypeInternal() {}
  union {
    CreateDraftResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateDraftResponseDefaultTypeInternal _CreateDraftResponse_default_instance_;
PROTOBUF_CONSTEXPR GetUserDraftsRequest::GetUserDraftsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.user_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.cursor_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.limit_)*/0
  , /*decltype(_impl_.include_auto_saved_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetUserDraftsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetUserDraftsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetUserDraftsRequestDefaultTypeInternal() {}
  union {
    GetUserDraftsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetUserDraftsRequestDefaultTypeInternal _GetUserDraftsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetUserDraftsResponse::GetUserDraftsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.drafts_)*/{}
  , /*decltype(_impl_.error_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.next_cursor_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetUserDraftsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetUserDraftsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetUserDraftsResponseDefaultTypeInternal() {}
  union {
    GetUserDraftsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetUserDraftsResponseDefaultTypeInternal _GetUserDraftsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetDraftRequest::GetDraftRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.draft_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetDraftRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDraftRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDraftRequestDefaultTypeInternal() {}
  union {
    GetDraftRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDraftRequestDefaultTypeInternal _GetDraftRequest_default_instance_;
PROTOBUF_CONSTEXPR GetDraftResponse::GetDraftResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.draft_)*/nullptr
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetDraftResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDraftResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDraftResponseDefaultTypeInternal() {}
  union {
    GetDraftResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDraftResponseDefaultTypeInternal _GetDraftResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateDraftRequest::UpdateDraftRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.images_)*/{}
  , /*decltype(_impl_.labels_)*/{}
  , /*decltype(_impl_.draft_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.content_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.reply_to_uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.quote_uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.mention_handle_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.threadgate_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.interaction_settings_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.video_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateDraftRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateDraftRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateDraftRequestDefaultTypeInternal() {}
  union {
    UpdateDraftRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateDraftRequestDefaultTypeInternal _UpdateDraftRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateDraftResponse::UpdateDraftResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.draft_)*/nullptr
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateDraftResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateDraftResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateDraftResponseDefaultTypeInternal() {}
  union {
    UpdateDraftResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateDraftResponseDefaultTypeInternal _UpdateDraftResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteDraftRequest::DeleteDraftRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.draft_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteDraftRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteDraftRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteDraftRequestDefaultTypeInternal() {}
  union {
    DeleteDraftRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteDraftRequestDefaultTypeInternal _DeleteDraftRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteDraftResponse::DeleteDraftResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteDraftResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteDraftResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteDraftResponseDefaultTypeInternal() {}
  union {
    DeleteDraftResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteDraftResponseDefaultTypeInternal _DeleteDraftResponse_default_instance_;
PROTOBUF_CONSTEXPR AutoSaveDraftRequest::AutoSaveDraftRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.images_)*/{}
  , /*decltype(_impl_.labels_)*/{}
  , /*decltype(_impl_.user_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.content_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.reply_to_uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.quote_uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.mention_handle_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.threadgate_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.interaction_settings_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.video_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AutoSaveDraftRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AutoSaveDraftRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AutoSaveDraftRequestDefaultTypeInternal() {}
  union {
    AutoSaveDraftRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AutoSaveDraftRequestDefaultTypeInternal _AutoSaveDraftRequest_default_instance_;
PROTOBUF_CONSTEXPR AutoSaveDraftResponse::AutoSaveDraftResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.draft_)*/nullptr
  , /*decltype(_impl_.success_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AutoSaveDraftResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AutoSaveDraftResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AutoSaveDraftResponseDefaultTypeInternal() {}
  union {
    AutoSaveDraftResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AutoSaveDraftResponseDefaultTypeInternal _AutoSaveDraftResponse_default_instance_;
PROTOBUF_CONSTEXPR Draft::Draft(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.images_)*/{}
  , /*decltype(_impl_.labels_)*/{}
  , /*decltype(_impl_.draft_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.user_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.title_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.content_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.reply_to_uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.quote_uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.mention_handle_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.threadgate_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.interaction_settings_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.video_)*/nullptr
  , /*decltype(_impl_.created_at_)*/nullptr
  , /*decltype(_impl_.updated_at_)*/nullptr
  , /*decltype(_impl_.is_auto_saved_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DraftDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DraftDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DraftDefaultTypeInternal() {}
  union {
    Draft _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DraftDefaultTypeInternal _Draft_default_instance_;
PROTOBUF_CONSTEXPR DraftImage::DraftImage(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.alt_text_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.width_)*/0
  , /*decltype(_impl_.height_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DraftImageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DraftImageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DraftImageDefaultTypeInternal() {}
  union {
    DraftImage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DraftImageDefaultTypeInternal _DraftImage_default_instance_;
PROTOBUF_CONSTEXPR DraftVideo::DraftVideo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.uri_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.width_)*/0
  , /*decltype(_impl_.height_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DraftVideoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DraftVideoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DraftVideoDefaultTypeInternal() {}
  union {
    DraftVideo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DraftVideoDefaultTypeInternal _DraftVideo_default_instance_;
}  // namespace v1
}  // namespace drafts
}  // namespace sonet
static ::_pb::Metadata file_level_metadata_services_2fdrafts_5fservice_2eproto[15];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_services_2fdrafts_5fservice_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_services_2fdrafts_5fservice_2eproto = nullptr;

const uint32_t TableStruct_services_2fdrafts_5fservice_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::CreateDraftRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::CreateDraftRequest, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::CreateDraftRequest, _impl_.content_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::CreateDraftRequest, _impl_.reply_to_uri_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::CreateDraftRequest, _impl_.quote_uri_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::CreateDraftRequest, _impl_.mention_handle_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::CreateDraftRequest, _impl_.images_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::CreateDraftRequest, _impl_.video_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::CreateDraftRequest, _impl_.labels_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::CreateDraftRequest, _impl_.threadgate_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::CreateDraftRequest, _impl_.interaction_settings_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::CreateDraftRequest, _impl_.is_auto_saved_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::CreateDraftResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::CreateDraftResponse, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::CreateDraftResponse, _impl_.error_message_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::CreateDraftResponse, _impl_.draft_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::GetUserDraftsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::GetUserDraftsRequest, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::GetUserDraftsRequest, _impl_.limit_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::GetUserDraftsRequest, _impl_.cursor_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::GetUserDraftsRequest, _impl_.include_auto_saved_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::GetUserDraftsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::GetUserDraftsResponse, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::GetUserDraftsResponse, _impl_.error_message_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::GetUserDraftsResponse, _impl_.drafts_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::GetUserDraftsResponse, _impl_.next_cursor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::GetDraftRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::GetDraftRequest, _impl_.draft_id_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::GetDraftRequest, _impl_.user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::GetDraftResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::GetDraftResponse, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::GetDraftResponse, _impl_.error_message_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::GetDraftResponse, _impl_.draft_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::UpdateDraftRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::UpdateDraftRequest, _impl_.draft_id_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::UpdateDraftRequest, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::UpdateDraftRequest, _impl_.content_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::UpdateDraftRequest, _impl_.reply_to_uri_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::UpdateDraftRequest, _impl_.quote_uri_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::UpdateDraftRequest, _impl_.mention_handle_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::UpdateDraftRequest, _impl_.images_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::UpdateDraftRequest, _impl_.video_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::UpdateDraftRequest, _impl_.labels_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::UpdateDraftRequest, _impl_.threadgate_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::UpdateDraftRequest, _impl_.interaction_settings_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::UpdateDraftResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::UpdateDraftResponse, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::UpdateDraftResponse, _impl_.error_message_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::UpdateDraftResponse, _impl_.draft_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::DeleteDraftRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::DeleteDraftRequest, _impl_.draft_id_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::DeleteDraftRequest, _impl_.user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::DeleteDraftResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::DeleteDraftResponse, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::DeleteDraftResponse, _impl_.error_message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::AutoSaveDraftRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::AutoSaveDraftRequest, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::AutoSaveDraftRequest, _impl_.content_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::AutoSaveDraftRequest, _impl_.reply_to_uri_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::AutoSaveDraftRequest, _impl_.quote_uri_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::AutoSaveDraftRequest, _impl_.mention_handle_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::AutoSaveDraftRequest, _impl_.images_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::AutoSaveDraftRequest, _impl_.video_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::AutoSaveDraftRequest, _impl_.labels_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::AutoSaveDraftRequest, _impl_.threadgate_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::AutoSaveDraftRequest, _impl_.interaction_settings_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::AutoSaveDraftResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::AutoSaveDraftResponse, _impl_.success_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::AutoSaveDraftResponse, _impl_.error_message_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::AutoSaveDraftResponse, _impl_.draft_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::Draft, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::Draft, _impl_.draft_id_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::Draft, _impl_.user_id_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::Draft, _impl_.title_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::Draft, _impl_.content_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::Draft, _impl_.reply_to_uri_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::Draft, _impl_.quote_uri_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::Draft, _impl_.mention_handle_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::Draft, _impl_.images_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::Draft, _impl_.video_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::Draft, _impl_.labels_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::Draft, _impl_.threadgate_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::Draft, _impl_.interaction_settings_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::Draft, _impl_.created_at_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::Draft, _impl_.updated_at_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::Draft, _impl_.is_auto_saved_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::DraftImage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::DraftImage, _impl_.uri_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::DraftImage, _impl_.width_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::DraftImage, _impl_.height_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::DraftImage, _impl_.alt_text_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::DraftVideo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::DraftVideo, _impl_.uri_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::DraftVideo, _impl_.width_),
  PROTOBUF_FIELD_OFFSET(::sonet::drafts::v1::DraftVideo, _impl_.height_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::sonet::drafts::v1::CreateDraftRequest)},
  { 17, -1, -1, sizeof(::sonet::drafts::v1::CreateDraftResponse)},
  { 26, -1, -1, sizeof(::sonet::drafts::v1::GetUserDraftsRequest)},
  { 36, -1, -1, sizeof(::sonet::drafts::v1::GetUserDraftsResponse)},
  { 46, -1, -1, sizeof(::sonet::drafts::v1::GetDraftRequest)},
  { 54, -1, -1, sizeof(::sonet::drafts::v1::GetDraftResponse)},
  { 63, -1, -1, sizeof(::sonet::drafts::v1::UpdateDraftRequest)},
  { 80, -1, -1, sizeof(::sonet::drafts::v1::UpdateDraftResponse)},
  { 89, -1, -1, sizeof(::sonet::drafts::v1::DeleteDraftRequest)},
  { 97, -1, -1, sizeof(::sonet::drafts::v1::DeleteDraftResponse)},
  { 105, -1, -1, sizeof(::sonet::drafts::v1::AutoSaveDraftRequest)},
  { 121, -1, -1, sizeof(::sonet::drafts::v1::AutoSaveDraftResponse)},
  { 130, -1, -1, sizeof(::sonet::drafts::v1::Draft)},
  { 151, -1, -1, sizeof(::sonet::drafts::v1::DraftImage)},
  { 161, -1, -1, sizeof(::sonet::drafts::v1::DraftVideo)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::sonet::drafts::v1::_CreateDraftRequest_default_instance_._instance,
  &::sonet::drafts::v1::_CreateDraftResponse_default_instance_._instance,
  &::sonet::drafts::v1::_GetUserDraftsRequest_default_instance_._instance,
  &::sonet::drafts::v1::_GetUserDraftsResponse_default_instance_._instance,
  &::sonet::drafts::v1::_GetDraftRequest_default_instance_._instance,
  &::sonet::drafts::v1::_GetDraftResponse_default_instance_._instance,
  &::sonet::drafts::v1::_UpdateDraftRequest_default_instance_._instance,
  &::sonet::drafts::v1::_UpdateDraftResponse_default_instance_._instance,
  &::sonet::drafts::v1::_DeleteDraftRequest_default_instance_._instance,
  &::sonet::drafts::v1::_DeleteDraftResponse_default_instance_._instance,
  &::sonet::drafts::v1::_AutoSaveDraftRequest_default_instance_._instance,
  &::sonet::drafts::v1::_AutoSaveDraftResponse_default_instance_._instance,
  &::sonet::drafts::v1::_Draft_default_instance_._instance,
  &::sonet::drafts::v1::_DraftImage_default_instance_._instance,
  &::sonet::drafts::v1::_DraftVideo_default_instance_._instance,
};

const char descriptor_table_protodef_services_2fdrafts_5fservice_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\035services/drafts_service.proto\022\017sonet.d"
  "rafts.v1\032\037google/protobuf/timestamp.prot"
  "o\"\251\002\n\022CreateDraftRequest\022\017\n\007user_id\030\001 \001("
  "\t\022\017\n\007content\030\002 \001(\t\022\024\n\014reply_to_uri\030\003 \001(\t"
  "\022\021\n\tquote_uri\030\004 \001(\t\022\026\n\016mention_handle\030\005 "
  "\001(\t\022+\n\006images\030\006 \003(\0132\033.sonet.drafts.v1.Dr"
  "aftImage\022*\n\005video\030\007 \001(\0132\033.sonet.drafts.v"
  "1.DraftVideo\022\016\n\006labels\030\010 \003(\t\022\022\n\nthreadga"
  "te\030\t \001(\014\022\034\n\024interaction_settings\030\n \001(\014\022\025"
  "\n\ris_auto_saved\030\013 \001(\010\"d\n\023CreateDraftResp"
  "onse\022\017\n\007success\030\001 \001(\010\022\025\n\rerror_message\030\002"
  " \001(\t\022%\n\005draft\030\003 \001(\0132\026.sonet.drafts.v1.Dr"
  "aft\"b\n\024GetUserDraftsRequest\022\017\n\007user_id\030\001"
  " \001(\t\022\r\n\005limit\030\002 \001(\005\022\016\n\006cursor\030\003 \001(\t\022\032\n\022i"
  "nclude_auto_saved\030\004 \001(\010\"|\n\025GetUserDrafts"
  "Response\022\017\n\007success\030\001 \001(\010\022\025\n\rerror_messa"
  "ge\030\002 \001(\t\022&\n\006drafts\030\003 \003(\0132\026.sonet.drafts."
  "v1.Draft\022\023\n\013next_cursor\030\004 \001(\t\"4\n\017GetDraf"
  "tRequest\022\020\n\010draft_id\030\001 \001(\t\022\017\n\007user_id\030\002 "
  "\001(\t\"a\n\020GetDraftResponse\022\017\n\007success\030\001 \001(\010"
  "\022\025\n\rerror_message\030\002 \001(\t\022%\n\005draft\030\003 \001(\0132\026"
  ".sonet.drafts.v1.Draft\"\244\002\n\022UpdateDraftRe"
  "quest\022\020\n\010draft_id\030\001 \001(\t\022\017\n\007user_id\030\002 \001(\t"
  "\022\017\n\007content\030\003 \001(\t\022\024\n\014reply_to_uri\030\004 \001(\t\022"
  "\021\n\tquote_uri\030\005 \001(\t\022\026\n\016mention_handle\030\006 \001"
  "(\t\022+\n\006images\030\007 \003(\0132\033.sonet.drafts.v1.Dra"
  "ftImage\022*\n\005video\030\010 \001(\0132\033.sonet.drafts.v1"
  ".DraftVideo\022\016\n\006labels\030\t \003(\t\022\022\n\nthreadgat"
  "e\030\n \001(\014\022\034\n\024interaction_settings\030\013 \001(\014\"d\n"
  "\023UpdateDraftResponse\022\017\n\007success\030\001 \001(\010\022\025\n"
  "\rerror_message\030\002 \001(\t\022%\n\005draft\030\003 \001(\0132\026.so"
  "net.drafts.v1.Draft\"7\n\022DeleteDraftReques"
  "t\022\020\n\010draft_id\030\001 \001(\t\022\017\n\007user_id\030\002 \001(\t\"=\n\023"
  "DeleteDraftResponse\022\017\n\007success\030\001 \001(\010\022\025\n\r"
  "error_message\030\002 \001(\t\"\224\002\n\024AutoSaveDraftReq"
  "uest\022\017\n\007user_id\030\001 \001(\t\022\017\n\007content\030\002 \001(\t\022\024"
  "\n\014reply_to_uri\030\003 \001(\t\022\021\n\tquote_uri\030\004 \001(\t\022"
  "\026\n\016mention_handle\030\005 \001(\t\022+\n\006images\030\006 \003(\0132"
  "\033.sonet.drafts.v1.DraftImage\022*\n\005video\030\007 "
  "\001(\0132\033.sonet.drafts.v1.DraftVideo\022\016\n\006labe"
  "ls\030\010 \003(\t\022\022\n\nthreadgate\030\t \001(\014\022\034\n\024interact"
  "ion_settings\030\n \001(\014\"f\n\025AutoSaveDraftRespo"
  "nse\022\017\n\007success\030\001 \001(\010\022\025\n\rerror_message\030\002 "
  "\001(\t\022%\n\005draft\030\003 \001(\0132\026.sonet.drafts.v1.Dra"
  "ft\"\235\003\n\005Draft\022\020\n\010draft_id\030\001 \001(\t\022\017\n\007user_i"
  "d\030\002 \001(\t\022\r\n\005title\030\003 \001(\t\022\017\n\007content\030\004 \001(\t\022"
  "\024\n\014reply_to_uri\030\005 \001(\t\022\021\n\tquote_uri\030\006 \001(\t"
  "\022\026\n\016mention_handle\030\007 \001(\t\022+\n\006images\030\010 \003(\013"
  "2\033.sonet.drafts.v1.DraftImage\022*\n\005video\030\t"
  " \001(\0132\033.sonet.drafts.v1.DraftVideo\022\016\n\006lab"
  "els\030\n \003(\t\022\022\n\nthreadgate\030\013 \001(\014\022\034\n\024interac"
  "tion_settings\030\014 \001(\014\022.\n\ncreated_at\030\r \001(\0132"
  "\032.google.protobuf.Timestamp\022.\n\nupdated_a"
  "t\030\016 \001(\0132\032.google.protobuf.Timestamp\022\025\n\ri"
  "s_auto_saved\030\017 \001(\010\"J\n\nDraftImage\022\013\n\003uri\030"
  "\001 \001(\t\022\r\n\005width\030\002 \001(\005\022\016\n\006height\030\003 \001(\005\022\020\n\010"
  "alt_text\030\004 \001(\t\"8\n\nDraftVideo\022\013\n\003uri\030\001 \001("
  "\t\022\r\n\005width\030\002 \001(\005\022\016\n\006height\030\003 \001(\0052\256\004\n\rDra"
  "ftsService\022X\n\013CreateDraft\022#.sonet.drafts"
  ".v1.CreateDraftRequest\032$.sonet.drafts.v1"
  ".CreateDraftResponse\022^\n\rGetUserDrafts\022%."
  "sonet.drafts.v1.GetUserDraftsRequest\032&.s"
  "onet.drafts.v1.GetUserDraftsResponse\022O\n\010"
  "GetDraft\022 .sonet.drafts.v1.GetDraftReque"
  "st\032!.sonet.drafts.v1.GetDraftResponse\022X\n"
  "\013UpdateDraft\022#.sonet.drafts.v1.UpdateDra"
  "ftRequest\032$.sonet.drafts.v1.UpdateDraftR"
  "esponse\022X\n\013DeleteDraft\022#.sonet.drafts.v1"
  ".DeleteDraftRequest\032$.sonet.drafts.v1.De"
  "leteDraftResponse\022^\n\rAutoSaveDraft\022%.son"
  "et.drafts.v1.AutoSaveDraftRequest\032&.sone"
  "t.drafts.v1.AutoSaveDraftResponseB)Z\'son"
  "et/src/services/drafts_service/protob\006pr"
  "oto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_services_2fdrafts_5fservice_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::_pbi::once_flag descriptor_table_services_2fdrafts_5fservice_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_services_2fdrafts_5fservice_2eproto = {
    false, false, 2924, descriptor_table_protodef_services_2fdrafts_5fservice_2eproto,
    "services/drafts_service.proto",
    &descriptor_table_services_2fdrafts_5fservice_2eproto_once, descriptor_table_services_2fdrafts_5fservice_2eproto_deps, 1, 15,
    schemas, file_default_instances, TableStruct_services_2fdrafts_5fservice_2eproto::offsets,
    file_level_metadata_services_2fdrafts_5fservice_2eproto, file_level_enum_descriptors_services_2fdrafts_5fservice_2eproto,
    file_level_service_descriptors_services_2fdrafts_5fservice_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_services_2fdrafts_5fservice_2eproto_getter() {
  return &descriptor_table_services_2fdrafts_5fservice_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_services_2fdrafts_5fservice_2eproto(&descriptor_table_services_2fdrafts_5fservice_2eproto);
namespace sonet {
namespace drafts {
namespace v1 {

// ===================================================================

class CreateDraftRequest::_Internal {
 public:
  static const ::sonet::drafts::v1::DraftVideo& video(const CreateDraftRequest* msg);
};

const ::sonet::drafts::v1::DraftVideo&
CreateDraftRequest::_Internal::video(const CreateDraftRequest* msg) {
  return *msg->_impl_.video_;
}
CreateDraftRequest::CreateDraftRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.drafts.v1.CreateDraftRequest)
}
CreateDraftRequest::CreateDraftRequest(const CreateDraftRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateDraftRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.images_){from._impl_.images_}
    , decltype(_impl_.labels_){from._impl_.labels_}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.content_){}
    , decltype(_impl_.reply_to_uri_){}
    , decltype(_impl_.quote_uri_){}
    , decltype(_impl_.mention_handle_){}
    , decltype(_impl_.threadgate_){}
    , decltype(_impl_.interaction_settings_){}
    , decltype(_impl_.video_){nullptr}
    , decltype(_impl_.is_auto_saved_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    _this->_impl_.user_id_.Set(from._internal_user_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    _this->_impl_.content_.Set(from._internal_content(), 
      _this->GetArenaForAllocation());
  }
  _impl_.reply_to_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reply_to_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reply_to_uri().empty()) {
    _this->_impl_.reply_to_uri_.Set(from._internal_reply_to_uri(), 
      _this->GetArenaForAllocation());
  }
  _impl_.quote_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.quote_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_quote_uri().empty()) {
    _this->_impl_.quote_uri_.Set(from._internal_quote_uri(), 
      _this->GetArenaForAllocation());
  }
  _impl_.mention_handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mention_handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mention_handle().empty()) {
    _this->_impl_.mention_handle_.Set(from._internal_mention_handle(), 
      _this->GetArenaForAllocation());
  }
  _impl_.threadgate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.threadgate_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_threadgate().empty()) {
    _this->_impl_.threadgate_.Set(from._internal_threadgate(), 
      _this->GetArenaForAllocation());
  }
  _impl_.interaction_settings_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.interaction_settings_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_interaction_settings().empty()) {
    _this->_impl_.interaction_settings_.Set(from._internal_interaction_settings(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_video()) {
    _this->_impl_.video_ = new ::sonet::drafts::v1::DraftVideo(*from._impl_.video_);
  }
  _this->_impl_.is_auto_saved_ = from._impl_.is_auto_saved_;
  // @@protoc_insertion_point(copy_constructor:sonet.drafts.v1.CreateDraftRequest)
}

inline void CreateDraftRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.images_){arena}
    , decltype(_impl_.labels_){arena}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.content_){}
    , decltype(_impl_.reply_to_uri_){}
    , decltype(_impl_.quote_uri_){}
    , decltype(_impl_.mention_handle_){}
    , decltype(_impl_.threadgate_){}
    , decltype(_impl_.interaction_settings_){}
    , decltype(_impl_.video_){nullptr}
    , decltype(_impl_.is_auto_saved_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.reply_to_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reply_to_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.quote_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.quote_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.mention_handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mention_handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.threadgate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.threadgate_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.interaction_settings_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.interaction_settings_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateDraftRequest::~CreateDraftRequest() {
  // @@protoc_insertion_point(destructor:sonet.drafts.v1.CreateDraftRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateDraftRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.images_.~RepeatedPtrField();
  _impl_.labels_.~RepeatedPtrField();
  _impl_.user_id_.Destroy();
  _impl_.content_.Destroy();
  _impl_.reply_to_uri_.Destroy();
  _impl_.quote_uri_.Destroy();
  _impl_.mention_handle_.Destroy();
  _impl_.threadgate_.Destroy();
  _impl_.interaction_settings_.Destroy();
  if (this != internal_default_instance()) delete _impl_.video_;
}

void CreateDraftRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateDraftRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.drafts.v1.CreateDraftRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.images_.Clear();
  _impl_.labels_.Clear();
  _impl_.user_id_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  _impl_.reply_to_uri_.ClearToEmpty();
  _impl_.quote_uri_.ClearToEmpty();
  _impl_.mention_handle_.ClearToEmpty();
  _impl_.threadgate_.ClearToEmpty();
  _impl_.interaction_settings_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.video_ != nullptr) {
    delete _impl_.video_;
  }
  _impl_.video_ = nullptr;
  _impl_.is_auto_saved_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateDraftRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.CreateDraftRequest.user_id"));
        } else
          goto handle_unusual;
        continue;
      // string content = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_content();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.CreateDraftRequest.content"));
        } else
          goto handle_unusual;
        continue;
      // string reply_to_uri = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_reply_to_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.CreateDraftRequest.reply_to_uri"));
        } else
          goto handle_unusual;
        continue;
      // string quote_uri = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_quote_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.CreateDraftRequest.quote_uri"));
        } else
          goto handle_unusual;
        continue;
      // string mention_handle = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_mention_handle();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.CreateDraftRequest.mention_handle"));
        } else
          goto handle_unusual;
        continue;
      // repeated .sonet.drafts.v1.DraftImage images = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_images(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .sonet.drafts.v1.DraftVideo video = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_video(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string labels = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_labels();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.CreateDraftRequest.labels"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // bytes threadgate = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_threadgate();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes interaction_settings = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_interaction_settings();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool is_auto_saved = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _impl_.is_auto_saved_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateDraftRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.drafts.v1.CreateDraftRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.CreateDraftRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  // string content = 2;
  if (!this->_internal_content().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.CreateDraftRequest.content");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_content(), target);
  }

  // string reply_to_uri = 3;
  if (!this->_internal_reply_to_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reply_to_uri().data(), static_cast<int>(this->_internal_reply_to_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.CreateDraftRequest.reply_to_uri");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_reply_to_uri(), target);
  }

  // string quote_uri = 4;
  if (!this->_internal_quote_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_quote_uri().data(), static_cast<int>(this->_internal_quote_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.CreateDraftRequest.quote_uri");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_quote_uri(), target);
  }

  // string mention_handle = 5;
  if (!this->_internal_mention_handle().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mention_handle().data(), static_cast<int>(this->_internal_mention_handle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.CreateDraftRequest.mention_handle");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_mention_handle(), target);
  }

  // repeated .sonet.drafts.v1.DraftImage images = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_images_size()); i < n; i++) {
    const auto& repfield = this->_internal_images(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .sonet.drafts.v1.DraftVideo video = 7;
  if (this->_internal_has_video()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::video(this),
        _Internal::video(this).GetCachedSize(), target, stream);
  }

  // repeated string labels = 8;
  for (int i = 0, n = this->_internal_labels_size(); i < n; i++) {
    const auto& s = this->_internal_labels(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.CreateDraftRequest.labels");
    target = stream->WriteString(8, s, target);
  }

  // bytes threadgate = 9;
  if (!this->_internal_threadgate().empty()) {
    target = stream->WriteBytesMaybeAliased(
        9, this->_internal_threadgate(), target);
  }

  // bytes interaction_settings = 10;
  if (!this->_internal_interaction_settings().empty()) {
    target = stream->WriteBytesMaybeAliased(
        10, this->_internal_interaction_settings(), target);
  }

  // bool is_auto_saved = 11;
  if (this->_internal_is_auto_saved() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(11, this->_internal_is_auto_saved(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.drafts.v1.CreateDraftRequest)
  return target;
}

size_t CreateDraftRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.drafts.v1.CreateDraftRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sonet.drafts.v1.DraftImage images = 6;
  total_size += 1UL * this->_internal_images_size();
  for (const auto& msg : this->_impl_.images_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string labels = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.labels_.size());
  for (int i = 0, n = _impl_.labels_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.labels_.Get(i));
  }

  // string user_id = 1;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  // string content = 2;
  if (!this->_internal_content().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  // string reply_to_uri = 3;
  if (!this->_internal_reply_to_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reply_to_uri());
  }

  // string quote_uri = 4;
  if (!this->_internal_quote_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_quote_uri());
  }

  // string mention_handle = 5;
  if (!this->_internal_mention_handle().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mention_handle());
  }

  // bytes threadgate = 9;
  if (!this->_internal_threadgate().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_threadgate());
  }

  // bytes interaction_settings = 10;
  if (!this->_internal_interaction_settings().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_interaction_settings());
  }

  // .sonet.drafts.v1.DraftVideo video = 7;
  if (this->_internal_has_video()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.video_);
  }

  // bool is_auto_saved = 11;
  if (this->_internal_is_auto_saved() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateDraftRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateDraftRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateDraftRequest::GetClassData() const { return &_class_data_; }


void CreateDraftRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateDraftRequest*>(&to_msg);
  auto& from = static_cast<const CreateDraftRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.drafts.v1.CreateDraftRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.images_.MergeFrom(from._impl_.images_);
  _this->_impl_.labels_.MergeFrom(from._impl_.labels_);
  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (!from._internal_reply_to_uri().empty()) {
    _this->_internal_set_reply_to_uri(from._internal_reply_to_uri());
  }
  if (!from._internal_quote_uri().empty()) {
    _this->_internal_set_quote_uri(from._internal_quote_uri());
  }
  if (!from._internal_mention_handle().empty()) {
    _this->_internal_set_mention_handle(from._internal_mention_handle());
  }
  if (!from._internal_threadgate().empty()) {
    _this->_internal_set_threadgate(from._internal_threadgate());
  }
  if (!from._internal_interaction_settings().empty()) {
    _this->_internal_set_interaction_settings(from._internal_interaction_settings());
  }
  if (from._internal_has_video()) {
    _this->_internal_mutable_video()->::sonet::drafts::v1::DraftVideo::MergeFrom(
        from._internal_video());
  }
  if (from._internal_is_auto_saved() != 0) {
    _this->_internal_set_is_auto_saved(from._internal_is_auto_saved());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateDraftRequest::CopyFrom(const CreateDraftRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.drafts.v1.CreateDraftRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDraftRequest::IsInitialized() const {
  return true;
}

void CreateDraftRequest::InternalSwap(CreateDraftRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.images_.InternalSwap(&other->_impl_.images_);
  _impl_.labels_.InternalSwap(&other->_impl_.labels_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_id_, lhs_arena,
      &other->_impl_.user_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.content_, lhs_arena,
      &other->_impl_.content_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.reply_to_uri_, lhs_arena,
      &other->_impl_.reply_to_uri_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.quote_uri_, lhs_arena,
      &other->_impl_.quote_uri_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.mention_handle_, lhs_arena,
      &other->_impl_.mention_handle_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.threadgate_, lhs_arena,
      &other->_impl_.threadgate_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.interaction_settings_, lhs_arena,
      &other->_impl_.interaction_settings_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateDraftRequest, _impl_.is_auto_saved_)
      + sizeof(CreateDraftRequest::_impl_.is_auto_saved_)
      - PROTOBUF_FIELD_OFFSET(CreateDraftRequest, _impl_.video_)>(
          reinterpret_cast<char*>(&_impl_.video_),
          reinterpret_cast<char*>(&other->_impl_.video_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateDraftRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fdrafts_5fservice_2eproto_getter, &descriptor_table_services_2fdrafts_5fservice_2eproto_once,
      file_level_metadata_services_2fdrafts_5fservice_2eproto[0]);
}

// ===================================================================

class CreateDraftResponse::_Internal {
 public:
  static const ::sonet::drafts::v1::Draft& draft(const CreateDraftResponse* msg);
};

const ::sonet::drafts::v1::Draft&
CreateDraftResponse::_Internal::draft(const CreateDraftResponse* msg) {
  return *msg->_impl_.draft_;
}
CreateDraftResponse::CreateDraftResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.drafts.v1.CreateDraftResponse)
}
CreateDraftResponse::CreateDraftResponse(const CreateDraftResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateDraftResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , decltype(_impl_.draft_){nullptr}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_draft()) {
    _this->_impl_.draft_ = new ::sonet::drafts::v1::Draft(*from._impl_.draft_);
  }
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:sonet.drafts.v1.CreateDraftResponse)
}

inline void CreateDraftResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , decltype(_impl_.draft_){nullptr}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateDraftResponse::~CreateDraftResponse() {
  // @@protoc_insertion_point(destructor:sonet.drafts.v1.CreateDraftResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateDraftResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.draft_;
}

void CreateDraftResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateDraftResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.drafts.v1.CreateDraftResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.draft_ != nullptr) {
    delete _impl_.draft_;
  }
  _impl_.draft_ = nullptr;
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateDraftResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error_message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.CreateDraftResponse.error_message"));
        } else
          goto handle_unusual;
        continue;
      // .sonet.drafts.v1.Draft draft = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_draft(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateDraftResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.drafts.v1.CreateDraftResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.CreateDraftResponse.error_message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_message(), target);
  }

  // .sonet.drafts.v1.Draft draft = 3;
  if (this->_internal_has_draft()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::draft(this),
        _Internal::draft(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.drafts.v1.CreateDraftResponse)
  return target;
}

size_t CreateDraftResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.drafts.v1.CreateDraftResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // .sonet.drafts.v1.Draft draft = 3;
  if (this->_internal_has_draft()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.draft_);
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateDraftResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateDraftResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateDraftResponse::GetClassData() const { return &_class_data_; }


void CreateDraftResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateDraftResponse*>(&to_msg);
  auto& from = static_cast<const CreateDraftResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.drafts.v1.CreateDraftResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_has_draft()) {
    _this->_internal_mutable_draft()->::sonet::drafts::v1::Draft::MergeFrom(
        from._internal_draft());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateDraftResponse::CopyFrom(const CreateDraftResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.drafts.v1.CreateDraftResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDraftResponse::IsInitialized() const {
  return true;
}

void CreateDraftResponse::InternalSwap(CreateDraftResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_message_, lhs_arena,
      &other->_impl_.error_message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateDraftResponse, _impl_.success_)
      + sizeof(CreateDraftResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(CreateDraftResponse, _impl_.draft_)>(
          reinterpret_cast<char*>(&_impl_.draft_),
          reinterpret_cast<char*>(&other->_impl_.draft_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateDraftResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fdrafts_5fservice_2eproto_getter, &descriptor_table_services_2fdrafts_5fservice_2eproto_once,
      file_level_metadata_services_2fdrafts_5fservice_2eproto[1]);
}

// ===================================================================

class GetUserDraftsRequest::_Internal {
 public:
};

GetUserDraftsRequest::GetUserDraftsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.drafts.v1.GetUserDraftsRequest)
}
GetUserDraftsRequest::GetUserDraftsRequest(const GetUserDraftsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetUserDraftsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , decltype(_impl_.cursor_){}
    , decltype(_impl_.limit_){}
    , decltype(_impl_.include_auto_saved_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    _this->_impl_.user_id_.Set(from._internal_user_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.cursor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cursor_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cursor().empty()) {
    _this->_impl_.cursor_.Set(from._internal_cursor(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.limit_, &from._impl_.limit_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.include_auto_saved_) -
    reinterpret_cast<char*>(&_impl_.limit_)) + sizeof(_impl_.include_auto_saved_));
  // @@protoc_insertion_point(copy_constructor:sonet.drafts.v1.GetUserDraftsRequest)
}

inline void GetUserDraftsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , decltype(_impl_.cursor_){}
    , decltype(_impl_.limit_){0}
    , decltype(_impl_.include_auto_saved_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.cursor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cursor_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetUserDraftsRequest::~GetUserDraftsRequest() {
  // @@protoc_insertion_point(destructor:sonet.drafts.v1.GetUserDraftsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetUserDraftsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.user_id_.Destroy();
  _impl_.cursor_.Destroy();
}

void GetUserDraftsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetUserDraftsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.drafts.v1.GetUserDraftsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  _impl_.cursor_.ClearToEmpty();
  ::memset(&_impl_.limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.include_auto_saved_) -
      reinterpret_cast<char*>(&_impl_.limit_)) + sizeof(_impl_.include_auto_saved_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetUserDraftsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.GetUserDraftsRequest.user_id"));
        } else
          goto handle_unusual;
        continue;
      // int32 limit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string cursor = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_cursor();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.GetUserDraftsRequest.cursor"));
        } else
          goto handle_unusual;
        continue;
      // bool include_auto_saved = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.include_auto_saved_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetUserDraftsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.drafts.v1.GetUserDraftsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.GetUserDraftsRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  // int32 limit = 2;
  if (this->_internal_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_limit(), target);
  }

  // string cursor = 3;
  if (!this->_internal_cursor().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cursor().data(), static_cast<int>(this->_internal_cursor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.GetUserDraftsRequest.cursor");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_cursor(), target);
  }

  // bool include_auto_saved = 4;
  if (this->_internal_include_auto_saved() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_include_auto_saved(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.drafts.v1.GetUserDraftsRequest)
  return target;
}

size_t GetUserDraftsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.drafts.v1.GetUserDraftsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_id = 1;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  // string cursor = 3;
  if (!this->_internal_cursor().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cursor());
  }

  // int32 limit = 2;
  if (this->_internal_limit() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_limit());
  }

  // bool include_auto_saved = 4;
  if (this->_internal_include_auto_saved() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetUserDraftsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetUserDraftsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetUserDraftsRequest::GetClassData() const { return &_class_data_; }


void GetUserDraftsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetUserDraftsRequest*>(&to_msg);
  auto& from = static_cast<const GetUserDraftsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.drafts.v1.GetUserDraftsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_cursor().empty()) {
    _this->_internal_set_cursor(from._internal_cursor());
  }
  if (from._internal_limit() != 0) {
    _this->_internal_set_limit(from._internal_limit());
  }
  if (from._internal_include_auto_saved() != 0) {
    _this->_internal_set_include_auto_saved(from._internal_include_auto_saved());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetUserDraftsRequest::CopyFrom(const GetUserDraftsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.drafts.v1.GetUserDraftsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserDraftsRequest::IsInitialized() const {
  return true;
}

void GetUserDraftsRequest::InternalSwap(GetUserDraftsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_id_, lhs_arena,
      &other->_impl_.user_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.cursor_, lhs_arena,
      &other->_impl_.cursor_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetUserDraftsRequest, _impl_.include_auto_saved_)
      + sizeof(GetUserDraftsRequest::_impl_.include_auto_saved_)
      - PROTOBUF_FIELD_OFFSET(GetUserDraftsRequest, _impl_.limit_)>(
          reinterpret_cast<char*>(&_impl_.limit_),
          reinterpret_cast<char*>(&other->_impl_.limit_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetUserDraftsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fdrafts_5fservice_2eproto_getter, &descriptor_table_services_2fdrafts_5fservice_2eproto_once,
      file_level_metadata_services_2fdrafts_5fservice_2eproto[2]);
}

// ===================================================================

class GetUserDraftsResponse::_Internal {
 public:
};

GetUserDraftsResponse::GetUserDraftsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.drafts.v1.GetUserDraftsResponse)
}
GetUserDraftsResponse::GetUserDraftsResponse(const GetUserDraftsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetUserDraftsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.drafts_){from._impl_.drafts_}
    , decltype(_impl_.error_message_){}
    , decltype(_impl_.next_cursor_){}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), 
      _this->GetArenaForAllocation());
  }
  _impl_.next_cursor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_cursor_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_next_cursor().empty()) {
    _this->_impl_.next_cursor_.Set(from._internal_next_cursor(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:sonet.drafts.v1.GetUserDraftsResponse)
}

inline void GetUserDraftsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.drafts_){arena}
    , decltype(_impl_.error_message_){}
    , decltype(_impl_.next_cursor_){}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.next_cursor_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.next_cursor_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetUserDraftsResponse::~GetUserDraftsResponse() {
  // @@protoc_insertion_point(destructor:sonet.drafts.v1.GetUserDraftsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetUserDraftsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.drafts_.~RepeatedPtrField();
  _impl_.error_message_.Destroy();
  _impl_.next_cursor_.Destroy();
}

void GetUserDraftsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetUserDraftsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.drafts.v1.GetUserDraftsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.drafts_.Clear();
  _impl_.error_message_.ClearToEmpty();
  _impl_.next_cursor_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetUserDraftsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error_message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.GetUserDraftsResponse.error_message"));
        } else
          goto handle_unusual;
        continue;
      // repeated .sonet.drafts.v1.Draft drafts = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_drafts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string next_cursor = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_next_cursor();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.GetUserDraftsResponse.next_cursor"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetUserDraftsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.drafts.v1.GetUserDraftsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.GetUserDraftsResponse.error_message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_message(), target);
  }

  // repeated .sonet.drafts.v1.Draft drafts = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_drafts_size()); i < n; i++) {
    const auto& repfield = this->_internal_drafts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string next_cursor = 4;
  if (!this->_internal_next_cursor().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_next_cursor().data(), static_cast<int>(this->_internal_next_cursor().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.GetUserDraftsResponse.next_cursor");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_next_cursor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.drafts.v1.GetUserDraftsResponse)
  return target;
}

size_t GetUserDraftsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.drafts.v1.GetUserDraftsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sonet.drafts.v1.Draft drafts = 3;
  total_size += 1UL * this->_internal_drafts_size();
  for (const auto& msg : this->_impl_.drafts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // string next_cursor = 4;
  if (!this->_internal_next_cursor().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_next_cursor());
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetUserDraftsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetUserDraftsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetUserDraftsResponse::GetClassData() const { return &_class_data_; }


void GetUserDraftsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetUserDraftsResponse*>(&to_msg);
  auto& from = static_cast<const GetUserDraftsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.drafts.v1.GetUserDraftsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.drafts_.MergeFrom(from._impl_.drafts_);
  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (!from._internal_next_cursor().empty()) {
    _this->_internal_set_next_cursor(from._internal_next_cursor());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetUserDraftsResponse::CopyFrom(const GetUserDraftsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.drafts.v1.GetUserDraftsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserDraftsResponse::IsInitialized() const {
  return true;
}

void GetUserDraftsResponse::InternalSwap(GetUserDraftsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.drafts_.InternalSwap(&other->_impl_.drafts_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_message_, lhs_arena,
      &other->_impl_.error_message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.next_cursor_, lhs_arena,
      &other->_impl_.next_cursor_, rhs_arena
  );
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetUserDraftsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fdrafts_5fservice_2eproto_getter, &descriptor_table_services_2fdrafts_5fservice_2eproto_once,
      file_level_metadata_services_2fdrafts_5fservice_2eproto[3]);
}

// ===================================================================

class GetDraftRequest::_Internal {
 public:
};

GetDraftRequest::GetDraftRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.drafts.v1.GetDraftRequest)
}
GetDraftRequest::GetDraftRequest(const GetDraftRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetDraftRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.draft_id_){}
    , decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.draft_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.draft_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_draft_id().empty()) {
    _this->_impl_.draft_id_.Set(from._internal_draft_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    _this->_impl_.user_id_.Set(from._internal_user_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:sonet.drafts.v1.GetDraftRequest)
}

inline void GetDraftRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.draft_id_){}
    , decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.draft_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.draft_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetDraftRequest::~GetDraftRequest() {
  // @@protoc_insertion_point(destructor:sonet.drafts.v1.GetDraftRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetDraftRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.draft_id_.Destroy();
  _impl_.user_id_.Destroy();
}

void GetDraftRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetDraftRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.drafts.v1.GetDraftRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.draft_id_.ClearToEmpty();
  _impl_.user_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDraftRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string draft_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_draft_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.GetDraftRequest.draft_id"));
        } else
          goto handle_unusual;
        continue;
      // string user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.GetDraftRequest.user_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetDraftRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.drafts.v1.GetDraftRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string draft_id = 1;
  if (!this->_internal_draft_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_draft_id().data(), static_cast<int>(this->_internal_draft_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.GetDraftRequest.draft_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_draft_id(), target);
  }

  // string user_id = 2;
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.GetDraftRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.drafts.v1.GetDraftRequest)
  return target;
}

size_t GetDraftRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.drafts.v1.GetDraftRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string draft_id = 1;
  if (!this->_internal_draft_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_draft_id());
  }

  // string user_id = 2;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetDraftRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetDraftRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetDraftRequest::GetClassData() const { return &_class_data_; }


void GetDraftRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetDraftRequest*>(&to_msg);
  auto& from = static_cast<const GetDraftRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.drafts.v1.GetDraftRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_draft_id().empty()) {
    _this->_internal_set_draft_id(from._internal_draft_id());
  }
  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetDraftRequest::CopyFrom(const GetDraftRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.drafts.v1.GetDraftRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDraftRequest::IsInitialized() const {
  return true;
}

void GetDraftRequest::InternalSwap(GetDraftRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.draft_id_, lhs_arena,
      &other->_impl_.draft_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_id_, lhs_arena,
      &other->_impl_.user_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDraftRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fdrafts_5fservice_2eproto_getter, &descriptor_table_services_2fdrafts_5fservice_2eproto_once,
      file_level_metadata_services_2fdrafts_5fservice_2eproto[4]);
}

// ===================================================================

class GetDraftResponse::_Internal {
 public:
  static const ::sonet::drafts::v1::Draft& draft(const GetDraftResponse* msg);
};

const ::sonet::drafts::v1::Draft&
GetDraftResponse::_Internal::draft(const GetDraftResponse* msg) {
  return *msg->_impl_.draft_;
}
GetDraftResponse::GetDraftResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.drafts.v1.GetDraftResponse)
}
GetDraftResponse::GetDraftResponse(const GetDraftResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetDraftResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , decltype(_impl_.draft_){nullptr}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_draft()) {
    _this->_impl_.draft_ = new ::sonet::drafts::v1::Draft(*from._impl_.draft_);
  }
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:sonet.drafts.v1.GetDraftResponse)
}

inline void GetDraftResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , decltype(_impl_.draft_){nullptr}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetDraftResponse::~GetDraftResponse() {
  // @@protoc_insertion_point(destructor:sonet.drafts.v1.GetDraftResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetDraftResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.draft_;
}

void GetDraftResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetDraftResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.drafts.v1.GetDraftResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.draft_ != nullptr) {
    delete _impl_.draft_;
  }
  _impl_.draft_ = nullptr;
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDraftResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error_message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.GetDraftResponse.error_message"));
        } else
          goto handle_unusual;
        continue;
      // .sonet.drafts.v1.Draft draft = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_draft(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetDraftResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.drafts.v1.GetDraftResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.GetDraftResponse.error_message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_message(), target);
  }

  // .sonet.drafts.v1.Draft draft = 3;
  if (this->_internal_has_draft()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::draft(this),
        _Internal::draft(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.drafts.v1.GetDraftResponse)
  return target;
}

size_t GetDraftResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.drafts.v1.GetDraftResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // .sonet.drafts.v1.Draft draft = 3;
  if (this->_internal_has_draft()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.draft_);
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetDraftResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetDraftResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetDraftResponse::GetClassData() const { return &_class_data_; }


void GetDraftResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetDraftResponse*>(&to_msg);
  auto& from = static_cast<const GetDraftResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.drafts.v1.GetDraftResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_has_draft()) {
    _this->_internal_mutable_draft()->::sonet::drafts::v1::Draft::MergeFrom(
        from._internal_draft());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetDraftResponse::CopyFrom(const GetDraftResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.drafts.v1.GetDraftResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDraftResponse::IsInitialized() const {
  return true;
}

void GetDraftResponse::InternalSwap(GetDraftResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_message_, lhs_arena,
      &other->_impl_.error_message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetDraftResponse, _impl_.success_)
      + sizeof(GetDraftResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(GetDraftResponse, _impl_.draft_)>(
          reinterpret_cast<char*>(&_impl_.draft_),
          reinterpret_cast<char*>(&other->_impl_.draft_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDraftResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fdrafts_5fservice_2eproto_getter, &descriptor_table_services_2fdrafts_5fservice_2eproto_once,
      file_level_metadata_services_2fdrafts_5fservice_2eproto[5]);
}

// ===================================================================

class UpdateDraftRequest::_Internal {
 public:
  static const ::sonet::drafts::v1::DraftVideo& video(const UpdateDraftRequest* msg);
};

const ::sonet::drafts::v1::DraftVideo&
UpdateDraftRequest::_Internal::video(const UpdateDraftRequest* msg) {
  return *msg->_impl_.video_;
}
UpdateDraftRequest::UpdateDraftRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.drafts.v1.UpdateDraftRequest)
}
UpdateDraftRequest::UpdateDraftRequest(const UpdateDraftRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateDraftRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.images_){from._impl_.images_}
    , decltype(_impl_.labels_){from._impl_.labels_}
    , decltype(_impl_.draft_id_){}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.content_){}
    , decltype(_impl_.reply_to_uri_){}
    , decltype(_impl_.quote_uri_){}
    , decltype(_impl_.mention_handle_){}
    , decltype(_impl_.threadgate_){}
    , decltype(_impl_.interaction_settings_){}
    , decltype(_impl_.video_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.draft_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.draft_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_draft_id().empty()) {
    _this->_impl_.draft_id_.Set(from._internal_draft_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    _this->_impl_.user_id_.Set(from._internal_user_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    _this->_impl_.content_.Set(from._internal_content(), 
      _this->GetArenaForAllocation());
  }
  _impl_.reply_to_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reply_to_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reply_to_uri().empty()) {
    _this->_impl_.reply_to_uri_.Set(from._internal_reply_to_uri(), 
      _this->GetArenaForAllocation());
  }
  _impl_.quote_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.quote_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_quote_uri().empty()) {
    _this->_impl_.quote_uri_.Set(from._internal_quote_uri(), 
      _this->GetArenaForAllocation());
  }
  _impl_.mention_handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mention_handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mention_handle().empty()) {
    _this->_impl_.mention_handle_.Set(from._internal_mention_handle(), 
      _this->GetArenaForAllocation());
  }
  _impl_.threadgate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.threadgate_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_threadgate().empty()) {
    _this->_impl_.threadgate_.Set(from._internal_threadgate(), 
      _this->GetArenaForAllocation());
  }
  _impl_.interaction_settings_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.interaction_settings_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_interaction_settings().empty()) {
    _this->_impl_.interaction_settings_.Set(from._internal_interaction_settings(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_video()) {
    _this->_impl_.video_ = new ::sonet::drafts::v1::DraftVideo(*from._impl_.video_);
  }
  // @@protoc_insertion_point(copy_constructor:sonet.drafts.v1.UpdateDraftRequest)
}

inline void UpdateDraftRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.images_){arena}
    , decltype(_impl_.labels_){arena}
    , decltype(_impl_.draft_id_){}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.content_){}
    , decltype(_impl_.reply_to_uri_){}
    , decltype(_impl_.quote_uri_){}
    , decltype(_impl_.mention_handle_){}
    , decltype(_impl_.threadgate_){}
    , decltype(_impl_.interaction_settings_){}
    , decltype(_impl_.video_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.draft_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.draft_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.reply_to_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reply_to_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.quote_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.quote_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.mention_handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mention_handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.threadgate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.threadgate_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.interaction_settings_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.interaction_settings_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateDraftRequest::~UpdateDraftRequest() {
  // @@protoc_insertion_point(destructor:sonet.drafts.v1.UpdateDraftRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateDraftRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.images_.~RepeatedPtrField();
  _impl_.labels_.~RepeatedPtrField();
  _impl_.draft_id_.Destroy();
  _impl_.user_id_.Destroy();
  _impl_.content_.Destroy();
  _impl_.reply_to_uri_.Destroy();
  _impl_.quote_uri_.Destroy();
  _impl_.mention_handle_.Destroy();
  _impl_.threadgate_.Destroy();
  _impl_.interaction_settings_.Destroy();
  if (this != internal_default_instance()) delete _impl_.video_;
}

void UpdateDraftRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateDraftRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.drafts.v1.UpdateDraftRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.images_.Clear();
  _impl_.labels_.Clear();
  _impl_.draft_id_.ClearToEmpty();
  _impl_.user_id_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  _impl_.reply_to_uri_.ClearToEmpty();
  _impl_.quote_uri_.ClearToEmpty();
  _impl_.mention_handle_.ClearToEmpty();
  _impl_.threadgate_.ClearToEmpty();
  _impl_.interaction_settings_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.video_ != nullptr) {
    delete _impl_.video_;
  }
  _impl_.video_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateDraftRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string draft_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_draft_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.UpdateDraftRequest.draft_id"));
        } else
          goto handle_unusual;
        continue;
      // string user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.UpdateDraftRequest.user_id"));
        } else
          goto handle_unusual;
        continue;
      // string content = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_content();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.UpdateDraftRequest.content"));
        } else
          goto handle_unusual;
        continue;
      // string reply_to_uri = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_reply_to_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.UpdateDraftRequest.reply_to_uri"));
        } else
          goto handle_unusual;
        continue;
      // string quote_uri = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_quote_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.UpdateDraftRequest.quote_uri"));
        } else
          goto handle_unusual;
        continue;
      // string mention_handle = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_mention_handle();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.UpdateDraftRequest.mention_handle"));
        } else
          goto handle_unusual;
        continue;
      // repeated .sonet.drafts.v1.DraftImage images = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_images(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .sonet.drafts.v1.DraftVideo video = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_video(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string labels = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_labels();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.UpdateDraftRequest.labels"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else
          goto handle_unusual;
        continue;
      // bytes threadgate = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_threadgate();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes interaction_settings = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_interaction_settings();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateDraftRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.drafts.v1.UpdateDraftRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string draft_id = 1;
  if (!this->_internal_draft_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_draft_id().data(), static_cast<int>(this->_internal_draft_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.UpdateDraftRequest.draft_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_draft_id(), target);
  }

  // string user_id = 2;
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.UpdateDraftRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_user_id(), target);
  }

  // string content = 3;
  if (!this->_internal_content().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.UpdateDraftRequest.content");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_content(), target);
  }

  // string reply_to_uri = 4;
  if (!this->_internal_reply_to_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reply_to_uri().data(), static_cast<int>(this->_internal_reply_to_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.UpdateDraftRequest.reply_to_uri");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_reply_to_uri(), target);
  }

  // string quote_uri = 5;
  if (!this->_internal_quote_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_quote_uri().data(), static_cast<int>(this->_internal_quote_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.UpdateDraftRequest.quote_uri");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_quote_uri(), target);
  }

  // string mention_handle = 6;
  if (!this->_internal_mention_handle().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mention_handle().data(), static_cast<int>(this->_internal_mention_handle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.UpdateDraftRequest.mention_handle");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_mention_handle(), target);
  }

  // repeated .sonet.drafts.v1.DraftImage images = 7;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_images_size()); i < n; i++) {
    const auto& repfield = this->_internal_images(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .sonet.drafts.v1.DraftVideo video = 8;
  if (this->_internal_has_video()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::video(this),
        _Internal::video(this).GetCachedSize(), target, stream);
  }

  // repeated string labels = 9;
  for (int i = 0, n = this->_internal_labels_size(); i < n; i++) {
    const auto& s = this->_internal_labels(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.UpdateDraftRequest.labels");
    target = stream->WriteString(9, s, target);
  }

  // bytes threadgate = 10;
  if (!this->_internal_threadgate().empty()) {
    target = stream->WriteBytesMaybeAliased(
        10, this->_internal_threadgate(), target);
  }

  // bytes interaction_settings = 11;
  if (!this->_internal_interaction_settings().empty()) {
    target = stream->WriteBytesMaybeAliased(
        11, this->_internal_interaction_settings(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.drafts.v1.UpdateDraftRequest)
  return target;
}

size_t UpdateDraftRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.drafts.v1.UpdateDraftRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sonet.drafts.v1.DraftImage images = 7;
  total_size += 1UL * this->_internal_images_size();
  for (const auto& msg : this->_impl_.images_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string labels = 9;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.labels_.size());
  for (int i = 0, n = _impl_.labels_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.labels_.Get(i));
  }

  // string draft_id = 1;
  if (!this->_internal_draft_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_draft_id());
  }

  // string user_id = 2;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  // string content = 3;
  if (!this->_internal_content().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  // string reply_to_uri = 4;
  if (!this->_internal_reply_to_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reply_to_uri());
  }

  // string quote_uri = 5;
  if (!this->_internal_quote_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_quote_uri());
  }

  // string mention_handle = 6;
  if (!this->_internal_mention_handle().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mention_handle());
  }

  // bytes threadgate = 10;
  if (!this->_internal_threadgate().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_threadgate());
  }

  // bytes interaction_settings = 11;
  if (!this->_internal_interaction_settings().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_interaction_settings());
  }

  // .sonet.drafts.v1.DraftVideo video = 8;
  if (this->_internal_has_video()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.video_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateDraftRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateDraftRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateDraftRequest::GetClassData() const { return &_class_data_; }


void UpdateDraftRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateDraftRequest*>(&to_msg);
  auto& from = static_cast<const UpdateDraftRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.drafts.v1.UpdateDraftRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.images_.MergeFrom(from._impl_.images_);
  _this->_impl_.labels_.MergeFrom(from._impl_.labels_);
  if (!from._internal_draft_id().empty()) {
    _this->_internal_set_draft_id(from._internal_draft_id());
  }
  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (!from._internal_reply_to_uri().empty()) {
    _this->_internal_set_reply_to_uri(from._internal_reply_to_uri());
  }
  if (!from._internal_quote_uri().empty()) {
    _this->_internal_set_quote_uri(from._internal_quote_uri());
  }
  if (!from._internal_mention_handle().empty()) {
    _this->_internal_set_mention_handle(from._internal_mention_handle());
  }
  if (!from._internal_threadgate().empty()) {
    _this->_internal_set_threadgate(from._internal_threadgate());
  }
  if (!from._internal_interaction_settings().empty()) {
    _this->_internal_set_interaction_settings(from._internal_interaction_settings());
  }
  if (from._internal_has_video()) {
    _this->_internal_mutable_video()->::sonet::drafts::v1::DraftVideo::MergeFrom(
        from._internal_video());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateDraftRequest::CopyFrom(const UpdateDraftRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.drafts.v1.UpdateDraftRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateDraftRequest::IsInitialized() const {
  return true;
}

void UpdateDraftRequest::InternalSwap(UpdateDraftRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.images_.InternalSwap(&other->_impl_.images_);
  _impl_.labels_.InternalSwap(&other->_impl_.labels_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.draft_id_, lhs_arena,
      &other->_impl_.draft_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_id_, lhs_arena,
      &other->_impl_.user_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.content_, lhs_arena,
      &other->_impl_.content_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.reply_to_uri_, lhs_arena,
      &other->_impl_.reply_to_uri_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.quote_uri_, lhs_arena,
      &other->_impl_.quote_uri_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.mention_handle_, lhs_arena,
      &other->_impl_.mention_handle_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.threadgate_, lhs_arena,
      &other->_impl_.threadgate_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.interaction_settings_, lhs_arena,
      &other->_impl_.interaction_settings_, rhs_arena
  );
  swap(_impl_.video_, other->_impl_.video_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateDraftRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fdrafts_5fservice_2eproto_getter, &descriptor_table_services_2fdrafts_5fservice_2eproto_once,
      file_level_metadata_services_2fdrafts_5fservice_2eproto[6]);
}

// ===================================================================

class UpdateDraftResponse::_Internal {
 public:
  static const ::sonet::drafts::v1::Draft& draft(const UpdateDraftResponse* msg);
};

const ::sonet::drafts::v1::Draft&
UpdateDraftResponse::_Internal::draft(const UpdateDraftResponse* msg) {
  return *msg->_impl_.draft_;
}
UpdateDraftResponse::UpdateDraftResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.drafts.v1.UpdateDraftResponse)
}
UpdateDraftResponse::UpdateDraftResponse(const UpdateDraftResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateDraftResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , decltype(_impl_.draft_){nullptr}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_draft()) {
    _this->_impl_.draft_ = new ::sonet::drafts::v1::Draft(*from._impl_.draft_);
  }
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:sonet.drafts.v1.UpdateDraftResponse)
}

inline void UpdateDraftResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , decltype(_impl_.draft_){nullptr}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateDraftResponse::~UpdateDraftResponse() {
  // @@protoc_insertion_point(destructor:sonet.drafts.v1.UpdateDraftResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateDraftResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.draft_;
}

void UpdateDraftResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateDraftResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.drafts.v1.UpdateDraftResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.draft_ != nullptr) {
    delete _impl_.draft_;
  }
  _impl_.draft_ = nullptr;
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateDraftResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error_message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.UpdateDraftResponse.error_message"));
        } else
          goto handle_unusual;
        continue;
      // .sonet.drafts.v1.Draft draft = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_draft(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateDraftResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.drafts.v1.UpdateDraftResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.UpdateDraftResponse.error_message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_message(), target);
  }

  // .sonet.drafts.v1.Draft draft = 3;
  if (this->_internal_has_draft()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::draft(this),
        _Internal::draft(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.drafts.v1.UpdateDraftResponse)
  return target;
}

size_t UpdateDraftResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.drafts.v1.UpdateDraftResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // .sonet.drafts.v1.Draft draft = 3;
  if (this->_internal_has_draft()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.draft_);
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateDraftResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateDraftResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateDraftResponse::GetClassData() const { return &_class_data_; }


void UpdateDraftResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateDraftResponse*>(&to_msg);
  auto& from = static_cast<const UpdateDraftResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.drafts.v1.UpdateDraftResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_has_draft()) {
    _this->_internal_mutable_draft()->::sonet::drafts::v1::Draft::MergeFrom(
        from._internal_draft());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateDraftResponse::CopyFrom(const UpdateDraftResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.drafts.v1.UpdateDraftResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateDraftResponse::IsInitialized() const {
  return true;
}

void UpdateDraftResponse::InternalSwap(UpdateDraftResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_message_, lhs_arena,
      &other->_impl_.error_message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateDraftResponse, _impl_.success_)
      + sizeof(UpdateDraftResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(UpdateDraftResponse, _impl_.draft_)>(
          reinterpret_cast<char*>(&_impl_.draft_),
          reinterpret_cast<char*>(&other->_impl_.draft_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateDraftResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fdrafts_5fservice_2eproto_getter, &descriptor_table_services_2fdrafts_5fservice_2eproto_once,
      file_level_metadata_services_2fdrafts_5fservice_2eproto[7]);
}

// ===================================================================

class DeleteDraftRequest::_Internal {
 public:
};

DeleteDraftRequest::DeleteDraftRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.drafts.v1.DeleteDraftRequest)
}
DeleteDraftRequest::DeleteDraftRequest(const DeleteDraftRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteDraftRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.draft_id_){}
    , decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.draft_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.draft_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_draft_id().empty()) {
    _this->_impl_.draft_id_.Set(from._internal_draft_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    _this->_impl_.user_id_.Set(from._internal_user_id(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:sonet.drafts.v1.DeleteDraftRequest)
}

inline void DeleteDraftRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.draft_id_){}
    , decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.draft_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.draft_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteDraftRequest::~DeleteDraftRequest() {
  // @@protoc_insertion_point(destructor:sonet.drafts.v1.DeleteDraftRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteDraftRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.draft_id_.Destroy();
  _impl_.user_id_.Destroy();
}

void DeleteDraftRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteDraftRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.drafts.v1.DeleteDraftRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.draft_id_.ClearToEmpty();
  _impl_.user_id_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteDraftRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string draft_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_draft_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.DeleteDraftRequest.draft_id"));
        } else
          goto handle_unusual;
        continue;
      // string user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.DeleteDraftRequest.user_id"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteDraftRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.drafts.v1.DeleteDraftRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string draft_id = 1;
  if (!this->_internal_draft_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_draft_id().data(), static_cast<int>(this->_internal_draft_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.DeleteDraftRequest.draft_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_draft_id(), target);
  }

  // string user_id = 2;
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.DeleteDraftRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.drafts.v1.DeleteDraftRequest)
  return target;
}

size_t DeleteDraftRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.drafts.v1.DeleteDraftRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string draft_id = 1;
  if (!this->_internal_draft_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_draft_id());
  }

  // string user_id = 2;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteDraftRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteDraftRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteDraftRequest::GetClassData() const { return &_class_data_; }


void DeleteDraftRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteDraftRequest*>(&to_msg);
  auto& from = static_cast<const DeleteDraftRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.drafts.v1.DeleteDraftRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_draft_id().empty()) {
    _this->_internal_set_draft_id(from._internal_draft_id());
  }
  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteDraftRequest::CopyFrom(const DeleteDraftRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.drafts.v1.DeleteDraftRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteDraftRequest::IsInitialized() const {
  return true;
}

void DeleteDraftRequest::InternalSwap(DeleteDraftRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.draft_id_, lhs_arena,
      &other->_impl_.draft_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_id_, lhs_arena,
      &other->_impl_.user_id_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteDraftRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fdrafts_5fservice_2eproto_getter, &descriptor_table_services_2fdrafts_5fservice_2eproto_once,
      file_level_metadata_services_2fdrafts_5fservice_2eproto[8]);
}

// ===================================================================

class DeleteDraftResponse::_Internal {
 public:
};

DeleteDraftResponse::DeleteDraftResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.drafts.v1.DeleteDraftResponse)
}
DeleteDraftResponse::DeleteDraftResponse(const DeleteDraftResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteDraftResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:sonet.drafts.v1.DeleteDraftResponse)
}

inline void DeleteDraftResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteDraftResponse::~DeleteDraftResponse() {
  // @@protoc_insertion_point(destructor:sonet.drafts.v1.DeleteDraftResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteDraftResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_message_.Destroy();
}

void DeleteDraftResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteDraftResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.drafts.v1.DeleteDraftResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteDraftResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error_message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.DeleteDraftResponse.error_message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteDraftResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.drafts.v1.DeleteDraftResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.DeleteDraftResponse.error_message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.drafts.v1.DeleteDraftResponse)
  return target;
}

size_t DeleteDraftResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.drafts.v1.DeleteDraftResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteDraftResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteDraftResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteDraftResponse::GetClassData() const { return &_class_data_; }


void DeleteDraftResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteDraftResponse*>(&to_msg);
  auto& from = static_cast<const DeleteDraftResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.drafts.v1.DeleteDraftResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteDraftResponse::CopyFrom(const DeleteDraftResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.drafts.v1.DeleteDraftResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteDraftResponse::IsInitialized() const {
  return true;
}

void DeleteDraftResponse::InternalSwap(DeleteDraftResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_message_, lhs_arena,
      &other->_impl_.error_message_, rhs_arena
  );
  swap(_impl_.success_, other->_impl_.success_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteDraftResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fdrafts_5fservice_2eproto_getter, &descriptor_table_services_2fdrafts_5fservice_2eproto_once,
      file_level_metadata_services_2fdrafts_5fservice_2eproto[9]);
}

// ===================================================================

class AutoSaveDraftRequest::_Internal {
 public:
  static const ::sonet::drafts::v1::DraftVideo& video(const AutoSaveDraftRequest* msg);
};

const ::sonet::drafts::v1::DraftVideo&
AutoSaveDraftRequest::_Internal::video(const AutoSaveDraftRequest* msg) {
  return *msg->_impl_.video_;
}
AutoSaveDraftRequest::AutoSaveDraftRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.drafts.v1.AutoSaveDraftRequest)
}
AutoSaveDraftRequest::AutoSaveDraftRequest(const AutoSaveDraftRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AutoSaveDraftRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.images_){from._impl_.images_}
    , decltype(_impl_.labels_){from._impl_.labels_}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.content_){}
    , decltype(_impl_.reply_to_uri_){}
    , decltype(_impl_.quote_uri_){}
    , decltype(_impl_.mention_handle_){}
    , decltype(_impl_.threadgate_){}
    , decltype(_impl_.interaction_settings_){}
    , decltype(_impl_.video_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    _this->_impl_.user_id_.Set(from._internal_user_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    _this->_impl_.content_.Set(from._internal_content(), 
      _this->GetArenaForAllocation());
  }
  _impl_.reply_to_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reply_to_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reply_to_uri().empty()) {
    _this->_impl_.reply_to_uri_.Set(from._internal_reply_to_uri(), 
      _this->GetArenaForAllocation());
  }
  _impl_.quote_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.quote_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_quote_uri().empty()) {
    _this->_impl_.quote_uri_.Set(from._internal_quote_uri(), 
      _this->GetArenaForAllocation());
  }
  _impl_.mention_handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mention_handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mention_handle().empty()) {
    _this->_impl_.mention_handle_.Set(from._internal_mention_handle(), 
      _this->GetArenaForAllocation());
  }
  _impl_.threadgate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.threadgate_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_threadgate().empty()) {
    _this->_impl_.threadgate_.Set(from._internal_threadgate(), 
      _this->GetArenaForAllocation());
  }
  _impl_.interaction_settings_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.interaction_settings_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_interaction_settings().empty()) {
    _this->_impl_.interaction_settings_.Set(from._internal_interaction_settings(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_video()) {
    _this->_impl_.video_ = new ::sonet::drafts::v1::DraftVideo(*from._impl_.video_);
  }
  // @@protoc_insertion_point(copy_constructor:sonet.drafts.v1.AutoSaveDraftRequest)
}

inline void AutoSaveDraftRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.images_){arena}
    , decltype(_impl_.labels_){arena}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.content_){}
    , decltype(_impl_.reply_to_uri_){}
    , decltype(_impl_.quote_uri_){}
    , decltype(_impl_.mention_handle_){}
    , decltype(_impl_.threadgate_){}
    , decltype(_impl_.interaction_settings_){}
    , decltype(_impl_.video_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.reply_to_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reply_to_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.quote_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.quote_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.mention_handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mention_handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.threadgate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.threadgate_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.interaction_settings_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.interaction_settings_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AutoSaveDraftRequest::~AutoSaveDraftRequest() {
  // @@protoc_insertion_point(destructor:sonet.drafts.v1.AutoSaveDraftRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AutoSaveDraftRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.images_.~RepeatedPtrField();
  _impl_.labels_.~RepeatedPtrField();
  _impl_.user_id_.Destroy();
  _impl_.content_.Destroy();
  _impl_.reply_to_uri_.Destroy();
  _impl_.quote_uri_.Destroy();
  _impl_.mention_handle_.Destroy();
  _impl_.threadgate_.Destroy();
  _impl_.interaction_settings_.Destroy();
  if (this != internal_default_instance()) delete _impl_.video_;
}

void AutoSaveDraftRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AutoSaveDraftRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.drafts.v1.AutoSaveDraftRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.images_.Clear();
  _impl_.labels_.Clear();
  _impl_.user_id_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  _impl_.reply_to_uri_.ClearToEmpty();
  _impl_.quote_uri_.ClearToEmpty();
  _impl_.mention_handle_.ClearToEmpty();
  _impl_.threadgate_.ClearToEmpty();
  _impl_.interaction_settings_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.video_ != nullptr) {
    delete _impl_.video_;
  }
  _impl_.video_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AutoSaveDraftRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.AutoSaveDraftRequest.user_id"));
        } else
          goto handle_unusual;
        continue;
      // string content = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_content();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.AutoSaveDraftRequest.content"));
        } else
          goto handle_unusual;
        continue;
      // string reply_to_uri = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_reply_to_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.AutoSaveDraftRequest.reply_to_uri"));
        } else
          goto handle_unusual;
        continue;
      // string quote_uri = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_quote_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.AutoSaveDraftRequest.quote_uri"));
        } else
          goto handle_unusual;
        continue;
      // string mention_handle = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_mention_handle();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.AutoSaveDraftRequest.mention_handle"));
        } else
          goto handle_unusual;
        continue;
      // repeated .sonet.drafts.v1.DraftImage images = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_images(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .sonet.drafts.v1.DraftVideo video = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_video(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string labels = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_labels();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.AutoSaveDraftRequest.labels"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // bytes threadgate = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_threadgate();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes interaction_settings = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_interaction_settings();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AutoSaveDraftRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.drafts.v1.AutoSaveDraftRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.AutoSaveDraftRequest.user_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_user_id(), target);
  }

  // string content = 2;
  if (!this->_internal_content().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.AutoSaveDraftRequest.content");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_content(), target);
  }

  // string reply_to_uri = 3;
  if (!this->_internal_reply_to_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reply_to_uri().data(), static_cast<int>(this->_internal_reply_to_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.AutoSaveDraftRequest.reply_to_uri");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_reply_to_uri(), target);
  }

  // string quote_uri = 4;
  if (!this->_internal_quote_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_quote_uri().data(), static_cast<int>(this->_internal_quote_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.AutoSaveDraftRequest.quote_uri");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_quote_uri(), target);
  }

  // string mention_handle = 5;
  if (!this->_internal_mention_handle().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mention_handle().data(), static_cast<int>(this->_internal_mention_handle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.AutoSaveDraftRequest.mention_handle");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_mention_handle(), target);
  }

  // repeated .sonet.drafts.v1.DraftImage images = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_images_size()); i < n; i++) {
    const auto& repfield = this->_internal_images(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .sonet.drafts.v1.DraftVideo video = 7;
  if (this->_internal_has_video()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::video(this),
        _Internal::video(this).GetCachedSize(), target, stream);
  }

  // repeated string labels = 8;
  for (int i = 0, n = this->_internal_labels_size(); i < n; i++) {
    const auto& s = this->_internal_labels(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.AutoSaveDraftRequest.labels");
    target = stream->WriteString(8, s, target);
  }

  // bytes threadgate = 9;
  if (!this->_internal_threadgate().empty()) {
    target = stream->WriteBytesMaybeAliased(
        9, this->_internal_threadgate(), target);
  }

  // bytes interaction_settings = 10;
  if (!this->_internal_interaction_settings().empty()) {
    target = stream->WriteBytesMaybeAliased(
        10, this->_internal_interaction_settings(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.drafts.v1.AutoSaveDraftRequest)
  return target;
}

size_t AutoSaveDraftRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.drafts.v1.AutoSaveDraftRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sonet.drafts.v1.DraftImage images = 6;
  total_size += 1UL * this->_internal_images_size();
  for (const auto& msg : this->_impl_.images_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string labels = 8;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.labels_.size());
  for (int i = 0, n = _impl_.labels_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.labels_.Get(i));
  }

  // string user_id = 1;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  // string content = 2;
  if (!this->_internal_content().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  // string reply_to_uri = 3;
  if (!this->_internal_reply_to_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reply_to_uri());
  }

  // string quote_uri = 4;
  if (!this->_internal_quote_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_quote_uri());
  }

  // string mention_handle = 5;
  if (!this->_internal_mention_handle().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mention_handle());
  }

  // bytes threadgate = 9;
  if (!this->_internal_threadgate().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_threadgate());
  }

  // bytes interaction_settings = 10;
  if (!this->_internal_interaction_settings().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_interaction_settings());
  }

  // .sonet.drafts.v1.DraftVideo video = 7;
  if (this->_internal_has_video()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.video_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AutoSaveDraftRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AutoSaveDraftRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AutoSaveDraftRequest::GetClassData() const { return &_class_data_; }


void AutoSaveDraftRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AutoSaveDraftRequest*>(&to_msg);
  auto& from = static_cast<const AutoSaveDraftRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.drafts.v1.AutoSaveDraftRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.images_.MergeFrom(from._impl_.images_);
  _this->_impl_.labels_.MergeFrom(from._impl_.labels_);
  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (!from._internal_reply_to_uri().empty()) {
    _this->_internal_set_reply_to_uri(from._internal_reply_to_uri());
  }
  if (!from._internal_quote_uri().empty()) {
    _this->_internal_set_quote_uri(from._internal_quote_uri());
  }
  if (!from._internal_mention_handle().empty()) {
    _this->_internal_set_mention_handle(from._internal_mention_handle());
  }
  if (!from._internal_threadgate().empty()) {
    _this->_internal_set_threadgate(from._internal_threadgate());
  }
  if (!from._internal_interaction_settings().empty()) {
    _this->_internal_set_interaction_settings(from._internal_interaction_settings());
  }
  if (from._internal_has_video()) {
    _this->_internal_mutable_video()->::sonet::drafts::v1::DraftVideo::MergeFrom(
        from._internal_video());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AutoSaveDraftRequest::CopyFrom(const AutoSaveDraftRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.drafts.v1.AutoSaveDraftRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutoSaveDraftRequest::IsInitialized() const {
  return true;
}

void AutoSaveDraftRequest::InternalSwap(AutoSaveDraftRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.images_.InternalSwap(&other->_impl_.images_);
  _impl_.labels_.InternalSwap(&other->_impl_.labels_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_id_, lhs_arena,
      &other->_impl_.user_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.content_, lhs_arena,
      &other->_impl_.content_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.reply_to_uri_, lhs_arena,
      &other->_impl_.reply_to_uri_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.quote_uri_, lhs_arena,
      &other->_impl_.quote_uri_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.mention_handle_, lhs_arena,
      &other->_impl_.mention_handle_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.threadgate_, lhs_arena,
      &other->_impl_.threadgate_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.interaction_settings_, lhs_arena,
      &other->_impl_.interaction_settings_, rhs_arena
  );
  swap(_impl_.video_, other->_impl_.video_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AutoSaveDraftRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fdrafts_5fservice_2eproto_getter, &descriptor_table_services_2fdrafts_5fservice_2eproto_once,
      file_level_metadata_services_2fdrafts_5fservice_2eproto[10]);
}

// ===================================================================

class AutoSaveDraftResponse::_Internal {
 public:
  static const ::sonet::drafts::v1::Draft& draft(const AutoSaveDraftResponse* msg);
};

const ::sonet::drafts::v1::Draft&
AutoSaveDraftResponse::_Internal::draft(const AutoSaveDraftResponse* msg) {
  return *msg->_impl_.draft_;
}
AutoSaveDraftResponse::AutoSaveDraftResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.drafts.v1.AutoSaveDraftResponse)
}
AutoSaveDraftResponse::AutoSaveDraftResponse(const AutoSaveDraftResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AutoSaveDraftResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , decltype(_impl_.draft_){nullptr}
    , decltype(_impl_.success_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_draft()) {
    _this->_impl_.draft_ = new ::sonet::drafts::v1::Draft(*from._impl_.draft_);
  }
  _this->_impl_.success_ = from._impl_.success_;
  // @@protoc_insertion_point(copy_constructor:sonet.drafts.v1.AutoSaveDraftResponse)
}

inline void AutoSaveDraftResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , decltype(_impl_.draft_){nullptr}
    , decltype(_impl_.success_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AutoSaveDraftResponse::~AutoSaveDraftResponse() {
  // @@protoc_insertion_point(destructor:sonet.drafts.v1.AutoSaveDraftResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AutoSaveDraftResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_message_.Destroy();
  if (this != internal_default_instance()) delete _impl_.draft_;
}

void AutoSaveDraftResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AutoSaveDraftResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.drafts.v1.AutoSaveDraftResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.draft_ != nullptr) {
    delete _impl_.draft_;
  }
  _impl_.draft_ = nullptr;
  _impl_.success_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AutoSaveDraftResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool success = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.success_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error_message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.AutoSaveDraftResponse.error_message"));
        } else
          goto handle_unusual;
        continue;
      // .sonet.drafts.v1.Draft draft = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_draft(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AutoSaveDraftResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.drafts.v1.AutoSaveDraftResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->_internal_success() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_success(), target);
  }

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.AutoSaveDraftResponse.error_message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_message(), target);
  }

  // .sonet.drafts.v1.Draft draft = 3;
  if (this->_internal_has_draft()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::draft(this),
        _Internal::draft(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.drafts.v1.AutoSaveDraftResponse)
  return target;
}

size_t AutoSaveDraftResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.drafts.v1.AutoSaveDraftResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_message = 2;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // .sonet.drafts.v1.Draft draft = 3;
  if (this->_internal_has_draft()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.draft_);
  }

  // bool success = 1;
  if (this->_internal_success() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AutoSaveDraftResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AutoSaveDraftResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AutoSaveDraftResponse::GetClassData() const { return &_class_data_; }


void AutoSaveDraftResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AutoSaveDraftResponse*>(&to_msg);
  auto& from = static_cast<const AutoSaveDraftResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.drafts.v1.AutoSaveDraftResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_has_draft()) {
    _this->_internal_mutable_draft()->::sonet::drafts::v1::Draft::MergeFrom(
        from._internal_draft());
  }
  if (from._internal_success() != 0) {
    _this->_internal_set_success(from._internal_success());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AutoSaveDraftResponse::CopyFrom(const AutoSaveDraftResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.drafts.v1.AutoSaveDraftResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AutoSaveDraftResponse::IsInitialized() const {
  return true;
}

void AutoSaveDraftResponse::InternalSwap(AutoSaveDraftResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_message_, lhs_arena,
      &other->_impl_.error_message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AutoSaveDraftResponse, _impl_.success_)
      + sizeof(AutoSaveDraftResponse::_impl_.success_)
      - PROTOBUF_FIELD_OFFSET(AutoSaveDraftResponse, _impl_.draft_)>(
          reinterpret_cast<char*>(&_impl_.draft_),
          reinterpret_cast<char*>(&other->_impl_.draft_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AutoSaveDraftResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fdrafts_5fservice_2eproto_getter, &descriptor_table_services_2fdrafts_5fservice_2eproto_once,
      file_level_metadata_services_2fdrafts_5fservice_2eproto[11]);
}

// ===================================================================

class Draft::_Internal {
 public:
  static const ::sonet::drafts::v1::DraftVideo& video(const Draft* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& created_at(const Draft* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& updated_at(const Draft* msg);
};

const ::sonet::drafts::v1::DraftVideo&
Draft::_Internal::video(const Draft* msg) {
  return *msg->_impl_.video_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Draft::_Internal::created_at(const Draft* msg) {
  return *msg->_impl_.created_at_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Draft::_Internal::updated_at(const Draft* msg) {
  return *msg->_impl_.updated_at_;
}
void Draft::clear_created_at() {
  if (GetArenaForAllocation() == nullptr && _impl_.created_at_ != nullptr) {
    delete _impl_.created_at_;
  }
  _impl_.created_at_ = nullptr;
}
void Draft::clear_updated_at() {
  if (GetArenaForAllocation() == nullptr && _impl_.updated_at_ != nullptr) {
    delete _impl_.updated_at_;
  }
  _impl_.updated_at_ = nullptr;
}
Draft::Draft(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.drafts.v1.Draft)
}
Draft::Draft(const Draft& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Draft* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.images_){from._impl_.images_}
    , decltype(_impl_.labels_){from._impl_.labels_}
    , decltype(_impl_.draft_id_){}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.title_){}
    , decltype(_impl_.content_){}
    , decltype(_impl_.reply_to_uri_){}
    , decltype(_impl_.quote_uri_){}
    , decltype(_impl_.mention_handle_){}
    , decltype(_impl_.threadgate_){}
    , decltype(_impl_.interaction_settings_){}
    , decltype(_impl_.video_){nullptr}
    , decltype(_impl_.created_at_){nullptr}
    , decltype(_impl_.updated_at_){nullptr}
    , decltype(_impl_.is_auto_saved_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.draft_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.draft_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_draft_id().empty()) {
    _this->_impl_.draft_id_.Set(from._internal_draft_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_user_id().empty()) {
    _this->_impl_.user_id_.Set(from._internal_user_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.title_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_title().empty()) {
    _this->_impl_.title_.Set(from._internal_title(), 
      _this->GetArenaForAllocation());
  }
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    _this->_impl_.content_.Set(from._internal_content(), 
      _this->GetArenaForAllocation());
  }
  _impl_.reply_to_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reply_to_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reply_to_uri().empty()) {
    _this->_impl_.reply_to_uri_.Set(from._internal_reply_to_uri(), 
      _this->GetArenaForAllocation());
  }
  _impl_.quote_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.quote_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_quote_uri().empty()) {
    _this->_impl_.quote_uri_.Set(from._internal_quote_uri(), 
      _this->GetArenaForAllocation());
  }
  _impl_.mention_handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mention_handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mention_handle().empty()) {
    _this->_impl_.mention_handle_.Set(from._internal_mention_handle(), 
      _this->GetArenaForAllocation());
  }
  _impl_.threadgate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.threadgate_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_threadgate().empty()) {
    _this->_impl_.threadgate_.Set(from._internal_threadgate(), 
      _this->GetArenaForAllocation());
  }
  _impl_.interaction_settings_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.interaction_settings_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_interaction_settings().empty()) {
    _this->_impl_.interaction_settings_.Set(from._internal_interaction_settings(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_video()) {
    _this->_impl_.video_ = new ::sonet::drafts::v1::DraftVideo(*from._impl_.video_);
  }
  if (from._internal_has_created_at()) {
    _this->_impl_.created_at_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.created_at_);
  }
  if (from._internal_has_updated_at()) {
    _this->_impl_.updated_at_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.updated_at_);
  }
  _this->_impl_.is_auto_saved_ = from._impl_.is_auto_saved_;
  // @@protoc_insertion_point(copy_constructor:sonet.drafts.v1.Draft)
}

inline void Draft::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.images_){arena}
    , decltype(_impl_.labels_){arena}
    , decltype(_impl_.draft_id_){}
    , decltype(_impl_.user_id_){}
    , decltype(_impl_.title_){}
    , decltype(_impl_.content_){}
    , decltype(_impl_.reply_to_uri_){}
    , decltype(_impl_.quote_uri_){}
    , decltype(_impl_.mention_handle_){}
    , decltype(_impl_.threadgate_){}
    , decltype(_impl_.interaction_settings_){}
    , decltype(_impl_.video_){nullptr}
    , decltype(_impl_.created_at_){nullptr}
    , decltype(_impl_.updated_at_){nullptr}
    , decltype(_impl_.is_auto_saved_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.draft_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.draft_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.user_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.user_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.title_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.reply_to_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.reply_to_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.quote_uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.quote_uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.mention_handle_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mention_handle_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.threadgate_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.threadgate_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.interaction_settings_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.interaction_settings_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Draft::~Draft() {
  // @@protoc_insertion_point(destructor:sonet.drafts.v1.Draft)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Draft::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.images_.~RepeatedPtrField();
  _impl_.labels_.~RepeatedPtrField();
  _impl_.draft_id_.Destroy();
  _impl_.user_id_.Destroy();
  _impl_.title_.Destroy();
  _impl_.content_.Destroy();
  _impl_.reply_to_uri_.Destroy();
  _impl_.quote_uri_.Destroy();
  _impl_.mention_handle_.Destroy();
  _impl_.threadgate_.Destroy();
  _impl_.interaction_settings_.Destroy();
  if (this != internal_default_instance()) delete _impl_.video_;
  if (this != internal_default_instance()) delete _impl_.created_at_;
  if (this != internal_default_instance()) delete _impl_.updated_at_;
}

void Draft::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Draft::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.drafts.v1.Draft)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.images_.Clear();
  _impl_.labels_.Clear();
  _impl_.draft_id_.ClearToEmpty();
  _impl_.user_id_.ClearToEmpty();
  _impl_.title_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  _impl_.reply_to_uri_.ClearToEmpty();
  _impl_.quote_uri_.ClearToEmpty();
  _impl_.mention_handle_.ClearToEmpty();
  _impl_.threadgate_.ClearToEmpty();
  _impl_.interaction_settings_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.video_ != nullptr) {
    delete _impl_.video_;
  }
  _impl_.video_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.created_at_ != nullptr) {
    delete _impl_.created_at_;
  }
  _impl_.created_at_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.updated_at_ != nullptr) {
    delete _impl_.updated_at_;
  }
  _impl_.updated_at_ = nullptr;
  _impl_.is_auto_saved_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Draft::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string draft_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_draft_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.Draft.draft_id"));
        } else
          goto handle_unusual;
        continue;
      // string user_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_user_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.Draft.user_id"));
        } else
          goto handle_unusual;
        continue;
      // string title = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_title();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.Draft.title"));
        } else
          goto handle_unusual;
        continue;
      // string content = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_content();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.Draft.content"));
        } else
          goto handle_unusual;
        continue;
      // string reply_to_uri = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_reply_to_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.Draft.reply_to_uri"));
        } else
          goto handle_unusual;
        continue;
      // string quote_uri = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_quote_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.Draft.quote_uri"));
        } else
          goto handle_unusual;
        continue;
      // string mention_handle = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_mention_handle();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.Draft.mention_handle"));
        } else
          goto handle_unusual;
        continue;
      // repeated .sonet.drafts.v1.DraftImage images = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_images(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .sonet.drafts.v1.DraftVideo video = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_video(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string labels = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_labels();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.Draft.labels"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<82>(ptr));
        } else
          goto handle_unusual;
        continue;
      // bytes threadgate = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_threadgate();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes interaction_settings = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          auto str = _internal_mutable_interaction_settings();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp created_at = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_created_at(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp updated_at = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_updated_at(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool is_auto_saved = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          _impl_.is_auto_saved_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Draft::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.drafts.v1.Draft)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string draft_id = 1;
  if (!this->_internal_draft_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_draft_id().data(), static_cast<int>(this->_internal_draft_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.Draft.draft_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_draft_id(), target);
  }

  // string user_id = 2;
  if (!this->_internal_user_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_id().data(), static_cast<int>(this->_internal_user_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.Draft.user_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_user_id(), target);
  }

  // string title = 3;
  if (!this->_internal_title().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.Draft.title");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_title(), target);
  }

  // string content = 4;
  if (!this->_internal_content().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.Draft.content");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_content(), target);
  }

  // string reply_to_uri = 5;
  if (!this->_internal_reply_to_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reply_to_uri().data(), static_cast<int>(this->_internal_reply_to_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.Draft.reply_to_uri");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_reply_to_uri(), target);
  }

  // string quote_uri = 6;
  if (!this->_internal_quote_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_quote_uri().data(), static_cast<int>(this->_internal_quote_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.Draft.quote_uri");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_quote_uri(), target);
  }

  // string mention_handle = 7;
  if (!this->_internal_mention_handle().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mention_handle().data(), static_cast<int>(this->_internal_mention_handle().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.Draft.mention_handle");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_mention_handle(), target);
  }

  // repeated .sonet.drafts.v1.DraftImage images = 8;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_images_size()); i < n; i++) {
    const auto& repfield = this->_internal_images(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(8, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .sonet.drafts.v1.DraftVideo video = 9;
  if (this->_internal_has_video()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::video(this),
        _Internal::video(this).GetCachedSize(), target, stream);
  }

  // repeated string labels = 10;
  for (int i = 0, n = this->_internal_labels_size(); i < n; i++) {
    const auto& s = this->_internal_labels(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.Draft.labels");
    target = stream->WriteString(10, s, target);
  }

  // bytes threadgate = 11;
  if (!this->_internal_threadgate().empty()) {
    target = stream->WriteBytesMaybeAliased(
        11, this->_internal_threadgate(), target);
  }

  // bytes interaction_settings = 12;
  if (!this->_internal_interaction_settings().empty()) {
    target = stream->WriteBytesMaybeAliased(
        12, this->_internal_interaction_settings(), target);
  }

  // .google.protobuf.Timestamp created_at = 13;
  if (this->_internal_has_created_at()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(13, _Internal::created_at(this),
        _Internal::created_at(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp updated_at = 14;
  if (this->_internal_has_updated_at()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(14, _Internal::updated_at(this),
        _Internal::updated_at(this).GetCachedSize(), target, stream);
  }

  // bool is_auto_saved = 15;
  if (this->_internal_is_auto_saved() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(15, this->_internal_is_auto_saved(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.drafts.v1.Draft)
  return target;
}

size_t Draft::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.drafts.v1.Draft)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .sonet.drafts.v1.DraftImage images = 8;
  total_size += 1UL * this->_internal_images_size();
  for (const auto& msg : this->_impl_.images_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated string labels = 10;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.labels_.size());
  for (int i = 0, n = _impl_.labels_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.labels_.Get(i));
  }

  // string draft_id = 1;
  if (!this->_internal_draft_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_draft_id());
  }

  // string user_id = 2;
  if (!this->_internal_user_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_id());
  }

  // string title = 3;
  if (!this->_internal_title().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_title());
  }

  // string content = 4;
  if (!this->_internal_content().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  // string reply_to_uri = 5;
  if (!this->_internal_reply_to_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reply_to_uri());
  }

  // string quote_uri = 6;
  if (!this->_internal_quote_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_quote_uri());
  }

  // string mention_handle = 7;
  if (!this->_internal_mention_handle().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mention_handle());
  }

  // bytes threadgate = 11;
  if (!this->_internal_threadgate().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_threadgate());
  }

  // bytes interaction_settings = 12;
  if (!this->_internal_interaction_settings().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_interaction_settings());
  }

  // .sonet.drafts.v1.DraftVideo video = 9;
  if (this->_internal_has_video()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.video_);
  }

  // .google.protobuf.Timestamp created_at = 13;
  if (this->_internal_has_created_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.created_at_);
  }

  // .google.protobuf.Timestamp updated_at = 14;
  if (this->_internal_has_updated_at()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.updated_at_);
  }

  // bool is_auto_saved = 15;
  if (this->_internal_is_auto_saved() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Draft::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Draft::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Draft::GetClassData() const { return &_class_data_; }


void Draft::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Draft*>(&to_msg);
  auto& from = static_cast<const Draft&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.drafts.v1.Draft)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.images_.MergeFrom(from._impl_.images_);
  _this->_impl_.labels_.MergeFrom(from._impl_.labels_);
  if (!from._internal_draft_id().empty()) {
    _this->_internal_set_draft_id(from._internal_draft_id());
  }
  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (!from._internal_reply_to_uri().empty()) {
    _this->_internal_set_reply_to_uri(from._internal_reply_to_uri());
  }
  if (!from._internal_quote_uri().empty()) {
    _this->_internal_set_quote_uri(from._internal_quote_uri());
  }
  if (!from._internal_mention_handle().empty()) {
    _this->_internal_set_mention_handle(from._internal_mention_handle());
  }
  if (!from._internal_threadgate().empty()) {
    _this->_internal_set_threadgate(from._internal_threadgate());
  }
  if (!from._internal_interaction_settings().empty()) {
    _this->_internal_set_interaction_settings(from._internal_interaction_settings());
  }
  if (from._internal_has_video()) {
    _this->_internal_mutable_video()->::sonet::drafts::v1::DraftVideo::MergeFrom(
        from._internal_video());
  }
  if (from._internal_has_created_at()) {
    _this->_internal_mutable_created_at()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_created_at());
  }
  if (from._internal_has_updated_at()) {
    _this->_internal_mutable_updated_at()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_updated_at());
  }
  if (from._internal_is_auto_saved() != 0) {
    _this->_internal_set_is_auto_saved(from._internal_is_auto_saved());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Draft::CopyFrom(const Draft& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.drafts.v1.Draft)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Draft::IsInitialized() const {
  return true;
}

void Draft::InternalSwap(Draft* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.images_.InternalSwap(&other->_impl_.images_);
  _impl_.labels_.InternalSwap(&other->_impl_.labels_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.draft_id_, lhs_arena,
      &other->_impl_.draft_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.user_id_, lhs_arena,
      &other->_impl_.user_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.title_, lhs_arena,
      &other->_impl_.title_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.content_, lhs_arena,
      &other->_impl_.content_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.reply_to_uri_, lhs_arena,
      &other->_impl_.reply_to_uri_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.quote_uri_, lhs_arena,
      &other->_impl_.quote_uri_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.mention_handle_, lhs_arena,
      &other->_impl_.mention_handle_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.threadgate_, lhs_arena,
      &other->_impl_.threadgate_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.interaction_settings_, lhs_arena,
      &other->_impl_.interaction_settings_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Draft, _impl_.is_auto_saved_)
      + sizeof(Draft::_impl_.is_auto_saved_)
      - PROTOBUF_FIELD_OFFSET(Draft, _impl_.video_)>(
          reinterpret_cast<char*>(&_impl_.video_),
          reinterpret_cast<char*>(&other->_impl_.video_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Draft::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fdrafts_5fservice_2eproto_getter, &descriptor_table_services_2fdrafts_5fservice_2eproto_once,
      file_level_metadata_services_2fdrafts_5fservice_2eproto[12]);
}

// ===================================================================

class DraftImage::_Internal {
 public:
};

DraftImage::DraftImage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.drafts.v1.DraftImage)
}
DraftImage::DraftImage(const DraftImage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DraftImage* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.uri_){}
    , decltype(_impl_.alt_text_){}
    , decltype(_impl_.width_){}
    , decltype(_impl_.height_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uri().empty()) {
    _this->_impl_.uri_.Set(from._internal_uri(), 
      _this->GetArenaForAllocation());
  }
  _impl_.alt_text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.alt_text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_alt_text().empty()) {
    _this->_impl_.alt_text_.Set(from._internal_alt_text(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.width_, &from._impl_.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.height_) -
    reinterpret_cast<char*>(&_impl_.width_)) + sizeof(_impl_.height_));
  // @@protoc_insertion_point(copy_constructor:sonet.drafts.v1.DraftImage)
}

inline void DraftImage::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.uri_){}
    , decltype(_impl_.alt_text_){}
    , decltype(_impl_.width_){0}
    , decltype(_impl_.height_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.alt_text_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.alt_text_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DraftImage::~DraftImage() {
  // @@protoc_insertion_point(destructor:sonet.drafts.v1.DraftImage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DraftImage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.uri_.Destroy();
  _impl_.alt_text_.Destroy();
}

void DraftImage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DraftImage::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.drafts.v1.DraftImage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uri_.ClearToEmpty();
  _impl_.alt_text_.ClearToEmpty();
  ::memset(&_impl_.width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.height_) -
      reinterpret_cast<char*>(&_impl_.width_)) + sizeof(_impl_.height_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DraftImage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string uri = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.DraftImage.uri"));
        } else
          goto handle_unusual;
        continue;
      // int32 width = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 height = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string alt_text = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_alt_text();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.DraftImage.alt_text"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DraftImage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.drafts.v1.DraftImage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (!this->_internal_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uri().data(), static_cast<int>(this->_internal_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.DraftImage.uri");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uri(), target);
  }

  // int32 width = 2;
  if (this->_internal_width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_width(), target);
  }

  // int32 height = 3;
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_height(), target);
  }

  // string alt_text = 4;
  if (!this->_internal_alt_text().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_alt_text().data(), static_cast<int>(this->_internal_alt_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.DraftImage.alt_text");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_alt_text(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.drafts.v1.DraftImage)
  return target;
}

size_t DraftImage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.drafts.v1.DraftImage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uri = 1;
  if (!this->_internal_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uri());
  }

  // string alt_text = 4;
  if (!this->_internal_alt_text().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_alt_text());
  }

  // int32 width = 2;
  if (this->_internal_width() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_width());
  }

  // int32 height = 3;
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DraftImage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DraftImage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DraftImage::GetClassData() const { return &_class_data_; }


void DraftImage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DraftImage*>(&to_msg);
  auto& from = static_cast<const DraftImage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.drafts.v1.DraftImage)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uri().empty()) {
    _this->_internal_set_uri(from._internal_uri());
  }
  if (!from._internal_alt_text().empty()) {
    _this->_internal_set_alt_text(from._internal_alt_text());
  }
  if (from._internal_width() != 0) {
    _this->_internal_set_width(from._internal_width());
  }
  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DraftImage::CopyFrom(const DraftImage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.drafts.v1.DraftImage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DraftImage::IsInitialized() const {
  return true;
}

void DraftImage::InternalSwap(DraftImage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.uri_, lhs_arena,
      &other->_impl_.uri_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.alt_text_, lhs_arena,
      &other->_impl_.alt_text_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DraftImage, _impl_.height_)
      + sizeof(DraftImage::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(DraftImage, _impl_.width_)>(
          reinterpret_cast<char*>(&_impl_.width_),
          reinterpret_cast<char*>(&other->_impl_.width_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DraftImage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fdrafts_5fservice_2eproto_getter, &descriptor_table_services_2fdrafts_5fservice_2eproto_once,
      file_level_metadata_services_2fdrafts_5fservice_2eproto[13]);
}

// ===================================================================

class DraftVideo::_Internal {
 public:
};

DraftVideo::DraftVideo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:sonet.drafts.v1.DraftVideo)
}
DraftVideo::DraftVideo(const DraftVideo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DraftVideo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.uri_){}
    , decltype(_impl_.width_){}
    , decltype(_impl_.height_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uri().empty()) {
    _this->_impl_.uri_.Set(from._internal_uri(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.width_, &from._impl_.width_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.height_) -
    reinterpret_cast<char*>(&_impl_.width_)) + sizeof(_impl_.height_));
  // @@protoc_insertion_point(copy_constructor:sonet.drafts.v1.DraftVideo)
}

inline void DraftVideo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.uri_){}
    , decltype(_impl_.width_){0}
    , decltype(_impl_.height_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.uri_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uri_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DraftVideo::~DraftVideo() {
  // @@protoc_insertion_point(destructor:sonet.drafts.v1.DraftVideo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DraftVideo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.uri_.Destroy();
}

void DraftVideo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DraftVideo::Clear() {
// @@protoc_insertion_point(message_clear_start:sonet.drafts.v1.DraftVideo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.uri_.ClearToEmpty();
  ::memset(&_impl_.width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.height_) -
      reinterpret_cast<char*>(&_impl_.width_)) + sizeof(_impl_.height_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DraftVideo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string uri = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_uri();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "sonet.drafts.v1.DraftVideo.uri"));
        } else
          goto handle_unusual;
        continue;
      // int32 width = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 height = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DraftVideo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:sonet.drafts.v1.DraftVideo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (!this->_internal_uri().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uri().data(), static_cast<int>(this->_internal_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "sonet.drafts.v1.DraftVideo.uri");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uri(), target);
  }

  // int32 width = 2;
  if (this->_internal_width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_width(), target);
  }

  // int32 height = 3;
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sonet.drafts.v1.DraftVideo)
  return target;
}

size_t DraftVideo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sonet.drafts.v1.DraftVideo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uri = 1;
  if (!this->_internal_uri().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uri());
  }

  // int32 width = 2;
  if (this->_internal_width() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_width());
  }

  // int32 height = 3;
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DraftVideo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DraftVideo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DraftVideo::GetClassData() const { return &_class_data_; }


void DraftVideo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DraftVideo*>(&to_msg);
  auto& from = static_cast<const DraftVideo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:sonet.drafts.v1.DraftVideo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_uri().empty()) {
    _this->_internal_set_uri(from._internal_uri());
  }
  if (from._internal_width() != 0) {
    _this->_internal_set_width(from._internal_width());
  }
  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DraftVideo::CopyFrom(const DraftVideo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sonet.drafts.v1.DraftVideo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DraftVideo::IsInitialized() const {
  return true;
}

void DraftVideo::InternalSwap(DraftVideo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.uri_, lhs_arena,
      &other->_impl_.uri_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DraftVideo, _impl_.height_)
      + sizeof(DraftVideo::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(DraftVideo, _impl_.width_)>(
          reinterpret_cast<char*>(&_impl_.width_),
          reinterpret_cast<char*>(&other->_impl_.width_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DraftVideo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_services_2fdrafts_5fservice_2eproto_getter, &descriptor_table_services_2fdrafts_5fservice_2eproto_once,
      file_level_metadata_services_2fdrafts_5fservice_2eproto[14]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace drafts
}  // namespace sonet
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::sonet::drafts::v1::CreateDraftRequest*
Arena::CreateMaybeMessage< ::sonet::drafts::v1::CreateDraftRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::drafts::v1::CreateDraftRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::drafts::v1::CreateDraftResponse*
Arena::CreateMaybeMessage< ::sonet::drafts::v1::CreateDraftResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::drafts::v1::CreateDraftResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::drafts::v1::GetUserDraftsRequest*
Arena::CreateMaybeMessage< ::sonet::drafts::v1::GetUserDraftsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::drafts::v1::GetUserDraftsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::drafts::v1::GetUserDraftsResponse*
Arena::CreateMaybeMessage< ::sonet::drafts::v1::GetUserDraftsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::drafts::v1::GetUserDraftsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::drafts::v1::GetDraftRequest*
Arena::CreateMaybeMessage< ::sonet::drafts::v1::GetDraftRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::drafts::v1::GetDraftRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::drafts::v1::GetDraftResponse*
Arena::CreateMaybeMessage< ::sonet::drafts::v1::GetDraftResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::drafts::v1::GetDraftResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::drafts::v1::UpdateDraftRequest*
Arena::CreateMaybeMessage< ::sonet::drafts::v1::UpdateDraftRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::drafts::v1::UpdateDraftRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::drafts::v1::UpdateDraftResponse*
Arena::CreateMaybeMessage< ::sonet::drafts::v1::UpdateDraftResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::drafts::v1::UpdateDraftResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::drafts::v1::DeleteDraftRequest*
Arena::CreateMaybeMessage< ::sonet::drafts::v1::DeleteDraftRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::drafts::v1::DeleteDraftRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::drafts::v1::DeleteDraftResponse*
Arena::CreateMaybeMessage< ::sonet::drafts::v1::DeleteDraftResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::drafts::v1::DeleteDraftResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::drafts::v1::AutoSaveDraftRequest*
Arena::CreateMaybeMessage< ::sonet::drafts::v1::AutoSaveDraftRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::drafts::v1::AutoSaveDraftRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::drafts::v1::AutoSaveDraftResponse*
Arena::CreateMaybeMessage< ::sonet::drafts::v1::AutoSaveDraftResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::drafts::v1::AutoSaveDraftResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::drafts::v1::Draft*
Arena::CreateMaybeMessage< ::sonet::drafts::v1::Draft >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::drafts::v1::Draft >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::drafts::v1::DraftImage*
Arena::CreateMaybeMessage< ::sonet::drafts::v1::DraftImage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::drafts::v1::DraftImage >(arena);
}
template<> PROTOBUF_NOINLINE ::sonet::drafts::v1::DraftVideo*
Arena::CreateMaybeMessage< ::sonet::drafts::v1::DraftVideo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::sonet::drafts::v1::DraftVideo >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
