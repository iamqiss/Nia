// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: services/list_service.proto
#ifndef GRPC_services_2flist_5fservice_2eproto__INCLUDED
#define GRPC_services_2flist_5fservice_2eproto__INCLUDED

#include "services/list_service.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace sonet {
namespace list {
namespace v1 {

// List Service
class ListService final {
 public:
  static constexpr char const* service_full_name() {
    return "sonet.list.v1.ListService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Create a new list
    virtual ::grpc::Status CreateList(::grpc::ClientContext* context, const ::sonet::list::v1::CreateListRequest& request, ::sonet::list::v1::CreateListResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::CreateListResponse>> AsyncCreateList(::grpc::ClientContext* context, const ::sonet::list::v1::CreateListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::CreateListResponse>>(AsyncCreateListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::CreateListResponse>> PrepareAsyncCreateList(::grpc::ClientContext* context, const ::sonet::list::v1::CreateListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::CreateListResponse>>(PrepareAsyncCreateListRaw(context, request, cq));
    }
    // Get a list by ID
    virtual ::grpc::Status GetList(::grpc::ClientContext* context, const ::sonet::list::v1::GetListRequest& request, ::sonet::list::v1::GetListResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::GetListResponse>> AsyncGetList(::grpc::ClientContext* context, const ::sonet::list::v1::GetListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::GetListResponse>>(AsyncGetListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::GetListResponse>> PrepareAsyncGetList(::grpc::ClientContext* context, const ::sonet::list::v1::GetListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::GetListResponse>>(PrepareAsyncGetListRaw(context, request, cq));
    }
    // Get lists owned by a user
    virtual ::grpc::Status GetUserLists(::grpc::ClientContext* context, const ::sonet::list::v1::GetUserListsRequest& request, ::sonet::list::v1::GetUserListsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::GetUserListsResponse>> AsyncGetUserLists(::grpc::ClientContext* context, const ::sonet::list::v1::GetUserListsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::GetUserListsResponse>>(AsyncGetUserListsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::GetUserListsResponse>> PrepareAsyncGetUserLists(::grpc::ClientContext* context, const ::sonet::list::v1::GetUserListsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::GetUserListsResponse>>(PrepareAsyncGetUserListsRaw(context, request, cq));
    }
    // Update a list
    virtual ::grpc::Status UpdateList(::grpc::ClientContext* context, const ::sonet::list::v1::UpdateListRequest& request, ::sonet::list::v1::UpdateListResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::UpdateListResponse>> AsyncUpdateList(::grpc::ClientContext* context, const ::sonet::list::v1::UpdateListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::UpdateListResponse>>(AsyncUpdateListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::UpdateListResponse>> PrepareAsyncUpdateList(::grpc::ClientContext* context, const ::sonet::list::v1::UpdateListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::UpdateListResponse>>(PrepareAsyncUpdateListRaw(context, request, cq));
    }
    // Delete a list
    virtual ::grpc::Status DeleteList(::grpc::ClientContext* context, const ::sonet::list::v1::DeleteListRequest& request, ::sonet::list::v1::DeleteListResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::DeleteListResponse>> AsyncDeleteList(::grpc::ClientContext* context, const ::sonet::list::v1::DeleteListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::DeleteListResponse>>(AsyncDeleteListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::DeleteListResponse>> PrepareAsyncDeleteList(::grpc::ClientContext* context, const ::sonet::list::v1::DeleteListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::DeleteListResponse>>(PrepareAsyncDeleteListRaw(context, request, cq));
    }
    // Add a member to a list
    virtual ::grpc::Status AddListMember(::grpc::ClientContext* context, const ::sonet::list::v1::AddListMemberRequest& request, ::sonet::list::v1::AddListMemberResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::AddListMemberResponse>> AsyncAddListMember(::grpc::ClientContext* context, const ::sonet::list::v1::AddListMemberRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::AddListMemberResponse>>(AsyncAddListMemberRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::AddListMemberResponse>> PrepareAsyncAddListMember(::grpc::ClientContext* context, const ::sonet::list::v1::AddListMemberRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::AddListMemberResponse>>(PrepareAsyncAddListMemberRaw(context, request, cq));
    }
    // Remove a member from a list
    virtual ::grpc::Status RemoveListMember(::grpc::ClientContext* context, const ::sonet::list::v1::RemoveListMemberRequest& request, ::sonet::list::v1::RemoveListMemberResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::RemoveListMemberResponse>> AsyncRemoveListMember(::grpc::ClientContext* context, const ::sonet::list::v1::RemoveListMemberRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::RemoveListMemberResponse>>(AsyncRemoveListMemberRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::RemoveListMemberResponse>> PrepareAsyncRemoveListMember(::grpc::ClientContext* context, const ::sonet::list::v1::RemoveListMemberRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::RemoveListMemberResponse>>(PrepareAsyncRemoveListMemberRaw(context, request, cq));
    }
    // Get list members
    virtual ::grpc::Status GetListMembers(::grpc::ClientContext* context, const ::sonet::list::v1::GetListMembersRequest& request, ::sonet::list::v1::GetListMembersResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::GetListMembersResponse>> AsyncGetListMembers(::grpc::ClientContext* context, const ::sonet::list::v1::GetListMembersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::GetListMembersResponse>>(AsyncGetListMembersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::GetListMembersResponse>> PrepareAsyncGetListMembers(::grpc::ClientContext* context, const ::sonet::list::v1::GetListMembersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::GetListMembersResponse>>(PrepareAsyncGetListMembersRaw(context, request, cq));
    }
    // Check if user is in list
    virtual ::grpc::Status IsUserInList(::grpc::ClientContext* context, const ::sonet::list::v1::IsUserInListRequest& request, ::sonet::list::v1::IsUserInListResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::IsUserInListResponse>> AsyncIsUserInList(::grpc::ClientContext* context, const ::sonet::list::v1::IsUserInListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::IsUserInListResponse>>(AsyncIsUserInListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::IsUserInListResponse>> PrepareAsyncIsUserInList(::grpc::ClientContext* context, const ::sonet::list::v1::IsUserInListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::IsUserInListResponse>>(PrepareAsyncIsUserInListRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Create a new list
      virtual void CreateList(::grpc::ClientContext* context, const ::sonet::list::v1::CreateListRequest* request, ::sonet::list::v1::CreateListResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateList(::grpc::ClientContext* context, const ::sonet::list::v1::CreateListRequest* request, ::sonet::list::v1::CreateListResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get a list by ID
      virtual void GetList(::grpc::ClientContext* context, const ::sonet::list::v1::GetListRequest* request, ::sonet::list::v1::GetListResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetList(::grpc::ClientContext* context, const ::sonet::list::v1::GetListRequest* request, ::sonet::list::v1::GetListResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get lists owned by a user
      virtual void GetUserLists(::grpc::ClientContext* context, const ::sonet::list::v1::GetUserListsRequest* request, ::sonet::list::v1::GetUserListsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetUserLists(::grpc::ClientContext* context, const ::sonet::list::v1::GetUserListsRequest* request, ::sonet::list::v1::GetUserListsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Update a list
      virtual void UpdateList(::grpc::ClientContext* context, const ::sonet::list::v1::UpdateListRequest* request, ::sonet::list::v1::UpdateListResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateList(::grpc::ClientContext* context, const ::sonet::list::v1::UpdateListRequest* request, ::sonet::list::v1::UpdateListResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Delete a list
      virtual void DeleteList(::grpc::ClientContext* context, const ::sonet::list::v1::DeleteListRequest* request, ::sonet::list::v1::DeleteListResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteList(::grpc::ClientContext* context, const ::sonet::list::v1::DeleteListRequest* request, ::sonet::list::v1::DeleteListResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Add a member to a list
      virtual void AddListMember(::grpc::ClientContext* context, const ::sonet::list::v1::AddListMemberRequest* request, ::sonet::list::v1::AddListMemberResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AddListMember(::grpc::ClientContext* context, const ::sonet::list::v1::AddListMemberRequest* request, ::sonet::list::v1::AddListMemberResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Remove a member from a list
      virtual void RemoveListMember(::grpc::ClientContext* context, const ::sonet::list::v1::RemoveListMemberRequest* request, ::sonet::list::v1::RemoveListMemberResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RemoveListMember(::grpc::ClientContext* context, const ::sonet::list::v1::RemoveListMemberRequest* request, ::sonet::list::v1::RemoveListMemberResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get list members
      virtual void GetListMembers(::grpc::ClientContext* context, const ::sonet::list::v1::GetListMembersRequest* request, ::sonet::list::v1::GetListMembersResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetListMembers(::grpc::ClientContext* context, const ::sonet::list::v1::GetListMembersRequest* request, ::sonet::list::v1::GetListMembersResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Check if user is in list
      virtual void IsUserInList(::grpc::ClientContext* context, const ::sonet::list::v1::IsUserInListRequest* request, ::sonet::list::v1::IsUserInListResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IsUserInList(::grpc::ClientContext* context, const ::sonet::list::v1::IsUserInListRequest* request, ::sonet::list::v1::IsUserInListResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::CreateListResponse>* AsyncCreateListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::CreateListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::CreateListResponse>* PrepareAsyncCreateListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::CreateListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::GetListResponse>* AsyncGetListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::GetListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::GetListResponse>* PrepareAsyncGetListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::GetListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::GetUserListsResponse>* AsyncGetUserListsRaw(::grpc::ClientContext* context, const ::sonet::list::v1::GetUserListsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::GetUserListsResponse>* PrepareAsyncGetUserListsRaw(::grpc::ClientContext* context, const ::sonet::list::v1::GetUserListsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::UpdateListResponse>* AsyncUpdateListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::UpdateListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::UpdateListResponse>* PrepareAsyncUpdateListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::UpdateListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::DeleteListResponse>* AsyncDeleteListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::DeleteListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::DeleteListResponse>* PrepareAsyncDeleteListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::DeleteListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::AddListMemberResponse>* AsyncAddListMemberRaw(::grpc::ClientContext* context, const ::sonet::list::v1::AddListMemberRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::AddListMemberResponse>* PrepareAsyncAddListMemberRaw(::grpc::ClientContext* context, const ::sonet::list::v1::AddListMemberRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::RemoveListMemberResponse>* AsyncRemoveListMemberRaw(::grpc::ClientContext* context, const ::sonet::list::v1::RemoveListMemberRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::RemoveListMemberResponse>* PrepareAsyncRemoveListMemberRaw(::grpc::ClientContext* context, const ::sonet::list::v1::RemoveListMemberRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::GetListMembersResponse>* AsyncGetListMembersRaw(::grpc::ClientContext* context, const ::sonet::list::v1::GetListMembersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::GetListMembersResponse>* PrepareAsyncGetListMembersRaw(::grpc::ClientContext* context, const ::sonet::list::v1::GetListMembersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::IsUserInListResponse>* AsyncIsUserInListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::IsUserInListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::list::v1::IsUserInListResponse>* PrepareAsyncIsUserInListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::IsUserInListRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status CreateList(::grpc::ClientContext* context, const ::sonet::list::v1::CreateListRequest& request, ::sonet::list::v1::CreateListResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::CreateListResponse>> AsyncCreateList(::grpc::ClientContext* context, const ::sonet::list::v1::CreateListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::CreateListResponse>>(AsyncCreateListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::CreateListResponse>> PrepareAsyncCreateList(::grpc::ClientContext* context, const ::sonet::list::v1::CreateListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::CreateListResponse>>(PrepareAsyncCreateListRaw(context, request, cq));
    }
    ::grpc::Status GetList(::grpc::ClientContext* context, const ::sonet::list::v1::GetListRequest& request, ::sonet::list::v1::GetListResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::GetListResponse>> AsyncGetList(::grpc::ClientContext* context, const ::sonet::list::v1::GetListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::GetListResponse>>(AsyncGetListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::GetListResponse>> PrepareAsyncGetList(::grpc::ClientContext* context, const ::sonet::list::v1::GetListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::GetListResponse>>(PrepareAsyncGetListRaw(context, request, cq));
    }
    ::grpc::Status GetUserLists(::grpc::ClientContext* context, const ::sonet::list::v1::GetUserListsRequest& request, ::sonet::list::v1::GetUserListsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::GetUserListsResponse>> AsyncGetUserLists(::grpc::ClientContext* context, const ::sonet::list::v1::GetUserListsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::GetUserListsResponse>>(AsyncGetUserListsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::GetUserListsResponse>> PrepareAsyncGetUserLists(::grpc::ClientContext* context, const ::sonet::list::v1::GetUserListsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::GetUserListsResponse>>(PrepareAsyncGetUserListsRaw(context, request, cq));
    }
    ::grpc::Status UpdateList(::grpc::ClientContext* context, const ::sonet::list::v1::UpdateListRequest& request, ::sonet::list::v1::UpdateListResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::UpdateListResponse>> AsyncUpdateList(::grpc::ClientContext* context, const ::sonet::list::v1::UpdateListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::UpdateListResponse>>(AsyncUpdateListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::UpdateListResponse>> PrepareAsyncUpdateList(::grpc::ClientContext* context, const ::sonet::list::v1::UpdateListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::UpdateListResponse>>(PrepareAsyncUpdateListRaw(context, request, cq));
    }
    ::grpc::Status DeleteList(::grpc::ClientContext* context, const ::sonet::list::v1::DeleteListRequest& request, ::sonet::list::v1::DeleteListResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::DeleteListResponse>> AsyncDeleteList(::grpc::ClientContext* context, const ::sonet::list::v1::DeleteListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::DeleteListResponse>>(AsyncDeleteListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::DeleteListResponse>> PrepareAsyncDeleteList(::grpc::ClientContext* context, const ::sonet::list::v1::DeleteListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::DeleteListResponse>>(PrepareAsyncDeleteListRaw(context, request, cq));
    }
    ::grpc::Status AddListMember(::grpc::ClientContext* context, const ::sonet::list::v1::AddListMemberRequest& request, ::sonet::list::v1::AddListMemberResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::AddListMemberResponse>> AsyncAddListMember(::grpc::ClientContext* context, const ::sonet::list::v1::AddListMemberRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::AddListMemberResponse>>(AsyncAddListMemberRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::AddListMemberResponse>> PrepareAsyncAddListMember(::grpc::ClientContext* context, const ::sonet::list::v1::AddListMemberRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::AddListMemberResponse>>(PrepareAsyncAddListMemberRaw(context, request, cq));
    }
    ::grpc::Status RemoveListMember(::grpc::ClientContext* context, const ::sonet::list::v1::RemoveListMemberRequest& request, ::sonet::list::v1::RemoveListMemberResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::RemoveListMemberResponse>> AsyncRemoveListMember(::grpc::ClientContext* context, const ::sonet::list::v1::RemoveListMemberRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::RemoveListMemberResponse>>(AsyncRemoveListMemberRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::RemoveListMemberResponse>> PrepareAsyncRemoveListMember(::grpc::ClientContext* context, const ::sonet::list::v1::RemoveListMemberRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::RemoveListMemberResponse>>(PrepareAsyncRemoveListMemberRaw(context, request, cq));
    }
    ::grpc::Status GetListMembers(::grpc::ClientContext* context, const ::sonet::list::v1::GetListMembersRequest& request, ::sonet::list::v1::GetListMembersResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::GetListMembersResponse>> AsyncGetListMembers(::grpc::ClientContext* context, const ::sonet::list::v1::GetListMembersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::GetListMembersResponse>>(AsyncGetListMembersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::GetListMembersResponse>> PrepareAsyncGetListMembers(::grpc::ClientContext* context, const ::sonet::list::v1::GetListMembersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::GetListMembersResponse>>(PrepareAsyncGetListMembersRaw(context, request, cq));
    }
    ::grpc::Status IsUserInList(::grpc::ClientContext* context, const ::sonet::list::v1::IsUserInListRequest& request, ::sonet::list::v1::IsUserInListResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::IsUserInListResponse>> AsyncIsUserInList(::grpc::ClientContext* context, const ::sonet::list::v1::IsUserInListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::IsUserInListResponse>>(AsyncIsUserInListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::IsUserInListResponse>> PrepareAsyncIsUserInList(::grpc::ClientContext* context, const ::sonet::list::v1::IsUserInListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::IsUserInListResponse>>(PrepareAsyncIsUserInListRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void CreateList(::grpc::ClientContext* context, const ::sonet::list::v1::CreateListRequest* request, ::sonet::list::v1::CreateListResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateList(::grpc::ClientContext* context, const ::sonet::list::v1::CreateListRequest* request, ::sonet::list::v1::CreateListResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetList(::grpc::ClientContext* context, const ::sonet::list::v1::GetListRequest* request, ::sonet::list::v1::GetListResponse* response, std::function<void(::grpc::Status)>) override;
      void GetList(::grpc::ClientContext* context, const ::sonet::list::v1::GetListRequest* request, ::sonet::list::v1::GetListResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetUserLists(::grpc::ClientContext* context, const ::sonet::list::v1::GetUserListsRequest* request, ::sonet::list::v1::GetUserListsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetUserLists(::grpc::ClientContext* context, const ::sonet::list::v1::GetUserListsRequest* request, ::sonet::list::v1::GetUserListsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateList(::grpc::ClientContext* context, const ::sonet::list::v1::UpdateListRequest* request, ::sonet::list::v1::UpdateListResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateList(::grpc::ClientContext* context, const ::sonet::list::v1::UpdateListRequest* request, ::sonet::list::v1::UpdateListResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteList(::grpc::ClientContext* context, const ::sonet::list::v1::DeleteListRequest* request, ::sonet::list::v1::DeleteListResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteList(::grpc::ClientContext* context, const ::sonet::list::v1::DeleteListRequest* request, ::sonet::list::v1::DeleteListResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AddListMember(::grpc::ClientContext* context, const ::sonet::list::v1::AddListMemberRequest* request, ::sonet::list::v1::AddListMemberResponse* response, std::function<void(::grpc::Status)>) override;
      void AddListMember(::grpc::ClientContext* context, const ::sonet::list::v1::AddListMemberRequest* request, ::sonet::list::v1::AddListMemberResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RemoveListMember(::grpc::ClientContext* context, const ::sonet::list::v1::RemoveListMemberRequest* request, ::sonet::list::v1::RemoveListMemberResponse* response, std::function<void(::grpc::Status)>) override;
      void RemoveListMember(::grpc::ClientContext* context, const ::sonet::list::v1::RemoveListMemberRequest* request, ::sonet::list::v1::RemoveListMemberResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetListMembers(::grpc::ClientContext* context, const ::sonet::list::v1::GetListMembersRequest* request, ::sonet::list::v1::GetListMembersResponse* response, std::function<void(::grpc::Status)>) override;
      void GetListMembers(::grpc::ClientContext* context, const ::sonet::list::v1::GetListMembersRequest* request, ::sonet::list::v1::GetListMembersResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IsUserInList(::grpc::ClientContext* context, const ::sonet::list::v1::IsUserInListRequest* request, ::sonet::list::v1::IsUserInListResponse* response, std::function<void(::grpc::Status)>) override;
      void IsUserInList(::grpc::ClientContext* context, const ::sonet::list::v1::IsUserInListRequest* request, ::sonet::list::v1::IsUserInListResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::CreateListResponse>* AsyncCreateListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::CreateListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::CreateListResponse>* PrepareAsyncCreateListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::CreateListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::GetListResponse>* AsyncGetListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::GetListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::GetListResponse>* PrepareAsyncGetListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::GetListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::GetUserListsResponse>* AsyncGetUserListsRaw(::grpc::ClientContext* context, const ::sonet::list::v1::GetUserListsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::GetUserListsResponse>* PrepareAsyncGetUserListsRaw(::grpc::ClientContext* context, const ::sonet::list::v1::GetUserListsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::UpdateListResponse>* AsyncUpdateListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::UpdateListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::UpdateListResponse>* PrepareAsyncUpdateListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::UpdateListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::DeleteListResponse>* AsyncDeleteListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::DeleteListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::DeleteListResponse>* PrepareAsyncDeleteListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::DeleteListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::AddListMemberResponse>* AsyncAddListMemberRaw(::grpc::ClientContext* context, const ::sonet::list::v1::AddListMemberRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::AddListMemberResponse>* PrepareAsyncAddListMemberRaw(::grpc::ClientContext* context, const ::sonet::list::v1::AddListMemberRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::RemoveListMemberResponse>* AsyncRemoveListMemberRaw(::grpc::ClientContext* context, const ::sonet::list::v1::RemoveListMemberRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::RemoveListMemberResponse>* PrepareAsyncRemoveListMemberRaw(::grpc::ClientContext* context, const ::sonet::list::v1::RemoveListMemberRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::GetListMembersResponse>* AsyncGetListMembersRaw(::grpc::ClientContext* context, const ::sonet::list::v1::GetListMembersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::GetListMembersResponse>* PrepareAsyncGetListMembersRaw(::grpc::ClientContext* context, const ::sonet::list::v1::GetListMembersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::IsUserInListResponse>* AsyncIsUserInListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::IsUserInListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::list::v1::IsUserInListResponse>* PrepareAsyncIsUserInListRaw(::grpc::ClientContext* context, const ::sonet::list::v1::IsUserInListRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateList_;
    const ::grpc::internal::RpcMethod rpcmethod_GetList_;
    const ::grpc::internal::RpcMethod rpcmethod_GetUserLists_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateList_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteList_;
    const ::grpc::internal::RpcMethod rpcmethod_AddListMember_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveListMember_;
    const ::grpc::internal::RpcMethod rpcmethod_GetListMembers_;
    const ::grpc::internal::RpcMethod rpcmethod_IsUserInList_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Create a new list
    virtual ::grpc::Status CreateList(::grpc::ServerContext* context, const ::sonet::list::v1::CreateListRequest* request, ::sonet::list::v1::CreateListResponse* response);
    // Get a list by ID
    virtual ::grpc::Status GetList(::grpc::ServerContext* context, const ::sonet::list::v1::GetListRequest* request, ::sonet::list::v1::GetListResponse* response);
    // Get lists owned by a user
    virtual ::grpc::Status GetUserLists(::grpc::ServerContext* context, const ::sonet::list::v1::GetUserListsRequest* request, ::sonet::list::v1::GetUserListsResponse* response);
    // Update a list
    virtual ::grpc::Status UpdateList(::grpc::ServerContext* context, const ::sonet::list::v1::UpdateListRequest* request, ::sonet::list::v1::UpdateListResponse* response);
    // Delete a list
    virtual ::grpc::Status DeleteList(::grpc::ServerContext* context, const ::sonet::list::v1::DeleteListRequest* request, ::sonet::list::v1::DeleteListResponse* response);
    // Add a member to a list
    virtual ::grpc::Status AddListMember(::grpc::ServerContext* context, const ::sonet::list::v1::AddListMemberRequest* request, ::sonet::list::v1::AddListMemberResponse* response);
    // Remove a member from a list
    virtual ::grpc::Status RemoveListMember(::grpc::ServerContext* context, const ::sonet::list::v1::RemoveListMemberRequest* request, ::sonet::list::v1::RemoveListMemberResponse* response);
    // Get list members
    virtual ::grpc::Status GetListMembers(::grpc::ServerContext* context, const ::sonet::list::v1::GetListMembersRequest* request, ::sonet::list::v1::GetListMembersResponse* response);
    // Check if user is in list
    virtual ::grpc::Status IsUserInList(::grpc::ServerContext* context, const ::sonet::list::v1::IsUserInListRequest* request, ::sonet::list::v1::IsUserInListResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateList() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::CreateListRequest* /*request*/, ::sonet::list::v1::CreateListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateList(::grpc::ServerContext* context, ::sonet::list::v1::CreateListRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::list::v1::CreateListResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetList() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::GetListRequest* /*request*/, ::sonet::list::v1::GetListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetList(::grpc::ServerContext* context, ::sonet::list::v1::GetListRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::list::v1::GetListResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetUserLists : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetUserLists() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetUserLists() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserLists(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::GetUserListsRequest* /*request*/, ::sonet::list::v1::GetUserListsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUserLists(::grpc::ServerContext* context, ::sonet::list::v1::GetUserListsRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::list::v1::GetUserListsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateList() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_UpdateList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::UpdateListRequest* /*request*/, ::sonet::list::v1::UpdateListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateList(::grpc::ServerContext* context, ::sonet::list::v1::UpdateListRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::list::v1::UpdateListResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteList() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_DeleteList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::DeleteListRequest* /*request*/, ::sonet::list::v1::DeleteListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteList(::grpc::ServerContext* context, ::sonet::list::v1::DeleteListRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::list::v1::DeleteListResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddListMember : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AddListMember() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_AddListMember() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddListMember(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::AddListMemberRequest* /*request*/, ::sonet::list::v1::AddListMemberResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddListMember(::grpc::ServerContext* context, ::sonet::list::v1::AddListMemberRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::list::v1::AddListMemberResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveListMember : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RemoveListMember() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_RemoveListMember() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveListMember(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::RemoveListMemberRequest* /*request*/, ::sonet::list::v1::RemoveListMemberResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveListMember(::grpc::ServerContext* context, ::sonet::list::v1::RemoveListMemberRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::list::v1::RemoveListMemberResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetListMembers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetListMembers() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_GetListMembers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetListMembers(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::GetListMembersRequest* /*request*/, ::sonet::list::v1::GetListMembersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetListMembers(::grpc::ServerContext* context, ::sonet::list::v1::GetListMembersRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::list::v1::GetListMembersResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IsUserInList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IsUserInList() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_IsUserInList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsUserInList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::IsUserInListRequest* /*request*/, ::sonet::list::v1::IsUserInListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIsUserInList(::grpc::ServerContext* context, ::sonet::list::v1::IsUserInListRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::list::v1::IsUserInListResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateList<WithAsyncMethod_GetList<WithAsyncMethod_GetUserLists<WithAsyncMethod_UpdateList<WithAsyncMethod_DeleteList<WithAsyncMethod_AddListMember<WithAsyncMethod_RemoveListMember<WithAsyncMethod_GetListMembers<WithAsyncMethod_IsUserInList<Service > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_CreateList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateList() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::list::v1::CreateListRequest, ::sonet::list::v1::CreateListResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::list::v1::CreateListRequest* request, ::sonet::list::v1::CreateListResponse* response) { return this->CreateList(context, request, response); }));}
    void SetMessageAllocatorFor_CreateList(
        ::grpc::MessageAllocator< ::sonet::list::v1::CreateListRequest, ::sonet::list::v1::CreateListResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::list::v1::CreateListRequest, ::sonet::list::v1::CreateListResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::CreateListRequest* /*request*/, ::sonet::list::v1::CreateListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateList(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::list::v1::CreateListRequest* /*request*/, ::sonet::list::v1::CreateListResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetList() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::list::v1::GetListRequest, ::sonet::list::v1::GetListResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::list::v1::GetListRequest* request, ::sonet::list::v1::GetListResponse* response) { return this->GetList(context, request, response); }));}
    void SetMessageAllocatorFor_GetList(
        ::grpc::MessageAllocator< ::sonet::list::v1::GetListRequest, ::sonet::list::v1::GetListResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::list::v1::GetListRequest, ::sonet::list::v1::GetListResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::GetListRequest* /*request*/, ::sonet::list::v1::GetListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetList(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::list::v1::GetListRequest* /*request*/, ::sonet::list::v1::GetListResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetUserLists : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetUserLists() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::list::v1::GetUserListsRequest, ::sonet::list::v1::GetUserListsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::list::v1::GetUserListsRequest* request, ::sonet::list::v1::GetUserListsResponse* response) { return this->GetUserLists(context, request, response); }));}
    void SetMessageAllocatorFor_GetUserLists(
        ::grpc::MessageAllocator< ::sonet::list::v1::GetUserListsRequest, ::sonet::list::v1::GetUserListsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::list::v1::GetUserListsRequest, ::sonet::list::v1::GetUserListsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetUserLists() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserLists(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::GetUserListsRequest* /*request*/, ::sonet::list::v1::GetUserListsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUserLists(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::list::v1::GetUserListsRequest* /*request*/, ::sonet::list::v1::GetUserListsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateList() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::list::v1::UpdateListRequest, ::sonet::list::v1::UpdateListResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::list::v1::UpdateListRequest* request, ::sonet::list::v1::UpdateListResponse* response) { return this->UpdateList(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateList(
        ::grpc::MessageAllocator< ::sonet::list::v1::UpdateListRequest, ::sonet::list::v1::UpdateListResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::list::v1::UpdateListRequest, ::sonet::list::v1::UpdateListResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::UpdateListRequest* /*request*/, ::sonet::list::v1::UpdateListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateList(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::list::v1::UpdateListRequest* /*request*/, ::sonet::list::v1::UpdateListResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteList() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::list::v1::DeleteListRequest, ::sonet::list::v1::DeleteListResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::list::v1::DeleteListRequest* request, ::sonet::list::v1::DeleteListResponse* response) { return this->DeleteList(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteList(
        ::grpc::MessageAllocator< ::sonet::list::v1::DeleteListRequest, ::sonet::list::v1::DeleteListResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::list::v1::DeleteListRequest, ::sonet::list::v1::DeleteListResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::DeleteListRequest* /*request*/, ::sonet::list::v1::DeleteListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteList(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::list::v1::DeleteListRequest* /*request*/, ::sonet::list::v1::DeleteListResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AddListMember : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AddListMember() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::list::v1::AddListMemberRequest, ::sonet::list::v1::AddListMemberResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::list::v1::AddListMemberRequest* request, ::sonet::list::v1::AddListMemberResponse* response) { return this->AddListMember(context, request, response); }));}
    void SetMessageAllocatorFor_AddListMember(
        ::grpc::MessageAllocator< ::sonet::list::v1::AddListMemberRequest, ::sonet::list::v1::AddListMemberResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::list::v1::AddListMemberRequest, ::sonet::list::v1::AddListMemberResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AddListMember() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddListMember(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::AddListMemberRequest* /*request*/, ::sonet::list::v1::AddListMemberResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddListMember(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::list::v1::AddListMemberRequest* /*request*/, ::sonet::list::v1::AddListMemberResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RemoveListMember : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RemoveListMember() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::list::v1::RemoveListMemberRequest, ::sonet::list::v1::RemoveListMemberResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::list::v1::RemoveListMemberRequest* request, ::sonet::list::v1::RemoveListMemberResponse* response) { return this->RemoveListMember(context, request, response); }));}
    void SetMessageAllocatorFor_RemoveListMember(
        ::grpc::MessageAllocator< ::sonet::list::v1::RemoveListMemberRequest, ::sonet::list::v1::RemoveListMemberResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::list::v1::RemoveListMemberRequest, ::sonet::list::v1::RemoveListMemberResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RemoveListMember() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveListMember(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::RemoveListMemberRequest* /*request*/, ::sonet::list::v1::RemoveListMemberResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveListMember(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::list::v1::RemoveListMemberRequest* /*request*/, ::sonet::list::v1::RemoveListMemberResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetListMembers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetListMembers() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::list::v1::GetListMembersRequest, ::sonet::list::v1::GetListMembersResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::list::v1::GetListMembersRequest* request, ::sonet::list::v1::GetListMembersResponse* response) { return this->GetListMembers(context, request, response); }));}
    void SetMessageAllocatorFor_GetListMembers(
        ::grpc::MessageAllocator< ::sonet::list::v1::GetListMembersRequest, ::sonet::list::v1::GetListMembersResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::list::v1::GetListMembersRequest, ::sonet::list::v1::GetListMembersResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetListMembers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetListMembers(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::GetListMembersRequest* /*request*/, ::sonet::list::v1::GetListMembersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetListMembers(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::list::v1::GetListMembersRequest* /*request*/, ::sonet::list::v1::GetListMembersResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IsUserInList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IsUserInList() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::list::v1::IsUserInListRequest, ::sonet::list::v1::IsUserInListResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::list::v1::IsUserInListRequest* request, ::sonet::list::v1::IsUserInListResponse* response) { return this->IsUserInList(context, request, response); }));}
    void SetMessageAllocatorFor_IsUserInList(
        ::grpc::MessageAllocator< ::sonet::list::v1::IsUserInListRequest, ::sonet::list::v1::IsUserInListResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::list::v1::IsUserInListRequest, ::sonet::list::v1::IsUserInListResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IsUserInList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsUserInList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::IsUserInListRequest* /*request*/, ::sonet::list::v1::IsUserInListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IsUserInList(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::list::v1::IsUserInListRequest* /*request*/, ::sonet::list::v1::IsUserInListResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_CreateList<WithCallbackMethod_GetList<WithCallbackMethod_GetUserLists<WithCallbackMethod_UpdateList<WithCallbackMethod_DeleteList<WithCallbackMethod_AddListMember<WithCallbackMethod_RemoveListMember<WithCallbackMethod_GetListMembers<WithCallbackMethod_IsUserInList<Service > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateList() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::CreateListRequest* /*request*/, ::sonet::list::v1::CreateListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetList() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::GetListRequest* /*request*/, ::sonet::list::v1::GetListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetUserLists : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetUserLists() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetUserLists() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserLists(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::GetUserListsRequest* /*request*/, ::sonet::list::v1::GetUserListsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateList() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_UpdateList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::UpdateListRequest* /*request*/, ::sonet::list::v1::UpdateListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteList() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_DeleteList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::DeleteListRequest* /*request*/, ::sonet::list::v1::DeleteListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddListMember : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AddListMember() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_AddListMember() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddListMember(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::AddListMemberRequest* /*request*/, ::sonet::list::v1::AddListMemberResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveListMember : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RemoveListMember() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_RemoveListMember() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveListMember(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::RemoveListMemberRequest* /*request*/, ::sonet::list::v1::RemoveListMemberResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetListMembers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetListMembers() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_GetListMembers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetListMembers(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::GetListMembersRequest* /*request*/, ::sonet::list::v1::GetListMembersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IsUserInList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IsUserInList() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_IsUserInList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsUserInList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::IsUserInListRequest* /*request*/, ::sonet::list::v1::IsUserInListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateList() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::CreateListRequest* /*request*/, ::sonet::list::v1::CreateListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateList(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetList() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::GetListRequest* /*request*/, ::sonet::list::v1::GetListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetList(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetUserLists : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetUserLists() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetUserLists() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserLists(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::GetUserListsRequest* /*request*/, ::sonet::list::v1::GetUserListsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUserLists(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateList() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_UpdateList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::UpdateListRequest* /*request*/, ::sonet::list::v1::UpdateListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateList(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteList() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_DeleteList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::DeleteListRequest* /*request*/, ::sonet::list::v1::DeleteListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteList(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AddListMember : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AddListMember() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_AddListMember() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddListMember(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::AddListMemberRequest* /*request*/, ::sonet::list::v1::AddListMemberResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddListMember(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RemoveListMember : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RemoveListMember() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_RemoveListMember() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveListMember(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::RemoveListMemberRequest* /*request*/, ::sonet::list::v1::RemoveListMemberResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveListMember(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetListMembers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetListMembers() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_GetListMembers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetListMembers(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::GetListMembersRequest* /*request*/, ::sonet::list::v1::GetListMembersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetListMembers(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IsUserInList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IsUserInList() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_IsUserInList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsUserInList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::IsUserInListRequest* /*request*/, ::sonet::list::v1::IsUserInListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIsUserInList(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateList() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateList(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::CreateListRequest* /*request*/, ::sonet::list::v1::CreateListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateList(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetList() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetList(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::GetListRequest* /*request*/, ::sonet::list::v1::GetListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetList(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetUserLists : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetUserLists() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetUserLists(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetUserLists() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserLists(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::GetUserListsRequest* /*request*/, ::sonet::list::v1::GetUserListsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUserLists(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateList() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateList(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::UpdateListRequest* /*request*/, ::sonet::list::v1::UpdateListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateList(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteList() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteList(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::DeleteListRequest* /*request*/, ::sonet::list::v1::DeleteListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteList(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AddListMember : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AddListMember() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AddListMember(context, request, response); }));
    }
    ~WithRawCallbackMethod_AddListMember() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddListMember(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::AddListMemberRequest* /*request*/, ::sonet::list::v1::AddListMemberResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AddListMember(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RemoveListMember : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RemoveListMember() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RemoveListMember(context, request, response); }));
    }
    ~WithRawCallbackMethod_RemoveListMember() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveListMember(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::RemoveListMemberRequest* /*request*/, ::sonet::list::v1::RemoveListMemberResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveListMember(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetListMembers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetListMembers() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetListMembers(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetListMembers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetListMembers(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::GetListMembersRequest* /*request*/, ::sonet::list::v1::GetListMembersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetListMembers(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IsUserInList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IsUserInList() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IsUserInList(context, request, response); }));
    }
    ~WithRawCallbackMethod_IsUserInList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsUserInList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::IsUserInListRequest* /*request*/, ::sonet::list::v1::IsUserInListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IsUserInList(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateList() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::list::v1::CreateListRequest, ::sonet::list::v1::CreateListResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::list::v1::CreateListRequest, ::sonet::list::v1::CreateListResponse>* streamer) {
                       return this->StreamedCreateList(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::CreateListRequest* /*request*/, ::sonet::list::v1::CreateListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::list::v1::CreateListRequest,::sonet::list::v1::CreateListResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetList() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::list::v1::GetListRequest, ::sonet::list::v1::GetListResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::list::v1::GetListRequest, ::sonet::list::v1::GetListResponse>* streamer) {
                       return this->StreamedGetList(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::GetListRequest* /*request*/, ::sonet::list::v1::GetListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::list::v1::GetListRequest,::sonet::list::v1::GetListResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetUserLists : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetUserLists() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::list::v1::GetUserListsRequest, ::sonet::list::v1::GetUserListsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::list::v1::GetUserListsRequest, ::sonet::list::v1::GetUserListsResponse>* streamer) {
                       return this->StreamedGetUserLists(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetUserLists() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetUserLists(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::GetUserListsRequest* /*request*/, ::sonet::list::v1::GetUserListsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetUserLists(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::list::v1::GetUserListsRequest,::sonet::list::v1::GetUserListsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateList() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::list::v1::UpdateListRequest, ::sonet::list::v1::UpdateListResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::list::v1::UpdateListRequest, ::sonet::list::v1::UpdateListResponse>* streamer) {
                       return this->StreamedUpdateList(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::UpdateListRequest* /*request*/, ::sonet::list::v1::UpdateListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::list::v1::UpdateListRequest,::sonet::list::v1::UpdateListResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteList() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::list::v1::DeleteListRequest, ::sonet::list::v1::DeleteListResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::list::v1::DeleteListRequest, ::sonet::list::v1::DeleteListResponse>* streamer) {
                       return this->StreamedDeleteList(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::DeleteListRequest* /*request*/, ::sonet::list::v1::DeleteListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::list::v1::DeleteListRequest,::sonet::list::v1::DeleteListResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddListMember : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AddListMember() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::list::v1::AddListMemberRequest, ::sonet::list::v1::AddListMemberResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::list::v1::AddListMemberRequest, ::sonet::list::v1::AddListMemberResponse>* streamer) {
                       return this->StreamedAddListMember(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AddListMember() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddListMember(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::AddListMemberRequest* /*request*/, ::sonet::list::v1::AddListMemberResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddListMember(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::list::v1::AddListMemberRequest,::sonet::list::v1::AddListMemberResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveListMember : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RemoveListMember() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::list::v1::RemoveListMemberRequest, ::sonet::list::v1::RemoveListMemberResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::list::v1::RemoveListMemberRequest, ::sonet::list::v1::RemoveListMemberResponse>* streamer) {
                       return this->StreamedRemoveListMember(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RemoveListMember() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveListMember(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::RemoveListMemberRequest* /*request*/, ::sonet::list::v1::RemoveListMemberResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveListMember(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::list::v1::RemoveListMemberRequest,::sonet::list::v1::RemoveListMemberResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetListMembers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetListMembers() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::list::v1::GetListMembersRequest, ::sonet::list::v1::GetListMembersResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::list::v1::GetListMembersRequest, ::sonet::list::v1::GetListMembersResponse>* streamer) {
                       return this->StreamedGetListMembers(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetListMembers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetListMembers(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::GetListMembersRequest* /*request*/, ::sonet::list::v1::GetListMembersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetListMembers(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::list::v1::GetListMembersRequest,::sonet::list::v1::GetListMembersResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IsUserInList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IsUserInList() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::list::v1::IsUserInListRequest, ::sonet::list::v1::IsUserInListResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::list::v1::IsUserInListRequest, ::sonet::list::v1::IsUserInListResponse>* streamer) {
                       return this->StreamedIsUserInList(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IsUserInList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IsUserInList(::grpc::ServerContext* /*context*/, const ::sonet::list::v1::IsUserInListRequest* /*request*/, ::sonet::list::v1::IsUserInListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIsUserInList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::list::v1::IsUserInListRequest,::sonet::list::v1::IsUserInListResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateList<WithStreamedUnaryMethod_GetList<WithStreamedUnaryMethod_GetUserLists<WithStreamedUnaryMethod_UpdateList<WithStreamedUnaryMethod_DeleteList<WithStreamedUnaryMethod_AddListMember<WithStreamedUnaryMethod_RemoveListMember<WithStreamedUnaryMethod_GetListMembers<WithStreamedUnaryMethod_IsUserInList<Service > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateList<WithStreamedUnaryMethod_GetList<WithStreamedUnaryMethod_GetUserLists<WithStreamedUnaryMethod_UpdateList<WithStreamedUnaryMethod_DeleteList<WithStreamedUnaryMethod_AddListMember<WithStreamedUnaryMethod_RemoveListMember<WithStreamedUnaryMethod_GetListMembers<WithStreamedUnaryMethod_IsUserInList<Service > > > > > > > > > StreamedService;
};

}  // namespace v1
}  // namespace list
}  // namespace sonet


#endif  // GRPC_services_2flist_5fservice_2eproto__INCLUDED
