// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: services/user.proto
// Original file comments:
//
// Copyright (c) 2025 Neo Qiss
// All rights reserved.
// 
// This software is proprietary and confidential.
// Unauthorized copying, distribution, or use is strictly prohibited.
//
#ifndef GRPC_services_2fuser_2eproto__INCLUDED
#define GRPC_services_2fuser_2eproto__INCLUDED

#include "services/user.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace sonet {
namespace user {

// User Service definition
class UserService final {
 public:
  static constexpr char const* service_full_name() {
    return "sonet.user.UserService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Authentication operations
    virtual ::grpc::Status RegisterUser(::grpc::ClientContext* context, const ::sonet::user::RegisterUserRequest& request, ::sonet::user::RegisterUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::RegisterUserResponse>> AsyncRegisterUser(::grpc::ClientContext* context, const ::sonet::user::RegisterUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::RegisterUserResponse>>(AsyncRegisterUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::RegisterUserResponse>> PrepareAsyncRegisterUser(::grpc::ClientContext* context, const ::sonet::user::RegisterUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::RegisterUserResponse>>(PrepareAsyncRegisterUserRaw(context, request, cq));
    }
    virtual ::grpc::Status LoginUser(::grpc::ClientContext* context, const ::sonet::user::LoginUserRequest& request, ::sonet::user::LoginUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::LoginUserResponse>> AsyncLoginUser(::grpc::ClientContext* context, const ::sonet::user::LoginUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::LoginUserResponse>>(AsyncLoginUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::LoginUserResponse>> PrepareAsyncLoginUser(::grpc::ClientContext* context, const ::sonet::user::LoginUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::LoginUserResponse>>(PrepareAsyncLoginUserRaw(context, request, cq));
    }
    virtual ::grpc::Status LogoutUser(::grpc::ClientContext* context, const ::sonet::user::LogoutRequest& request, ::sonet::user::LogoutResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::LogoutResponse>> AsyncLogoutUser(::grpc::ClientContext* context, const ::sonet::user::LogoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::LogoutResponse>>(AsyncLogoutUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::LogoutResponse>> PrepareAsyncLogoutUser(::grpc::ClientContext* context, const ::sonet::user::LogoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::LogoutResponse>>(PrepareAsyncLogoutUserRaw(context, request, cq));
    }
    virtual ::grpc::Status VerifyToken(::grpc::ClientContext* context, const ::sonet::user::VerifyTokenRequest& request, ::sonet::user::VerifyTokenResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::VerifyTokenResponse>> AsyncVerifyToken(::grpc::ClientContext* context, const ::sonet::user::VerifyTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::VerifyTokenResponse>>(AsyncVerifyTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::VerifyTokenResponse>> PrepareAsyncVerifyToken(::grpc::ClientContext* context, const ::sonet::user::VerifyTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::VerifyTokenResponse>>(PrepareAsyncVerifyTokenRaw(context, request, cq));
    }
    virtual ::grpc::Status RefreshToken(::grpc::ClientContext* context, const ::sonet::user::RefreshTokenRequest& request, ::sonet::user::RefreshTokenResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::RefreshTokenResponse>> AsyncRefreshToken(::grpc::ClientContext* context, const ::sonet::user::RefreshTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::RefreshTokenResponse>>(AsyncRefreshTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::RefreshTokenResponse>> PrepareAsyncRefreshToken(::grpc::ClientContext* context, const ::sonet::user::RefreshTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::RefreshTokenResponse>>(PrepareAsyncRefreshTokenRaw(context, request, cq));
    }
    // Password management
    virtual ::grpc::Status ChangePassword(::grpc::ClientContext* context, const ::sonet::user::ChangePasswordRequest& request, ::sonet::user::ChangePasswordResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::ChangePasswordResponse>> AsyncChangePassword(::grpc::ClientContext* context, const ::sonet::user::ChangePasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::ChangePasswordResponse>>(AsyncChangePasswordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::ChangePasswordResponse>> PrepareAsyncChangePassword(::grpc::ClientContext* context, const ::sonet::user::ChangePasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::ChangePasswordResponse>>(PrepareAsyncChangePasswordRaw(context, request, cq));
    }
    virtual ::grpc::Status ResetPassword(::grpc::ClientContext* context, const ::sonet::user::ResetPasswordRequest& request, ::sonet::user::ResetPasswordResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::ResetPasswordResponse>> AsyncResetPassword(::grpc::ClientContext* context, const ::sonet::user::ResetPasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::ResetPasswordResponse>>(AsyncResetPasswordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::ResetPasswordResponse>> PrepareAsyncResetPassword(::grpc::ClientContext* context, const ::sonet::user::ResetPasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::ResetPasswordResponse>>(PrepareAsyncResetPasswordRaw(context, request, cq));
    }
    virtual ::grpc::Status ConfirmPasswordReset(::grpc::ClientContext* context, const ::sonet::user::ConfirmPasswordResetRequest& request, ::sonet::user::ConfirmPasswordResetResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::ConfirmPasswordResetResponse>> AsyncConfirmPasswordReset(::grpc::ClientContext* context, const ::sonet::user::ConfirmPasswordResetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::ConfirmPasswordResetResponse>>(AsyncConfirmPasswordResetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::ConfirmPasswordResetResponse>> PrepareAsyncConfirmPasswordReset(::grpc::ClientContext* context, const ::sonet::user::ConfirmPasswordResetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::ConfirmPasswordResetResponse>>(PrepareAsyncConfirmPasswordResetRaw(context, request, cq));
    }
    // Email verification
    virtual ::grpc::Status VerifyEmail(::grpc::ClientContext* context, const ::sonet::user::VerifyEmailRequest& request, ::sonet::user::VerifyEmailResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::VerifyEmailResponse>> AsyncVerifyEmail(::grpc::ClientContext* context, const ::sonet::user::VerifyEmailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::VerifyEmailResponse>>(AsyncVerifyEmailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::VerifyEmailResponse>> PrepareAsyncVerifyEmail(::grpc::ClientContext* context, const ::sonet::user::VerifyEmailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::VerifyEmailResponse>>(PrepareAsyncVerifyEmailRaw(context, request, cq));
    }
    virtual ::grpc::Status ResendVerification(::grpc::ClientContext* context, const ::sonet::user::ResendVerificationRequest& request, ::sonet::user::ResendVerificationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::ResendVerificationResponse>> AsyncResendVerification(::grpc::ClientContext* context, const ::sonet::user::ResendVerificationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::ResendVerificationResponse>>(AsyncResendVerificationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::ResendVerificationResponse>> PrepareAsyncResendVerification(::grpc::ClientContext* context, const ::sonet::user::ResendVerificationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::ResendVerificationResponse>>(PrepareAsyncResendVerificationRaw(context, request, cq));
    }
    // Two-factor authentication
    virtual ::grpc::Status SetupTwoFactor(::grpc::ClientContext* context, const ::sonet::user::SetupTwoFactorRequest& request, ::sonet::user::SetupTwoFactorResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::SetupTwoFactorResponse>> AsyncSetupTwoFactor(::grpc::ClientContext* context, const ::sonet::user::SetupTwoFactorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::SetupTwoFactorResponse>>(AsyncSetupTwoFactorRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::SetupTwoFactorResponse>> PrepareAsyncSetupTwoFactor(::grpc::ClientContext* context, const ::sonet::user::SetupTwoFactorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::SetupTwoFactorResponse>>(PrepareAsyncSetupTwoFactorRaw(context, request, cq));
    }
    virtual ::grpc::Status VerifyTwoFactor(::grpc::ClientContext* context, const ::sonet::user::VerifyTwoFactorRequest& request, ::sonet::user::VerifyTwoFactorResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::VerifyTwoFactorResponse>> AsyncVerifyTwoFactor(::grpc::ClientContext* context, const ::sonet::user::VerifyTwoFactorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::VerifyTwoFactorResponse>>(AsyncVerifyTwoFactorRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::VerifyTwoFactorResponse>> PrepareAsyncVerifyTwoFactor(::grpc::ClientContext* context, const ::sonet::user::VerifyTwoFactorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::VerifyTwoFactorResponse>>(PrepareAsyncVerifyTwoFactorRaw(context, request, cq));
    }
    virtual ::grpc::Status DisableTwoFactor(::grpc::ClientContext* context, const ::sonet::user::DisableTwoFactorRequest& request, ::sonet::user::DisableTwoFactorResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::DisableTwoFactorResponse>> AsyncDisableTwoFactor(::grpc::ClientContext* context, const ::sonet::user::DisableTwoFactorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::DisableTwoFactorResponse>>(AsyncDisableTwoFactorRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::DisableTwoFactorResponse>> PrepareAsyncDisableTwoFactor(::grpc::ClientContext* context, const ::sonet::user::DisableTwoFactorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::DisableTwoFactorResponse>>(PrepareAsyncDisableTwoFactorRaw(context, request, cq));
    }
    // Session management
    virtual ::grpc::Status GetActiveSessions(::grpc::ClientContext* context, const ::sonet::user::GetActiveSessionsRequest& request, ::sonet::user::GetActiveSessionsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::GetActiveSessionsResponse>> AsyncGetActiveSessions(::grpc::ClientContext* context, const ::sonet::user::GetActiveSessionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::GetActiveSessionsResponse>>(AsyncGetActiveSessionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::GetActiveSessionsResponse>> PrepareAsyncGetActiveSessions(::grpc::ClientContext* context, const ::sonet::user::GetActiveSessionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::GetActiveSessionsResponse>>(PrepareAsyncGetActiveSessionsRaw(context, request, cq));
    }
    virtual ::grpc::Status TerminateSession(::grpc::ClientContext* context, const ::sonet::user::TerminateSessionRequest& request, ::sonet::user::TerminateSessionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::TerminateSessionResponse>> AsyncTerminateSession(::grpc::ClientContext* context, const ::sonet::user::TerminateSessionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::TerminateSessionResponse>>(AsyncTerminateSessionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::TerminateSessionResponse>> PrepareAsyncTerminateSession(::grpc::ClientContext* context, const ::sonet::user::TerminateSessionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::TerminateSessionResponse>>(PrepareAsyncTerminateSessionRaw(context, request, cq));
    }
    // Profile management
    virtual ::grpc::Status GetUserProfile(::grpc::ClientContext* context, const ::sonet::user::GetUserProfileRequest& request, ::sonet::user::GetUserProfileResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::GetUserProfileResponse>> AsyncGetUserProfile(::grpc::ClientContext* context, const ::sonet::user::GetUserProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::GetUserProfileResponse>>(AsyncGetUserProfileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::GetUserProfileResponse>> PrepareAsyncGetUserProfile(::grpc::ClientContext* context, const ::sonet::user::GetUserProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::GetUserProfileResponse>>(PrepareAsyncGetUserProfileRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateUserProfile(::grpc::ClientContext* context, const ::sonet::user::UpdateUserProfileRequest& request, ::sonet::user::UpdateUserProfileResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::UpdateUserProfileResponse>> AsyncUpdateUserProfile(::grpc::ClientContext* context, const ::sonet::user::UpdateUserProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::UpdateUserProfileResponse>>(AsyncUpdateUserProfileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::UpdateUserProfileResponse>> PrepareAsyncUpdateUserProfile(::grpc::ClientContext* context, const ::sonet::user::UpdateUserProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::UpdateUserProfileResponse>>(PrepareAsyncUpdateUserProfileRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Authentication operations
      virtual void RegisterUser(::grpc::ClientContext* context, const ::sonet::user::RegisterUserRequest* request, ::sonet::user::RegisterUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RegisterUser(::grpc::ClientContext* context, const ::sonet::user::RegisterUserRequest* request, ::sonet::user::RegisterUserResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void LoginUser(::grpc::ClientContext* context, const ::sonet::user::LoginUserRequest* request, ::sonet::user::LoginUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void LoginUser(::grpc::ClientContext* context, const ::sonet::user::LoginUserRequest* request, ::sonet::user::LoginUserResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void LogoutUser(::grpc::ClientContext* context, const ::sonet::user::LogoutRequest* request, ::sonet::user::LogoutResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void LogoutUser(::grpc::ClientContext* context, const ::sonet::user::LogoutRequest* request, ::sonet::user::LogoutResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void VerifyToken(::grpc::ClientContext* context, const ::sonet::user::VerifyTokenRequest* request, ::sonet::user::VerifyTokenResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void VerifyToken(::grpc::ClientContext* context, const ::sonet::user::VerifyTokenRequest* request, ::sonet::user::VerifyTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void RefreshToken(::grpc::ClientContext* context, const ::sonet::user::RefreshTokenRequest* request, ::sonet::user::RefreshTokenResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RefreshToken(::grpc::ClientContext* context, const ::sonet::user::RefreshTokenRequest* request, ::sonet::user::RefreshTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Password management
      virtual void ChangePassword(::grpc::ClientContext* context, const ::sonet::user::ChangePasswordRequest* request, ::sonet::user::ChangePasswordResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ChangePassword(::grpc::ClientContext* context, const ::sonet::user::ChangePasswordRequest* request, ::sonet::user::ChangePasswordResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ResetPassword(::grpc::ClientContext* context, const ::sonet::user::ResetPasswordRequest* request, ::sonet::user::ResetPasswordResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ResetPassword(::grpc::ClientContext* context, const ::sonet::user::ResetPasswordRequest* request, ::sonet::user::ResetPasswordResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ConfirmPasswordReset(::grpc::ClientContext* context, const ::sonet::user::ConfirmPasswordResetRequest* request, ::sonet::user::ConfirmPasswordResetResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ConfirmPasswordReset(::grpc::ClientContext* context, const ::sonet::user::ConfirmPasswordResetRequest* request, ::sonet::user::ConfirmPasswordResetResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Email verification
      virtual void VerifyEmail(::grpc::ClientContext* context, const ::sonet::user::VerifyEmailRequest* request, ::sonet::user::VerifyEmailResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void VerifyEmail(::grpc::ClientContext* context, const ::sonet::user::VerifyEmailRequest* request, ::sonet::user::VerifyEmailResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ResendVerification(::grpc::ClientContext* context, const ::sonet::user::ResendVerificationRequest* request, ::sonet::user::ResendVerificationResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ResendVerification(::grpc::ClientContext* context, const ::sonet::user::ResendVerificationRequest* request, ::sonet::user::ResendVerificationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Two-factor authentication
      virtual void SetupTwoFactor(::grpc::ClientContext* context, const ::sonet::user::SetupTwoFactorRequest* request, ::sonet::user::SetupTwoFactorResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetupTwoFactor(::grpc::ClientContext* context, const ::sonet::user::SetupTwoFactorRequest* request, ::sonet::user::SetupTwoFactorResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void VerifyTwoFactor(::grpc::ClientContext* context, const ::sonet::user::VerifyTwoFactorRequest* request, ::sonet::user::VerifyTwoFactorResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void VerifyTwoFactor(::grpc::ClientContext* context, const ::sonet::user::VerifyTwoFactorRequest* request, ::sonet::user::VerifyTwoFactorResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DisableTwoFactor(::grpc::ClientContext* context, const ::sonet::user::DisableTwoFactorRequest* request, ::sonet::user::DisableTwoFactorResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DisableTwoFactor(::grpc::ClientContext* context, const ::sonet::user::DisableTwoFactorRequest* request, ::sonet::user::DisableTwoFactorResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Session management
      virtual void GetActiveSessions(::grpc::ClientContext* context, const ::sonet::user::GetActiveSessionsRequest* request, ::sonet::user::GetActiveSessionsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetActiveSessions(::grpc::ClientContext* context, const ::sonet::user::GetActiveSessionsRequest* request, ::sonet::user::GetActiveSessionsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void TerminateSession(::grpc::ClientContext* context, const ::sonet::user::TerminateSessionRequest* request, ::sonet::user::TerminateSessionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void TerminateSession(::grpc::ClientContext* context, const ::sonet::user::TerminateSessionRequest* request, ::sonet::user::TerminateSessionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Profile management
      virtual void GetUserProfile(::grpc::ClientContext* context, const ::sonet::user::GetUserProfileRequest* request, ::sonet::user::GetUserProfileResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetUserProfile(::grpc::ClientContext* context, const ::sonet::user::GetUserProfileRequest* request, ::sonet::user::GetUserProfileResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateUserProfile(::grpc::ClientContext* context, const ::sonet::user::UpdateUserProfileRequest* request, ::sonet::user::UpdateUserProfileResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateUserProfile(::grpc::ClientContext* context, const ::sonet::user::UpdateUserProfileRequest* request, ::sonet::user::UpdateUserProfileResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::RegisterUserResponse>* AsyncRegisterUserRaw(::grpc::ClientContext* context, const ::sonet::user::RegisterUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::RegisterUserResponse>* PrepareAsyncRegisterUserRaw(::grpc::ClientContext* context, const ::sonet::user::RegisterUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::LoginUserResponse>* AsyncLoginUserRaw(::grpc::ClientContext* context, const ::sonet::user::LoginUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::LoginUserResponse>* PrepareAsyncLoginUserRaw(::grpc::ClientContext* context, const ::sonet::user::LoginUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::LogoutResponse>* AsyncLogoutUserRaw(::grpc::ClientContext* context, const ::sonet::user::LogoutRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::LogoutResponse>* PrepareAsyncLogoutUserRaw(::grpc::ClientContext* context, const ::sonet::user::LogoutRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::VerifyTokenResponse>* AsyncVerifyTokenRaw(::grpc::ClientContext* context, const ::sonet::user::VerifyTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::VerifyTokenResponse>* PrepareAsyncVerifyTokenRaw(::grpc::ClientContext* context, const ::sonet::user::VerifyTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::RefreshTokenResponse>* AsyncRefreshTokenRaw(::grpc::ClientContext* context, const ::sonet::user::RefreshTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::RefreshTokenResponse>* PrepareAsyncRefreshTokenRaw(::grpc::ClientContext* context, const ::sonet::user::RefreshTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::ChangePasswordResponse>* AsyncChangePasswordRaw(::grpc::ClientContext* context, const ::sonet::user::ChangePasswordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::ChangePasswordResponse>* PrepareAsyncChangePasswordRaw(::grpc::ClientContext* context, const ::sonet::user::ChangePasswordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::ResetPasswordResponse>* AsyncResetPasswordRaw(::grpc::ClientContext* context, const ::sonet::user::ResetPasswordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::ResetPasswordResponse>* PrepareAsyncResetPasswordRaw(::grpc::ClientContext* context, const ::sonet::user::ResetPasswordRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::ConfirmPasswordResetResponse>* AsyncConfirmPasswordResetRaw(::grpc::ClientContext* context, const ::sonet::user::ConfirmPasswordResetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::ConfirmPasswordResetResponse>* PrepareAsyncConfirmPasswordResetRaw(::grpc::ClientContext* context, const ::sonet::user::ConfirmPasswordResetRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::VerifyEmailResponse>* AsyncVerifyEmailRaw(::grpc::ClientContext* context, const ::sonet::user::VerifyEmailRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::VerifyEmailResponse>* PrepareAsyncVerifyEmailRaw(::grpc::ClientContext* context, const ::sonet::user::VerifyEmailRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::ResendVerificationResponse>* AsyncResendVerificationRaw(::grpc::ClientContext* context, const ::sonet::user::ResendVerificationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::ResendVerificationResponse>* PrepareAsyncResendVerificationRaw(::grpc::ClientContext* context, const ::sonet::user::ResendVerificationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::SetupTwoFactorResponse>* AsyncSetupTwoFactorRaw(::grpc::ClientContext* context, const ::sonet::user::SetupTwoFactorRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::SetupTwoFactorResponse>* PrepareAsyncSetupTwoFactorRaw(::grpc::ClientContext* context, const ::sonet::user::SetupTwoFactorRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::VerifyTwoFactorResponse>* AsyncVerifyTwoFactorRaw(::grpc::ClientContext* context, const ::sonet::user::VerifyTwoFactorRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::VerifyTwoFactorResponse>* PrepareAsyncVerifyTwoFactorRaw(::grpc::ClientContext* context, const ::sonet::user::VerifyTwoFactorRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::DisableTwoFactorResponse>* AsyncDisableTwoFactorRaw(::grpc::ClientContext* context, const ::sonet::user::DisableTwoFactorRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::DisableTwoFactorResponse>* PrepareAsyncDisableTwoFactorRaw(::grpc::ClientContext* context, const ::sonet::user::DisableTwoFactorRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::GetActiveSessionsResponse>* AsyncGetActiveSessionsRaw(::grpc::ClientContext* context, const ::sonet::user::GetActiveSessionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::GetActiveSessionsResponse>* PrepareAsyncGetActiveSessionsRaw(::grpc::ClientContext* context, const ::sonet::user::GetActiveSessionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::TerminateSessionResponse>* AsyncTerminateSessionRaw(::grpc::ClientContext* context, const ::sonet::user::TerminateSessionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::TerminateSessionResponse>* PrepareAsyncTerminateSessionRaw(::grpc::ClientContext* context, const ::sonet::user::TerminateSessionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::GetUserProfileResponse>* AsyncGetUserProfileRaw(::grpc::ClientContext* context, const ::sonet::user::GetUserProfileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::GetUserProfileResponse>* PrepareAsyncGetUserProfileRaw(::grpc::ClientContext* context, const ::sonet::user::GetUserProfileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::UpdateUserProfileResponse>* AsyncUpdateUserProfileRaw(::grpc::ClientContext* context, const ::sonet::user::UpdateUserProfileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::user::UpdateUserProfileResponse>* PrepareAsyncUpdateUserProfileRaw(::grpc::ClientContext* context, const ::sonet::user::UpdateUserProfileRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status RegisterUser(::grpc::ClientContext* context, const ::sonet::user::RegisterUserRequest& request, ::sonet::user::RegisterUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::RegisterUserResponse>> AsyncRegisterUser(::grpc::ClientContext* context, const ::sonet::user::RegisterUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::RegisterUserResponse>>(AsyncRegisterUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::RegisterUserResponse>> PrepareAsyncRegisterUser(::grpc::ClientContext* context, const ::sonet::user::RegisterUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::RegisterUserResponse>>(PrepareAsyncRegisterUserRaw(context, request, cq));
    }
    ::grpc::Status LoginUser(::grpc::ClientContext* context, const ::sonet::user::LoginUserRequest& request, ::sonet::user::LoginUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::LoginUserResponse>> AsyncLoginUser(::grpc::ClientContext* context, const ::sonet::user::LoginUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::LoginUserResponse>>(AsyncLoginUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::LoginUserResponse>> PrepareAsyncLoginUser(::grpc::ClientContext* context, const ::sonet::user::LoginUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::LoginUserResponse>>(PrepareAsyncLoginUserRaw(context, request, cq));
    }
    ::grpc::Status LogoutUser(::grpc::ClientContext* context, const ::sonet::user::LogoutRequest& request, ::sonet::user::LogoutResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::LogoutResponse>> AsyncLogoutUser(::grpc::ClientContext* context, const ::sonet::user::LogoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::LogoutResponse>>(AsyncLogoutUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::LogoutResponse>> PrepareAsyncLogoutUser(::grpc::ClientContext* context, const ::sonet::user::LogoutRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::LogoutResponse>>(PrepareAsyncLogoutUserRaw(context, request, cq));
    }
    ::grpc::Status VerifyToken(::grpc::ClientContext* context, const ::sonet::user::VerifyTokenRequest& request, ::sonet::user::VerifyTokenResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::VerifyTokenResponse>> AsyncVerifyToken(::grpc::ClientContext* context, const ::sonet::user::VerifyTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::VerifyTokenResponse>>(AsyncVerifyTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::VerifyTokenResponse>> PrepareAsyncVerifyToken(::grpc::ClientContext* context, const ::sonet::user::VerifyTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::VerifyTokenResponse>>(PrepareAsyncVerifyTokenRaw(context, request, cq));
    }
    ::grpc::Status RefreshToken(::grpc::ClientContext* context, const ::sonet::user::RefreshTokenRequest& request, ::sonet::user::RefreshTokenResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::RefreshTokenResponse>> AsyncRefreshToken(::grpc::ClientContext* context, const ::sonet::user::RefreshTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::RefreshTokenResponse>>(AsyncRefreshTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::RefreshTokenResponse>> PrepareAsyncRefreshToken(::grpc::ClientContext* context, const ::sonet::user::RefreshTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::RefreshTokenResponse>>(PrepareAsyncRefreshTokenRaw(context, request, cq));
    }
    ::grpc::Status ChangePassword(::grpc::ClientContext* context, const ::sonet::user::ChangePasswordRequest& request, ::sonet::user::ChangePasswordResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::ChangePasswordResponse>> AsyncChangePassword(::grpc::ClientContext* context, const ::sonet::user::ChangePasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::ChangePasswordResponse>>(AsyncChangePasswordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::ChangePasswordResponse>> PrepareAsyncChangePassword(::grpc::ClientContext* context, const ::sonet::user::ChangePasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::ChangePasswordResponse>>(PrepareAsyncChangePasswordRaw(context, request, cq));
    }
    ::grpc::Status ResetPassword(::grpc::ClientContext* context, const ::sonet::user::ResetPasswordRequest& request, ::sonet::user::ResetPasswordResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::ResetPasswordResponse>> AsyncResetPassword(::grpc::ClientContext* context, const ::sonet::user::ResetPasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::ResetPasswordResponse>>(AsyncResetPasswordRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::ResetPasswordResponse>> PrepareAsyncResetPassword(::grpc::ClientContext* context, const ::sonet::user::ResetPasswordRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::ResetPasswordResponse>>(PrepareAsyncResetPasswordRaw(context, request, cq));
    }
    ::grpc::Status ConfirmPasswordReset(::grpc::ClientContext* context, const ::sonet::user::ConfirmPasswordResetRequest& request, ::sonet::user::ConfirmPasswordResetResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::ConfirmPasswordResetResponse>> AsyncConfirmPasswordReset(::grpc::ClientContext* context, const ::sonet::user::ConfirmPasswordResetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::ConfirmPasswordResetResponse>>(AsyncConfirmPasswordResetRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::ConfirmPasswordResetResponse>> PrepareAsyncConfirmPasswordReset(::grpc::ClientContext* context, const ::sonet::user::ConfirmPasswordResetRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::ConfirmPasswordResetResponse>>(PrepareAsyncConfirmPasswordResetRaw(context, request, cq));
    }
    ::grpc::Status VerifyEmail(::grpc::ClientContext* context, const ::sonet::user::VerifyEmailRequest& request, ::sonet::user::VerifyEmailResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::VerifyEmailResponse>> AsyncVerifyEmail(::grpc::ClientContext* context, const ::sonet::user::VerifyEmailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::VerifyEmailResponse>>(AsyncVerifyEmailRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::VerifyEmailResponse>> PrepareAsyncVerifyEmail(::grpc::ClientContext* context, const ::sonet::user::VerifyEmailRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::VerifyEmailResponse>>(PrepareAsyncVerifyEmailRaw(context, request, cq));
    }
    ::grpc::Status ResendVerification(::grpc::ClientContext* context, const ::sonet::user::ResendVerificationRequest& request, ::sonet::user::ResendVerificationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::ResendVerificationResponse>> AsyncResendVerification(::grpc::ClientContext* context, const ::sonet::user::ResendVerificationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::ResendVerificationResponse>>(AsyncResendVerificationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::ResendVerificationResponse>> PrepareAsyncResendVerification(::grpc::ClientContext* context, const ::sonet::user::ResendVerificationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::ResendVerificationResponse>>(PrepareAsyncResendVerificationRaw(context, request, cq));
    }
    ::grpc::Status SetupTwoFactor(::grpc::ClientContext* context, const ::sonet::user::SetupTwoFactorRequest& request, ::sonet::user::SetupTwoFactorResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::SetupTwoFactorResponse>> AsyncSetupTwoFactor(::grpc::ClientContext* context, const ::sonet::user::SetupTwoFactorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::SetupTwoFactorResponse>>(AsyncSetupTwoFactorRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::SetupTwoFactorResponse>> PrepareAsyncSetupTwoFactor(::grpc::ClientContext* context, const ::sonet::user::SetupTwoFactorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::SetupTwoFactorResponse>>(PrepareAsyncSetupTwoFactorRaw(context, request, cq));
    }
    ::grpc::Status VerifyTwoFactor(::grpc::ClientContext* context, const ::sonet::user::VerifyTwoFactorRequest& request, ::sonet::user::VerifyTwoFactorResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::VerifyTwoFactorResponse>> AsyncVerifyTwoFactor(::grpc::ClientContext* context, const ::sonet::user::VerifyTwoFactorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::VerifyTwoFactorResponse>>(AsyncVerifyTwoFactorRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::VerifyTwoFactorResponse>> PrepareAsyncVerifyTwoFactor(::grpc::ClientContext* context, const ::sonet::user::VerifyTwoFactorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::VerifyTwoFactorResponse>>(PrepareAsyncVerifyTwoFactorRaw(context, request, cq));
    }
    ::grpc::Status DisableTwoFactor(::grpc::ClientContext* context, const ::sonet::user::DisableTwoFactorRequest& request, ::sonet::user::DisableTwoFactorResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::DisableTwoFactorResponse>> AsyncDisableTwoFactor(::grpc::ClientContext* context, const ::sonet::user::DisableTwoFactorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::DisableTwoFactorResponse>>(AsyncDisableTwoFactorRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::DisableTwoFactorResponse>> PrepareAsyncDisableTwoFactor(::grpc::ClientContext* context, const ::sonet::user::DisableTwoFactorRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::DisableTwoFactorResponse>>(PrepareAsyncDisableTwoFactorRaw(context, request, cq));
    }
    ::grpc::Status GetActiveSessions(::grpc::ClientContext* context, const ::sonet::user::GetActiveSessionsRequest& request, ::sonet::user::GetActiveSessionsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::GetActiveSessionsResponse>> AsyncGetActiveSessions(::grpc::ClientContext* context, const ::sonet::user::GetActiveSessionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::GetActiveSessionsResponse>>(AsyncGetActiveSessionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::GetActiveSessionsResponse>> PrepareAsyncGetActiveSessions(::grpc::ClientContext* context, const ::sonet::user::GetActiveSessionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::GetActiveSessionsResponse>>(PrepareAsyncGetActiveSessionsRaw(context, request, cq));
    }
    ::grpc::Status TerminateSession(::grpc::ClientContext* context, const ::sonet::user::TerminateSessionRequest& request, ::sonet::user::TerminateSessionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::TerminateSessionResponse>> AsyncTerminateSession(::grpc::ClientContext* context, const ::sonet::user::TerminateSessionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::TerminateSessionResponse>>(AsyncTerminateSessionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::TerminateSessionResponse>> PrepareAsyncTerminateSession(::grpc::ClientContext* context, const ::sonet::user::TerminateSessionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::TerminateSessionResponse>>(PrepareAsyncTerminateSessionRaw(context, request, cq));
    }
    ::grpc::Status GetUserProfile(::grpc::ClientContext* context, const ::sonet::user::GetUserProfileRequest& request, ::sonet::user::GetUserProfileResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::GetUserProfileResponse>> AsyncGetUserProfile(::grpc::ClientContext* context, const ::sonet::user::GetUserProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::GetUserProfileResponse>>(AsyncGetUserProfileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::GetUserProfileResponse>> PrepareAsyncGetUserProfile(::grpc::ClientContext* context, const ::sonet::user::GetUserProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::GetUserProfileResponse>>(PrepareAsyncGetUserProfileRaw(context, request, cq));
    }
    ::grpc::Status UpdateUserProfile(::grpc::ClientContext* context, const ::sonet::user::UpdateUserProfileRequest& request, ::sonet::user::UpdateUserProfileResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::UpdateUserProfileResponse>> AsyncUpdateUserProfile(::grpc::ClientContext* context, const ::sonet::user::UpdateUserProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::UpdateUserProfileResponse>>(AsyncUpdateUserProfileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::UpdateUserProfileResponse>> PrepareAsyncUpdateUserProfile(::grpc::ClientContext* context, const ::sonet::user::UpdateUserProfileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::user::UpdateUserProfileResponse>>(PrepareAsyncUpdateUserProfileRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void RegisterUser(::grpc::ClientContext* context, const ::sonet::user::RegisterUserRequest* request, ::sonet::user::RegisterUserResponse* response, std::function<void(::grpc::Status)>) override;
      void RegisterUser(::grpc::ClientContext* context, const ::sonet::user::RegisterUserRequest* request, ::sonet::user::RegisterUserResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void LoginUser(::grpc::ClientContext* context, const ::sonet::user::LoginUserRequest* request, ::sonet::user::LoginUserResponse* response, std::function<void(::grpc::Status)>) override;
      void LoginUser(::grpc::ClientContext* context, const ::sonet::user::LoginUserRequest* request, ::sonet::user::LoginUserResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void LogoutUser(::grpc::ClientContext* context, const ::sonet::user::LogoutRequest* request, ::sonet::user::LogoutResponse* response, std::function<void(::grpc::Status)>) override;
      void LogoutUser(::grpc::ClientContext* context, const ::sonet::user::LogoutRequest* request, ::sonet::user::LogoutResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void VerifyToken(::grpc::ClientContext* context, const ::sonet::user::VerifyTokenRequest* request, ::sonet::user::VerifyTokenResponse* response, std::function<void(::grpc::Status)>) override;
      void VerifyToken(::grpc::ClientContext* context, const ::sonet::user::VerifyTokenRequest* request, ::sonet::user::VerifyTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RefreshToken(::grpc::ClientContext* context, const ::sonet::user::RefreshTokenRequest* request, ::sonet::user::RefreshTokenResponse* response, std::function<void(::grpc::Status)>) override;
      void RefreshToken(::grpc::ClientContext* context, const ::sonet::user::RefreshTokenRequest* request, ::sonet::user::RefreshTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ChangePassword(::grpc::ClientContext* context, const ::sonet::user::ChangePasswordRequest* request, ::sonet::user::ChangePasswordResponse* response, std::function<void(::grpc::Status)>) override;
      void ChangePassword(::grpc::ClientContext* context, const ::sonet::user::ChangePasswordRequest* request, ::sonet::user::ChangePasswordResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ResetPassword(::grpc::ClientContext* context, const ::sonet::user::ResetPasswordRequest* request, ::sonet::user::ResetPasswordResponse* response, std::function<void(::grpc::Status)>) override;
      void ResetPassword(::grpc::ClientContext* context, const ::sonet::user::ResetPasswordRequest* request, ::sonet::user::ResetPasswordResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ConfirmPasswordReset(::grpc::ClientContext* context, const ::sonet::user::ConfirmPasswordResetRequest* request, ::sonet::user::ConfirmPasswordResetResponse* response, std::function<void(::grpc::Status)>) override;
      void ConfirmPasswordReset(::grpc::ClientContext* context, const ::sonet::user::ConfirmPasswordResetRequest* request, ::sonet::user::ConfirmPasswordResetResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void VerifyEmail(::grpc::ClientContext* context, const ::sonet::user::VerifyEmailRequest* request, ::sonet::user::VerifyEmailResponse* response, std::function<void(::grpc::Status)>) override;
      void VerifyEmail(::grpc::ClientContext* context, const ::sonet::user::VerifyEmailRequest* request, ::sonet::user::VerifyEmailResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ResendVerification(::grpc::ClientContext* context, const ::sonet::user::ResendVerificationRequest* request, ::sonet::user::ResendVerificationResponse* response, std::function<void(::grpc::Status)>) override;
      void ResendVerification(::grpc::ClientContext* context, const ::sonet::user::ResendVerificationRequest* request, ::sonet::user::ResendVerificationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetupTwoFactor(::grpc::ClientContext* context, const ::sonet::user::SetupTwoFactorRequest* request, ::sonet::user::SetupTwoFactorResponse* response, std::function<void(::grpc::Status)>) override;
      void SetupTwoFactor(::grpc::ClientContext* context, const ::sonet::user::SetupTwoFactorRequest* request, ::sonet::user::SetupTwoFactorResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void VerifyTwoFactor(::grpc::ClientContext* context, const ::sonet::user::VerifyTwoFactorRequest* request, ::sonet::user::VerifyTwoFactorResponse* response, std::function<void(::grpc::Status)>) override;
      void VerifyTwoFactor(::grpc::ClientContext* context, const ::sonet::user::VerifyTwoFactorRequest* request, ::sonet::user::VerifyTwoFactorResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DisableTwoFactor(::grpc::ClientContext* context, const ::sonet::user::DisableTwoFactorRequest* request, ::sonet::user::DisableTwoFactorResponse* response, std::function<void(::grpc::Status)>) override;
      void DisableTwoFactor(::grpc::ClientContext* context, const ::sonet::user::DisableTwoFactorRequest* request, ::sonet::user::DisableTwoFactorResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetActiveSessions(::grpc::ClientContext* context, const ::sonet::user::GetActiveSessionsRequest* request, ::sonet::user::GetActiveSessionsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetActiveSessions(::grpc::ClientContext* context, const ::sonet::user::GetActiveSessionsRequest* request, ::sonet::user::GetActiveSessionsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void TerminateSession(::grpc::ClientContext* context, const ::sonet::user::TerminateSessionRequest* request, ::sonet::user::TerminateSessionResponse* response, std::function<void(::grpc::Status)>) override;
      void TerminateSession(::grpc::ClientContext* context, const ::sonet::user::TerminateSessionRequest* request, ::sonet::user::TerminateSessionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetUserProfile(::grpc::ClientContext* context, const ::sonet::user::GetUserProfileRequest* request, ::sonet::user::GetUserProfileResponse* response, std::function<void(::grpc::Status)>) override;
      void GetUserProfile(::grpc::ClientContext* context, const ::sonet::user::GetUserProfileRequest* request, ::sonet::user::GetUserProfileResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateUserProfile(::grpc::ClientContext* context, const ::sonet::user::UpdateUserProfileRequest* request, ::sonet::user::UpdateUserProfileResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateUserProfile(::grpc::ClientContext* context, const ::sonet::user::UpdateUserProfileRequest* request, ::sonet::user::UpdateUserProfileResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::sonet::user::RegisterUserResponse>* AsyncRegisterUserRaw(::grpc::ClientContext* context, const ::sonet::user::RegisterUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::RegisterUserResponse>* PrepareAsyncRegisterUserRaw(::grpc::ClientContext* context, const ::sonet::user::RegisterUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::LoginUserResponse>* AsyncLoginUserRaw(::grpc::ClientContext* context, const ::sonet::user::LoginUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::LoginUserResponse>* PrepareAsyncLoginUserRaw(::grpc::ClientContext* context, const ::sonet::user::LoginUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::LogoutResponse>* AsyncLogoutUserRaw(::grpc::ClientContext* context, const ::sonet::user::LogoutRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::LogoutResponse>* PrepareAsyncLogoutUserRaw(::grpc::ClientContext* context, const ::sonet::user::LogoutRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::VerifyTokenResponse>* AsyncVerifyTokenRaw(::grpc::ClientContext* context, const ::sonet::user::VerifyTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::VerifyTokenResponse>* PrepareAsyncVerifyTokenRaw(::grpc::ClientContext* context, const ::sonet::user::VerifyTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::RefreshTokenResponse>* AsyncRefreshTokenRaw(::grpc::ClientContext* context, const ::sonet::user::RefreshTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::RefreshTokenResponse>* PrepareAsyncRefreshTokenRaw(::grpc::ClientContext* context, const ::sonet::user::RefreshTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::ChangePasswordResponse>* AsyncChangePasswordRaw(::grpc::ClientContext* context, const ::sonet::user::ChangePasswordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::ChangePasswordResponse>* PrepareAsyncChangePasswordRaw(::grpc::ClientContext* context, const ::sonet::user::ChangePasswordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::ResetPasswordResponse>* AsyncResetPasswordRaw(::grpc::ClientContext* context, const ::sonet::user::ResetPasswordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::ResetPasswordResponse>* PrepareAsyncResetPasswordRaw(::grpc::ClientContext* context, const ::sonet::user::ResetPasswordRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::ConfirmPasswordResetResponse>* AsyncConfirmPasswordResetRaw(::grpc::ClientContext* context, const ::sonet::user::ConfirmPasswordResetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::ConfirmPasswordResetResponse>* PrepareAsyncConfirmPasswordResetRaw(::grpc::ClientContext* context, const ::sonet::user::ConfirmPasswordResetRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::VerifyEmailResponse>* AsyncVerifyEmailRaw(::grpc::ClientContext* context, const ::sonet::user::VerifyEmailRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::VerifyEmailResponse>* PrepareAsyncVerifyEmailRaw(::grpc::ClientContext* context, const ::sonet::user::VerifyEmailRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::ResendVerificationResponse>* AsyncResendVerificationRaw(::grpc::ClientContext* context, const ::sonet::user::ResendVerificationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::ResendVerificationResponse>* PrepareAsyncResendVerificationRaw(::grpc::ClientContext* context, const ::sonet::user::ResendVerificationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::SetupTwoFactorResponse>* AsyncSetupTwoFactorRaw(::grpc::ClientContext* context, const ::sonet::user::SetupTwoFactorRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::SetupTwoFactorResponse>* PrepareAsyncSetupTwoFactorRaw(::grpc::ClientContext* context, const ::sonet::user::SetupTwoFactorRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::VerifyTwoFactorResponse>* AsyncVerifyTwoFactorRaw(::grpc::ClientContext* context, const ::sonet::user::VerifyTwoFactorRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::VerifyTwoFactorResponse>* PrepareAsyncVerifyTwoFactorRaw(::grpc::ClientContext* context, const ::sonet::user::VerifyTwoFactorRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::DisableTwoFactorResponse>* AsyncDisableTwoFactorRaw(::grpc::ClientContext* context, const ::sonet::user::DisableTwoFactorRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::DisableTwoFactorResponse>* PrepareAsyncDisableTwoFactorRaw(::grpc::ClientContext* context, const ::sonet::user::DisableTwoFactorRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::GetActiveSessionsResponse>* AsyncGetActiveSessionsRaw(::grpc::ClientContext* context, const ::sonet::user::GetActiveSessionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::GetActiveSessionsResponse>* PrepareAsyncGetActiveSessionsRaw(::grpc::ClientContext* context, const ::sonet::user::GetActiveSessionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::TerminateSessionResponse>* AsyncTerminateSessionRaw(::grpc::ClientContext* context, const ::sonet::user::TerminateSessionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::TerminateSessionResponse>* PrepareAsyncTerminateSessionRaw(::grpc::ClientContext* context, const ::sonet::user::TerminateSessionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::GetUserProfileResponse>* AsyncGetUserProfileRaw(::grpc::ClientContext* context, const ::sonet::user::GetUserProfileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::GetUserProfileResponse>* PrepareAsyncGetUserProfileRaw(::grpc::ClientContext* context, const ::sonet::user::GetUserProfileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::UpdateUserProfileResponse>* AsyncUpdateUserProfileRaw(::grpc::ClientContext* context, const ::sonet::user::UpdateUserProfileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::user::UpdateUserProfileResponse>* PrepareAsyncUpdateUserProfileRaw(::grpc::ClientContext* context, const ::sonet::user::UpdateUserProfileRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_RegisterUser_;
    const ::grpc::internal::RpcMethod rpcmethod_LoginUser_;
    const ::grpc::internal::RpcMethod rpcmethod_LogoutUser_;
    const ::grpc::internal::RpcMethod rpcmethod_VerifyToken_;
    const ::grpc::internal::RpcMethod rpcmethod_RefreshToken_;
    const ::grpc::internal::RpcMethod rpcmethod_ChangePassword_;
    const ::grpc::internal::RpcMethod rpcmethod_ResetPassword_;
    const ::grpc::internal::RpcMethod rpcmethod_ConfirmPasswordReset_;
    const ::grpc::internal::RpcMethod rpcmethod_VerifyEmail_;
    const ::grpc::internal::RpcMethod rpcmethod_ResendVerification_;
    const ::grpc::internal::RpcMethod rpcmethod_SetupTwoFactor_;
    const ::grpc::internal::RpcMethod rpcmethod_VerifyTwoFactor_;
    const ::grpc::internal::RpcMethod rpcmethod_DisableTwoFactor_;
    const ::grpc::internal::RpcMethod rpcmethod_GetActiveSessions_;
    const ::grpc::internal::RpcMethod rpcmethod_TerminateSession_;
    const ::grpc::internal::RpcMethod rpcmethod_GetUserProfile_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateUserProfile_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Authentication operations
    virtual ::grpc::Status RegisterUser(::grpc::ServerContext* context, const ::sonet::user::RegisterUserRequest* request, ::sonet::user::RegisterUserResponse* response);
    virtual ::grpc::Status LoginUser(::grpc::ServerContext* context, const ::sonet::user::LoginUserRequest* request, ::sonet::user::LoginUserResponse* response);
    virtual ::grpc::Status LogoutUser(::grpc::ServerContext* context, const ::sonet::user::LogoutRequest* request, ::sonet::user::LogoutResponse* response);
    virtual ::grpc::Status VerifyToken(::grpc::ServerContext* context, const ::sonet::user::VerifyTokenRequest* request, ::sonet::user::VerifyTokenResponse* response);
    virtual ::grpc::Status RefreshToken(::grpc::ServerContext* context, const ::sonet::user::RefreshTokenRequest* request, ::sonet::user::RefreshTokenResponse* response);
    // Password management
    virtual ::grpc::Status ChangePassword(::grpc::ServerContext* context, const ::sonet::user::ChangePasswordRequest* request, ::sonet::user::ChangePasswordResponse* response);
    virtual ::grpc::Status ResetPassword(::grpc::ServerContext* context, const ::sonet::user::ResetPasswordRequest* request, ::sonet::user::ResetPasswordResponse* response);
    virtual ::grpc::Status ConfirmPasswordReset(::grpc::ServerContext* context, const ::sonet::user::ConfirmPasswordResetRequest* request, ::sonet::user::ConfirmPasswordResetResponse* response);
    // Email verification
    virtual ::grpc::Status VerifyEmail(::grpc::ServerContext* context, const ::sonet::user::VerifyEmailRequest* request, ::sonet::user::VerifyEmailResponse* response);
    virtual ::grpc::Status ResendVerification(::grpc::ServerContext* context, const ::sonet::user::ResendVerificationRequest* request, ::sonet::user::ResendVerificationResponse* response);
    // Two-factor authentication
    virtual ::grpc::Status SetupTwoFactor(::grpc::ServerContext* context, const ::sonet::user::SetupTwoFactorRequest* request, ::sonet::user::SetupTwoFactorResponse* response);
    virtual ::grpc::Status VerifyTwoFactor(::grpc::ServerContext* context, const ::sonet::user::VerifyTwoFactorRequest* request, ::sonet::user::VerifyTwoFactorResponse* response);
    virtual ::grpc::Status DisableTwoFactor(::grpc::ServerContext* context, const ::sonet::user::DisableTwoFactorRequest* request, ::sonet::user::DisableTwoFactorResponse* response);
    // Session management
    virtual ::grpc::Status GetActiveSessions(::grpc::ServerContext* context, const ::sonet::user::GetActiveSessionsRequest* request, ::sonet::user::GetActiveSessionsResponse* response);
    virtual ::grpc::Status TerminateSession(::grpc::ServerContext* context, const ::sonet::user::TerminateSessionRequest* request, ::sonet::user::TerminateSessionResponse* response);
    // Profile management
    virtual ::grpc::Status GetUserProfile(::grpc::ServerContext* context, const ::sonet::user::GetUserProfileRequest* request, ::sonet::user::GetUserProfileResponse* response);
    virtual ::grpc::Status UpdateUserProfile(::grpc::ServerContext* context, const ::sonet::user::UpdateUserProfileRequest* request, ::sonet::user::UpdateUserProfileResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_RegisterUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RegisterUser() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_RegisterUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterUser(::grpc::ServerContext* /*context*/, const ::sonet::user::RegisterUserRequest* /*request*/, ::sonet::user::RegisterUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRegisterUser(::grpc::ServerContext* context, ::sonet::user::RegisterUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::user::RegisterUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_LoginUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_LoginUser() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_LoginUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoginUser(::grpc::ServerContext* /*context*/, const ::sonet::user::LoginUserRequest* /*request*/, ::sonet::user::LoginUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLoginUser(::grpc::ServerContext* context, ::sonet::user::LoginUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::user::LoginUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_LogoutUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_LogoutUser() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_LogoutUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LogoutUser(::grpc::ServerContext* /*context*/, const ::sonet::user::LogoutRequest* /*request*/, ::sonet::user::LogoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLogoutUser(::grpc::ServerContext* context, ::sonet::user::LogoutRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::user::LogoutResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_VerifyToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_VerifyToken() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_VerifyToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VerifyToken(::grpc::ServerContext* /*context*/, const ::sonet::user::VerifyTokenRequest* /*request*/, ::sonet::user::VerifyTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestVerifyToken(::grpc::ServerContext* context, ::sonet::user::VerifyTokenRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::user::VerifyTokenResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RefreshToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RefreshToken() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_RefreshToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RefreshToken(::grpc::ServerContext* /*context*/, const ::sonet::user::RefreshTokenRequest* /*request*/, ::sonet::user::RefreshTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRefreshToken(::grpc::ServerContext* context, ::sonet::user::RefreshTokenRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::user::RefreshTokenResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ChangePassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ChangePassword() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_ChangePassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangePassword(::grpc::ServerContext* /*context*/, const ::sonet::user::ChangePasswordRequest* /*request*/, ::sonet::user::ChangePasswordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestChangePassword(::grpc::ServerContext* context, ::sonet::user::ChangePasswordRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::user::ChangePasswordResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ResetPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ResetPassword() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_ResetPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetPassword(::grpc::ServerContext* /*context*/, const ::sonet::user::ResetPasswordRequest* /*request*/, ::sonet::user::ResetPasswordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestResetPassword(::grpc::ServerContext* context, ::sonet::user::ResetPasswordRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::user::ResetPasswordResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ConfirmPasswordReset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ConfirmPasswordReset() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_ConfirmPasswordReset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConfirmPasswordReset(::grpc::ServerContext* /*context*/, const ::sonet::user::ConfirmPasswordResetRequest* /*request*/, ::sonet::user::ConfirmPasswordResetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestConfirmPasswordReset(::grpc::ServerContext* context, ::sonet::user::ConfirmPasswordResetRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::user::ConfirmPasswordResetResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_VerifyEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_VerifyEmail() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_VerifyEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VerifyEmail(::grpc::ServerContext* /*context*/, const ::sonet::user::VerifyEmailRequest* /*request*/, ::sonet::user::VerifyEmailResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestVerifyEmail(::grpc::ServerContext* context, ::sonet::user::VerifyEmailRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::user::VerifyEmailResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ResendVerification : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ResendVerification() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_ResendVerification() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResendVerification(::grpc::ServerContext* /*context*/, const ::sonet::user::ResendVerificationRequest* /*request*/, ::sonet::user::ResendVerificationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestResendVerification(::grpc::ServerContext* context, ::sonet::user::ResendVerificationRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::user::ResendVerificationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetupTwoFactor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetupTwoFactor() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_SetupTwoFactor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetupTwoFactor(::grpc::ServerContext* /*context*/, const ::sonet::user::SetupTwoFactorRequest* /*request*/, ::sonet::user::SetupTwoFactorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetupTwoFactor(::grpc::ServerContext* context, ::sonet::user::SetupTwoFactorRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::user::SetupTwoFactorResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_VerifyTwoFactor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_VerifyTwoFactor() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_VerifyTwoFactor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VerifyTwoFactor(::grpc::ServerContext* /*context*/, const ::sonet::user::VerifyTwoFactorRequest* /*request*/, ::sonet::user::VerifyTwoFactorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestVerifyTwoFactor(::grpc::ServerContext* context, ::sonet::user::VerifyTwoFactorRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::user::VerifyTwoFactorResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DisableTwoFactor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DisableTwoFactor() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_DisableTwoFactor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DisableTwoFactor(::grpc::ServerContext* /*context*/, const ::sonet::user::DisableTwoFactorRequest* /*request*/, ::sonet::user::DisableTwoFactorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDisableTwoFactor(::grpc::ServerContext* context, ::sonet::user::DisableTwoFactorRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::user::DisableTwoFactorResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetActiveSessions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetActiveSessions() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_GetActiveSessions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActiveSessions(::grpc::ServerContext* /*context*/, const ::sonet::user::GetActiveSessionsRequest* /*request*/, ::sonet::user::GetActiveSessionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetActiveSessions(::grpc::ServerContext* context, ::sonet::user::GetActiveSessionsRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::user::GetActiveSessionsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_TerminateSession : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_TerminateSession() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_TerminateSession() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TerminateSession(::grpc::ServerContext* /*context*/, const ::sonet::user::TerminateSessionRequest* /*request*/, ::sonet::user::TerminateSessionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTerminateSession(::grpc::ServerContext* context, ::sonet::user::TerminateSessionRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::user::TerminateSessionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetUserProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetUserProfile() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_GetUserProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserProfile(::grpc::ServerContext* /*context*/, const ::sonet::user::GetUserProfileRequest* /*request*/, ::sonet::user::GetUserProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUserProfile(::grpc::ServerContext* context, ::sonet::user::GetUserProfileRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::user::GetUserProfileResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateUserProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateUserProfile() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_UpdateUserProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUserProfile(::grpc::ServerContext* /*context*/, const ::sonet::user::UpdateUserProfileRequest* /*request*/, ::sonet::user::UpdateUserProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateUserProfile(::grpc::ServerContext* context, ::sonet::user::UpdateUserProfileRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::user::UpdateUserProfileResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_RegisterUser<WithAsyncMethod_LoginUser<WithAsyncMethod_LogoutUser<WithAsyncMethod_VerifyToken<WithAsyncMethod_RefreshToken<WithAsyncMethod_ChangePassword<WithAsyncMethod_ResetPassword<WithAsyncMethod_ConfirmPasswordReset<WithAsyncMethod_VerifyEmail<WithAsyncMethod_ResendVerification<WithAsyncMethod_SetupTwoFactor<WithAsyncMethod_VerifyTwoFactor<WithAsyncMethod_DisableTwoFactor<WithAsyncMethod_GetActiveSessions<WithAsyncMethod_TerminateSession<WithAsyncMethod_GetUserProfile<WithAsyncMethod_UpdateUserProfile<Service > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_RegisterUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RegisterUser() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::user::RegisterUserRequest, ::sonet::user::RegisterUserResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::user::RegisterUserRequest* request, ::sonet::user::RegisterUserResponse* response) { return this->RegisterUser(context, request, response); }));}
    void SetMessageAllocatorFor_RegisterUser(
        ::grpc::MessageAllocator< ::sonet::user::RegisterUserRequest, ::sonet::user::RegisterUserResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::user::RegisterUserRequest, ::sonet::user::RegisterUserResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RegisterUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterUser(::grpc::ServerContext* /*context*/, const ::sonet::user::RegisterUserRequest* /*request*/, ::sonet::user::RegisterUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RegisterUser(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::user::RegisterUserRequest* /*request*/, ::sonet::user::RegisterUserResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_LoginUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_LoginUser() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::user::LoginUserRequest, ::sonet::user::LoginUserResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::user::LoginUserRequest* request, ::sonet::user::LoginUserResponse* response) { return this->LoginUser(context, request, response); }));}
    void SetMessageAllocatorFor_LoginUser(
        ::grpc::MessageAllocator< ::sonet::user::LoginUserRequest, ::sonet::user::LoginUserResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::user::LoginUserRequest, ::sonet::user::LoginUserResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_LoginUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoginUser(::grpc::ServerContext* /*context*/, const ::sonet::user::LoginUserRequest* /*request*/, ::sonet::user::LoginUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* LoginUser(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::user::LoginUserRequest* /*request*/, ::sonet::user::LoginUserResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_LogoutUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_LogoutUser() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::user::LogoutRequest, ::sonet::user::LogoutResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::user::LogoutRequest* request, ::sonet::user::LogoutResponse* response) { return this->LogoutUser(context, request, response); }));}
    void SetMessageAllocatorFor_LogoutUser(
        ::grpc::MessageAllocator< ::sonet::user::LogoutRequest, ::sonet::user::LogoutResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::user::LogoutRequest, ::sonet::user::LogoutResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_LogoutUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LogoutUser(::grpc::ServerContext* /*context*/, const ::sonet::user::LogoutRequest* /*request*/, ::sonet::user::LogoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* LogoutUser(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::user::LogoutRequest* /*request*/, ::sonet::user::LogoutResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_VerifyToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_VerifyToken() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::user::VerifyTokenRequest, ::sonet::user::VerifyTokenResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::user::VerifyTokenRequest* request, ::sonet::user::VerifyTokenResponse* response) { return this->VerifyToken(context, request, response); }));}
    void SetMessageAllocatorFor_VerifyToken(
        ::grpc::MessageAllocator< ::sonet::user::VerifyTokenRequest, ::sonet::user::VerifyTokenResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::user::VerifyTokenRequest, ::sonet::user::VerifyTokenResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_VerifyToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VerifyToken(::grpc::ServerContext* /*context*/, const ::sonet::user::VerifyTokenRequest* /*request*/, ::sonet::user::VerifyTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* VerifyToken(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::user::VerifyTokenRequest* /*request*/, ::sonet::user::VerifyTokenResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RefreshToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RefreshToken() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::user::RefreshTokenRequest, ::sonet::user::RefreshTokenResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::user::RefreshTokenRequest* request, ::sonet::user::RefreshTokenResponse* response) { return this->RefreshToken(context, request, response); }));}
    void SetMessageAllocatorFor_RefreshToken(
        ::grpc::MessageAllocator< ::sonet::user::RefreshTokenRequest, ::sonet::user::RefreshTokenResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::user::RefreshTokenRequest, ::sonet::user::RefreshTokenResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RefreshToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RefreshToken(::grpc::ServerContext* /*context*/, const ::sonet::user::RefreshTokenRequest* /*request*/, ::sonet::user::RefreshTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RefreshToken(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::user::RefreshTokenRequest* /*request*/, ::sonet::user::RefreshTokenResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ChangePassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ChangePassword() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::user::ChangePasswordRequest, ::sonet::user::ChangePasswordResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::user::ChangePasswordRequest* request, ::sonet::user::ChangePasswordResponse* response) { return this->ChangePassword(context, request, response); }));}
    void SetMessageAllocatorFor_ChangePassword(
        ::grpc::MessageAllocator< ::sonet::user::ChangePasswordRequest, ::sonet::user::ChangePasswordResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::user::ChangePasswordRequest, ::sonet::user::ChangePasswordResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ChangePassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangePassword(::grpc::ServerContext* /*context*/, const ::sonet::user::ChangePasswordRequest* /*request*/, ::sonet::user::ChangePasswordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ChangePassword(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::user::ChangePasswordRequest* /*request*/, ::sonet::user::ChangePasswordResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ResetPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ResetPassword() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::user::ResetPasswordRequest, ::sonet::user::ResetPasswordResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::user::ResetPasswordRequest* request, ::sonet::user::ResetPasswordResponse* response) { return this->ResetPassword(context, request, response); }));}
    void SetMessageAllocatorFor_ResetPassword(
        ::grpc::MessageAllocator< ::sonet::user::ResetPasswordRequest, ::sonet::user::ResetPasswordResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::user::ResetPasswordRequest, ::sonet::user::ResetPasswordResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ResetPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetPassword(::grpc::ServerContext* /*context*/, const ::sonet::user::ResetPasswordRequest* /*request*/, ::sonet::user::ResetPasswordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ResetPassword(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::user::ResetPasswordRequest* /*request*/, ::sonet::user::ResetPasswordResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ConfirmPasswordReset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ConfirmPasswordReset() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::user::ConfirmPasswordResetRequest, ::sonet::user::ConfirmPasswordResetResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::user::ConfirmPasswordResetRequest* request, ::sonet::user::ConfirmPasswordResetResponse* response) { return this->ConfirmPasswordReset(context, request, response); }));}
    void SetMessageAllocatorFor_ConfirmPasswordReset(
        ::grpc::MessageAllocator< ::sonet::user::ConfirmPasswordResetRequest, ::sonet::user::ConfirmPasswordResetResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::user::ConfirmPasswordResetRequest, ::sonet::user::ConfirmPasswordResetResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ConfirmPasswordReset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConfirmPasswordReset(::grpc::ServerContext* /*context*/, const ::sonet::user::ConfirmPasswordResetRequest* /*request*/, ::sonet::user::ConfirmPasswordResetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ConfirmPasswordReset(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::user::ConfirmPasswordResetRequest* /*request*/, ::sonet::user::ConfirmPasswordResetResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_VerifyEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_VerifyEmail() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::user::VerifyEmailRequest, ::sonet::user::VerifyEmailResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::user::VerifyEmailRequest* request, ::sonet::user::VerifyEmailResponse* response) { return this->VerifyEmail(context, request, response); }));}
    void SetMessageAllocatorFor_VerifyEmail(
        ::grpc::MessageAllocator< ::sonet::user::VerifyEmailRequest, ::sonet::user::VerifyEmailResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::user::VerifyEmailRequest, ::sonet::user::VerifyEmailResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_VerifyEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VerifyEmail(::grpc::ServerContext* /*context*/, const ::sonet::user::VerifyEmailRequest* /*request*/, ::sonet::user::VerifyEmailResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* VerifyEmail(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::user::VerifyEmailRequest* /*request*/, ::sonet::user::VerifyEmailResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ResendVerification : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ResendVerification() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::user::ResendVerificationRequest, ::sonet::user::ResendVerificationResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::user::ResendVerificationRequest* request, ::sonet::user::ResendVerificationResponse* response) { return this->ResendVerification(context, request, response); }));}
    void SetMessageAllocatorFor_ResendVerification(
        ::grpc::MessageAllocator< ::sonet::user::ResendVerificationRequest, ::sonet::user::ResendVerificationResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::user::ResendVerificationRequest, ::sonet::user::ResendVerificationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ResendVerification() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResendVerification(::grpc::ServerContext* /*context*/, const ::sonet::user::ResendVerificationRequest* /*request*/, ::sonet::user::ResendVerificationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ResendVerification(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::user::ResendVerificationRequest* /*request*/, ::sonet::user::ResendVerificationResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetupTwoFactor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetupTwoFactor() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::user::SetupTwoFactorRequest, ::sonet::user::SetupTwoFactorResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::user::SetupTwoFactorRequest* request, ::sonet::user::SetupTwoFactorResponse* response) { return this->SetupTwoFactor(context, request, response); }));}
    void SetMessageAllocatorFor_SetupTwoFactor(
        ::grpc::MessageAllocator< ::sonet::user::SetupTwoFactorRequest, ::sonet::user::SetupTwoFactorResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::user::SetupTwoFactorRequest, ::sonet::user::SetupTwoFactorResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetupTwoFactor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetupTwoFactor(::grpc::ServerContext* /*context*/, const ::sonet::user::SetupTwoFactorRequest* /*request*/, ::sonet::user::SetupTwoFactorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetupTwoFactor(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::user::SetupTwoFactorRequest* /*request*/, ::sonet::user::SetupTwoFactorResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_VerifyTwoFactor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_VerifyTwoFactor() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::user::VerifyTwoFactorRequest, ::sonet::user::VerifyTwoFactorResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::user::VerifyTwoFactorRequest* request, ::sonet::user::VerifyTwoFactorResponse* response) { return this->VerifyTwoFactor(context, request, response); }));}
    void SetMessageAllocatorFor_VerifyTwoFactor(
        ::grpc::MessageAllocator< ::sonet::user::VerifyTwoFactorRequest, ::sonet::user::VerifyTwoFactorResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::user::VerifyTwoFactorRequest, ::sonet::user::VerifyTwoFactorResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_VerifyTwoFactor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VerifyTwoFactor(::grpc::ServerContext* /*context*/, const ::sonet::user::VerifyTwoFactorRequest* /*request*/, ::sonet::user::VerifyTwoFactorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* VerifyTwoFactor(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::user::VerifyTwoFactorRequest* /*request*/, ::sonet::user::VerifyTwoFactorResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DisableTwoFactor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DisableTwoFactor() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::user::DisableTwoFactorRequest, ::sonet::user::DisableTwoFactorResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::user::DisableTwoFactorRequest* request, ::sonet::user::DisableTwoFactorResponse* response) { return this->DisableTwoFactor(context, request, response); }));}
    void SetMessageAllocatorFor_DisableTwoFactor(
        ::grpc::MessageAllocator< ::sonet::user::DisableTwoFactorRequest, ::sonet::user::DisableTwoFactorResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::user::DisableTwoFactorRequest, ::sonet::user::DisableTwoFactorResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DisableTwoFactor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DisableTwoFactor(::grpc::ServerContext* /*context*/, const ::sonet::user::DisableTwoFactorRequest* /*request*/, ::sonet::user::DisableTwoFactorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DisableTwoFactor(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::user::DisableTwoFactorRequest* /*request*/, ::sonet::user::DisableTwoFactorResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetActiveSessions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetActiveSessions() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::user::GetActiveSessionsRequest, ::sonet::user::GetActiveSessionsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::user::GetActiveSessionsRequest* request, ::sonet::user::GetActiveSessionsResponse* response) { return this->GetActiveSessions(context, request, response); }));}
    void SetMessageAllocatorFor_GetActiveSessions(
        ::grpc::MessageAllocator< ::sonet::user::GetActiveSessionsRequest, ::sonet::user::GetActiveSessionsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::user::GetActiveSessionsRequest, ::sonet::user::GetActiveSessionsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetActiveSessions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActiveSessions(::grpc::ServerContext* /*context*/, const ::sonet::user::GetActiveSessionsRequest* /*request*/, ::sonet::user::GetActiveSessionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetActiveSessions(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::user::GetActiveSessionsRequest* /*request*/, ::sonet::user::GetActiveSessionsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_TerminateSession : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_TerminateSession() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::user::TerminateSessionRequest, ::sonet::user::TerminateSessionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::user::TerminateSessionRequest* request, ::sonet::user::TerminateSessionResponse* response) { return this->TerminateSession(context, request, response); }));}
    void SetMessageAllocatorFor_TerminateSession(
        ::grpc::MessageAllocator< ::sonet::user::TerminateSessionRequest, ::sonet::user::TerminateSessionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::user::TerminateSessionRequest, ::sonet::user::TerminateSessionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_TerminateSession() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TerminateSession(::grpc::ServerContext* /*context*/, const ::sonet::user::TerminateSessionRequest* /*request*/, ::sonet::user::TerminateSessionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* TerminateSession(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::user::TerminateSessionRequest* /*request*/, ::sonet::user::TerminateSessionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetUserProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetUserProfile() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::user::GetUserProfileRequest, ::sonet::user::GetUserProfileResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::user::GetUserProfileRequest* request, ::sonet::user::GetUserProfileResponse* response) { return this->GetUserProfile(context, request, response); }));}
    void SetMessageAllocatorFor_GetUserProfile(
        ::grpc::MessageAllocator< ::sonet::user::GetUserProfileRequest, ::sonet::user::GetUserProfileResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::user::GetUserProfileRequest, ::sonet::user::GetUserProfileResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetUserProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserProfile(::grpc::ServerContext* /*context*/, const ::sonet::user::GetUserProfileRequest* /*request*/, ::sonet::user::GetUserProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUserProfile(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::user::GetUserProfileRequest* /*request*/, ::sonet::user::GetUserProfileResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateUserProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateUserProfile() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::user::UpdateUserProfileRequest, ::sonet::user::UpdateUserProfileResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::user::UpdateUserProfileRequest* request, ::sonet::user::UpdateUserProfileResponse* response) { return this->UpdateUserProfile(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateUserProfile(
        ::grpc::MessageAllocator< ::sonet::user::UpdateUserProfileRequest, ::sonet::user::UpdateUserProfileResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::user::UpdateUserProfileRequest, ::sonet::user::UpdateUserProfileResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateUserProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUserProfile(::grpc::ServerContext* /*context*/, const ::sonet::user::UpdateUserProfileRequest* /*request*/, ::sonet::user::UpdateUserProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateUserProfile(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::user::UpdateUserProfileRequest* /*request*/, ::sonet::user::UpdateUserProfileResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_RegisterUser<WithCallbackMethod_LoginUser<WithCallbackMethod_LogoutUser<WithCallbackMethod_VerifyToken<WithCallbackMethod_RefreshToken<WithCallbackMethod_ChangePassword<WithCallbackMethod_ResetPassword<WithCallbackMethod_ConfirmPasswordReset<WithCallbackMethod_VerifyEmail<WithCallbackMethod_ResendVerification<WithCallbackMethod_SetupTwoFactor<WithCallbackMethod_VerifyTwoFactor<WithCallbackMethod_DisableTwoFactor<WithCallbackMethod_GetActiveSessions<WithCallbackMethod_TerminateSession<WithCallbackMethod_GetUserProfile<WithCallbackMethod_UpdateUserProfile<Service > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_RegisterUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RegisterUser() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_RegisterUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterUser(::grpc::ServerContext* /*context*/, const ::sonet::user::RegisterUserRequest* /*request*/, ::sonet::user::RegisterUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_LoginUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_LoginUser() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_LoginUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoginUser(::grpc::ServerContext* /*context*/, const ::sonet::user::LoginUserRequest* /*request*/, ::sonet::user::LoginUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_LogoutUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_LogoutUser() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_LogoutUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LogoutUser(::grpc::ServerContext* /*context*/, const ::sonet::user::LogoutRequest* /*request*/, ::sonet::user::LogoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_VerifyToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_VerifyToken() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_VerifyToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VerifyToken(::grpc::ServerContext* /*context*/, const ::sonet::user::VerifyTokenRequest* /*request*/, ::sonet::user::VerifyTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RefreshToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RefreshToken() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_RefreshToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RefreshToken(::grpc::ServerContext* /*context*/, const ::sonet::user::RefreshTokenRequest* /*request*/, ::sonet::user::RefreshTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ChangePassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ChangePassword() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_ChangePassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangePassword(::grpc::ServerContext* /*context*/, const ::sonet::user::ChangePasswordRequest* /*request*/, ::sonet::user::ChangePasswordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ResetPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ResetPassword() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_ResetPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetPassword(::grpc::ServerContext* /*context*/, const ::sonet::user::ResetPasswordRequest* /*request*/, ::sonet::user::ResetPasswordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ConfirmPasswordReset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ConfirmPasswordReset() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_ConfirmPasswordReset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConfirmPasswordReset(::grpc::ServerContext* /*context*/, const ::sonet::user::ConfirmPasswordResetRequest* /*request*/, ::sonet::user::ConfirmPasswordResetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_VerifyEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_VerifyEmail() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_VerifyEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VerifyEmail(::grpc::ServerContext* /*context*/, const ::sonet::user::VerifyEmailRequest* /*request*/, ::sonet::user::VerifyEmailResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ResendVerification : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ResendVerification() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_ResendVerification() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResendVerification(::grpc::ServerContext* /*context*/, const ::sonet::user::ResendVerificationRequest* /*request*/, ::sonet::user::ResendVerificationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetupTwoFactor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetupTwoFactor() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_SetupTwoFactor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetupTwoFactor(::grpc::ServerContext* /*context*/, const ::sonet::user::SetupTwoFactorRequest* /*request*/, ::sonet::user::SetupTwoFactorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_VerifyTwoFactor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_VerifyTwoFactor() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_VerifyTwoFactor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VerifyTwoFactor(::grpc::ServerContext* /*context*/, const ::sonet::user::VerifyTwoFactorRequest* /*request*/, ::sonet::user::VerifyTwoFactorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DisableTwoFactor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DisableTwoFactor() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_DisableTwoFactor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DisableTwoFactor(::grpc::ServerContext* /*context*/, const ::sonet::user::DisableTwoFactorRequest* /*request*/, ::sonet::user::DisableTwoFactorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetActiveSessions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetActiveSessions() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_GetActiveSessions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActiveSessions(::grpc::ServerContext* /*context*/, const ::sonet::user::GetActiveSessionsRequest* /*request*/, ::sonet::user::GetActiveSessionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_TerminateSession : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_TerminateSession() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_TerminateSession() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TerminateSession(::grpc::ServerContext* /*context*/, const ::sonet::user::TerminateSessionRequest* /*request*/, ::sonet::user::TerminateSessionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetUserProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetUserProfile() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_GetUserProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserProfile(::grpc::ServerContext* /*context*/, const ::sonet::user::GetUserProfileRequest* /*request*/, ::sonet::user::GetUserProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateUserProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateUserProfile() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_UpdateUserProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUserProfile(::grpc::ServerContext* /*context*/, const ::sonet::user::UpdateUserProfileRequest* /*request*/, ::sonet::user::UpdateUserProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_RegisterUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RegisterUser() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_RegisterUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterUser(::grpc::ServerContext* /*context*/, const ::sonet::user::RegisterUserRequest* /*request*/, ::sonet::user::RegisterUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRegisterUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_LoginUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_LoginUser() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_LoginUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoginUser(::grpc::ServerContext* /*context*/, const ::sonet::user::LoginUserRequest* /*request*/, ::sonet::user::LoginUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLoginUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_LogoutUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_LogoutUser() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_LogoutUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LogoutUser(::grpc::ServerContext* /*context*/, const ::sonet::user::LogoutRequest* /*request*/, ::sonet::user::LogoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLogoutUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_VerifyToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_VerifyToken() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_VerifyToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VerifyToken(::grpc::ServerContext* /*context*/, const ::sonet::user::VerifyTokenRequest* /*request*/, ::sonet::user::VerifyTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestVerifyToken(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RefreshToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RefreshToken() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_RefreshToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RefreshToken(::grpc::ServerContext* /*context*/, const ::sonet::user::RefreshTokenRequest* /*request*/, ::sonet::user::RefreshTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRefreshToken(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ChangePassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ChangePassword() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_ChangePassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangePassword(::grpc::ServerContext* /*context*/, const ::sonet::user::ChangePasswordRequest* /*request*/, ::sonet::user::ChangePasswordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestChangePassword(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ResetPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ResetPassword() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_ResetPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetPassword(::grpc::ServerContext* /*context*/, const ::sonet::user::ResetPasswordRequest* /*request*/, ::sonet::user::ResetPasswordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestResetPassword(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ConfirmPasswordReset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ConfirmPasswordReset() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_ConfirmPasswordReset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConfirmPasswordReset(::grpc::ServerContext* /*context*/, const ::sonet::user::ConfirmPasswordResetRequest* /*request*/, ::sonet::user::ConfirmPasswordResetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestConfirmPasswordReset(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_VerifyEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_VerifyEmail() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_VerifyEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VerifyEmail(::grpc::ServerContext* /*context*/, const ::sonet::user::VerifyEmailRequest* /*request*/, ::sonet::user::VerifyEmailResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestVerifyEmail(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ResendVerification : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ResendVerification() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_ResendVerification() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResendVerification(::grpc::ServerContext* /*context*/, const ::sonet::user::ResendVerificationRequest* /*request*/, ::sonet::user::ResendVerificationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestResendVerification(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetupTwoFactor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetupTwoFactor() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_SetupTwoFactor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetupTwoFactor(::grpc::ServerContext* /*context*/, const ::sonet::user::SetupTwoFactorRequest* /*request*/, ::sonet::user::SetupTwoFactorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetupTwoFactor(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_VerifyTwoFactor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_VerifyTwoFactor() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_VerifyTwoFactor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VerifyTwoFactor(::grpc::ServerContext* /*context*/, const ::sonet::user::VerifyTwoFactorRequest* /*request*/, ::sonet::user::VerifyTwoFactorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestVerifyTwoFactor(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DisableTwoFactor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DisableTwoFactor() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_DisableTwoFactor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DisableTwoFactor(::grpc::ServerContext* /*context*/, const ::sonet::user::DisableTwoFactorRequest* /*request*/, ::sonet::user::DisableTwoFactorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDisableTwoFactor(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetActiveSessions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetActiveSessions() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_GetActiveSessions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActiveSessions(::grpc::ServerContext* /*context*/, const ::sonet::user::GetActiveSessionsRequest* /*request*/, ::sonet::user::GetActiveSessionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetActiveSessions(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_TerminateSession : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_TerminateSession() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_TerminateSession() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TerminateSession(::grpc::ServerContext* /*context*/, const ::sonet::user::TerminateSessionRequest* /*request*/, ::sonet::user::TerminateSessionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTerminateSession(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetUserProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetUserProfile() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_GetUserProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserProfile(::grpc::ServerContext* /*context*/, const ::sonet::user::GetUserProfileRequest* /*request*/, ::sonet::user::GetUserProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUserProfile(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateUserProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateUserProfile() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_UpdateUserProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUserProfile(::grpc::ServerContext* /*context*/, const ::sonet::user::UpdateUserProfileRequest* /*request*/, ::sonet::user::UpdateUserProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateUserProfile(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RegisterUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RegisterUser() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RegisterUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_RegisterUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterUser(::grpc::ServerContext* /*context*/, const ::sonet::user::RegisterUserRequest* /*request*/, ::sonet::user::RegisterUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RegisterUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_LoginUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_LoginUser() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->LoginUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_LoginUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoginUser(::grpc::ServerContext* /*context*/, const ::sonet::user::LoginUserRequest* /*request*/, ::sonet::user::LoginUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* LoginUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_LogoutUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_LogoutUser() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->LogoutUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_LogoutUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LogoutUser(::grpc::ServerContext* /*context*/, const ::sonet::user::LogoutRequest* /*request*/, ::sonet::user::LogoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* LogoutUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_VerifyToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_VerifyToken() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->VerifyToken(context, request, response); }));
    }
    ~WithRawCallbackMethod_VerifyToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VerifyToken(::grpc::ServerContext* /*context*/, const ::sonet::user::VerifyTokenRequest* /*request*/, ::sonet::user::VerifyTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* VerifyToken(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RefreshToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RefreshToken() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RefreshToken(context, request, response); }));
    }
    ~WithRawCallbackMethod_RefreshToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RefreshToken(::grpc::ServerContext* /*context*/, const ::sonet::user::RefreshTokenRequest* /*request*/, ::sonet::user::RefreshTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RefreshToken(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ChangePassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ChangePassword() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ChangePassword(context, request, response); }));
    }
    ~WithRawCallbackMethod_ChangePassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangePassword(::grpc::ServerContext* /*context*/, const ::sonet::user::ChangePasswordRequest* /*request*/, ::sonet::user::ChangePasswordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ChangePassword(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ResetPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ResetPassword() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ResetPassword(context, request, response); }));
    }
    ~WithRawCallbackMethod_ResetPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetPassword(::grpc::ServerContext* /*context*/, const ::sonet::user::ResetPasswordRequest* /*request*/, ::sonet::user::ResetPasswordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ResetPassword(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ConfirmPasswordReset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ConfirmPasswordReset() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ConfirmPasswordReset(context, request, response); }));
    }
    ~WithRawCallbackMethod_ConfirmPasswordReset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ConfirmPasswordReset(::grpc::ServerContext* /*context*/, const ::sonet::user::ConfirmPasswordResetRequest* /*request*/, ::sonet::user::ConfirmPasswordResetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ConfirmPasswordReset(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_VerifyEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_VerifyEmail() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->VerifyEmail(context, request, response); }));
    }
    ~WithRawCallbackMethod_VerifyEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VerifyEmail(::grpc::ServerContext* /*context*/, const ::sonet::user::VerifyEmailRequest* /*request*/, ::sonet::user::VerifyEmailResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* VerifyEmail(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ResendVerification : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ResendVerification() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ResendVerification(context, request, response); }));
    }
    ~WithRawCallbackMethod_ResendVerification() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResendVerification(::grpc::ServerContext* /*context*/, const ::sonet::user::ResendVerificationRequest* /*request*/, ::sonet::user::ResendVerificationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ResendVerification(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetupTwoFactor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetupTwoFactor() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetupTwoFactor(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetupTwoFactor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetupTwoFactor(::grpc::ServerContext* /*context*/, const ::sonet::user::SetupTwoFactorRequest* /*request*/, ::sonet::user::SetupTwoFactorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetupTwoFactor(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_VerifyTwoFactor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_VerifyTwoFactor() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->VerifyTwoFactor(context, request, response); }));
    }
    ~WithRawCallbackMethod_VerifyTwoFactor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status VerifyTwoFactor(::grpc::ServerContext* /*context*/, const ::sonet::user::VerifyTwoFactorRequest* /*request*/, ::sonet::user::VerifyTwoFactorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* VerifyTwoFactor(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DisableTwoFactor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DisableTwoFactor() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DisableTwoFactor(context, request, response); }));
    }
    ~WithRawCallbackMethod_DisableTwoFactor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DisableTwoFactor(::grpc::ServerContext* /*context*/, const ::sonet::user::DisableTwoFactorRequest* /*request*/, ::sonet::user::DisableTwoFactorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DisableTwoFactor(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetActiveSessions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetActiveSessions() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetActiveSessions(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetActiveSessions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetActiveSessions(::grpc::ServerContext* /*context*/, const ::sonet::user::GetActiveSessionsRequest* /*request*/, ::sonet::user::GetActiveSessionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetActiveSessions(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_TerminateSession : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_TerminateSession() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->TerminateSession(context, request, response); }));
    }
    ~WithRawCallbackMethod_TerminateSession() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TerminateSession(::grpc::ServerContext* /*context*/, const ::sonet::user::TerminateSessionRequest* /*request*/, ::sonet::user::TerminateSessionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* TerminateSession(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetUserProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetUserProfile() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetUserProfile(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetUserProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserProfile(::grpc::ServerContext* /*context*/, const ::sonet::user::GetUserProfileRequest* /*request*/, ::sonet::user::GetUserProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUserProfile(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateUserProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateUserProfile() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateUserProfile(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateUserProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUserProfile(::grpc::ServerContext* /*context*/, const ::sonet::user::UpdateUserProfileRequest* /*request*/, ::sonet::user::UpdateUserProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateUserProfile(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RegisterUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RegisterUser() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::user::RegisterUserRequest, ::sonet::user::RegisterUserResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::user::RegisterUserRequest, ::sonet::user::RegisterUserResponse>* streamer) {
                       return this->StreamedRegisterUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RegisterUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RegisterUser(::grpc::ServerContext* /*context*/, const ::sonet::user::RegisterUserRequest* /*request*/, ::sonet::user::RegisterUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRegisterUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::user::RegisterUserRequest,::sonet::user::RegisterUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_LoginUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_LoginUser() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::user::LoginUserRequest, ::sonet::user::LoginUserResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::user::LoginUserRequest, ::sonet::user::LoginUserResponse>* streamer) {
                       return this->StreamedLoginUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_LoginUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status LoginUser(::grpc::ServerContext* /*context*/, const ::sonet::user::LoginUserRequest* /*request*/, ::sonet::user::LoginUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedLoginUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::user::LoginUserRequest,::sonet::user::LoginUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_LogoutUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_LogoutUser() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::user::LogoutRequest, ::sonet::user::LogoutResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::user::LogoutRequest, ::sonet::user::LogoutResponse>* streamer) {
                       return this->StreamedLogoutUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_LogoutUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status LogoutUser(::grpc::ServerContext* /*context*/, const ::sonet::user::LogoutRequest* /*request*/, ::sonet::user::LogoutResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedLogoutUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::user::LogoutRequest,::sonet::user::LogoutResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_VerifyToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_VerifyToken() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::user::VerifyTokenRequest, ::sonet::user::VerifyTokenResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::user::VerifyTokenRequest, ::sonet::user::VerifyTokenResponse>* streamer) {
                       return this->StreamedVerifyToken(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_VerifyToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status VerifyToken(::grpc::ServerContext* /*context*/, const ::sonet::user::VerifyTokenRequest* /*request*/, ::sonet::user::VerifyTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedVerifyToken(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::user::VerifyTokenRequest,::sonet::user::VerifyTokenResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RefreshToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RefreshToken() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::user::RefreshTokenRequest, ::sonet::user::RefreshTokenResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::user::RefreshTokenRequest, ::sonet::user::RefreshTokenResponse>* streamer) {
                       return this->StreamedRefreshToken(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RefreshToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RefreshToken(::grpc::ServerContext* /*context*/, const ::sonet::user::RefreshTokenRequest* /*request*/, ::sonet::user::RefreshTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRefreshToken(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::user::RefreshTokenRequest,::sonet::user::RefreshTokenResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ChangePassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ChangePassword() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::user::ChangePasswordRequest, ::sonet::user::ChangePasswordResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::user::ChangePasswordRequest, ::sonet::user::ChangePasswordResponse>* streamer) {
                       return this->StreamedChangePassword(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ChangePassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ChangePassword(::grpc::ServerContext* /*context*/, const ::sonet::user::ChangePasswordRequest* /*request*/, ::sonet::user::ChangePasswordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedChangePassword(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::user::ChangePasswordRequest,::sonet::user::ChangePasswordResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ResetPassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ResetPassword() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::user::ResetPasswordRequest, ::sonet::user::ResetPasswordResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::user::ResetPasswordRequest, ::sonet::user::ResetPasswordResponse>* streamer) {
                       return this->StreamedResetPassword(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ResetPassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ResetPassword(::grpc::ServerContext* /*context*/, const ::sonet::user::ResetPasswordRequest* /*request*/, ::sonet::user::ResetPasswordResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedResetPassword(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::user::ResetPasswordRequest,::sonet::user::ResetPasswordResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ConfirmPasswordReset : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ConfirmPasswordReset() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::user::ConfirmPasswordResetRequest, ::sonet::user::ConfirmPasswordResetResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::user::ConfirmPasswordResetRequest, ::sonet::user::ConfirmPasswordResetResponse>* streamer) {
                       return this->StreamedConfirmPasswordReset(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ConfirmPasswordReset() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ConfirmPasswordReset(::grpc::ServerContext* /*context*/, const ::sonet::user::ConfirmPasswordResetRequest* /*request*/, ::sonet::user::ConfirmPasswordResetResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedConfirmPasswordReset(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::user::ConfirmPasswordResetRequest,::sonet::user::ConfirmPasswordResetResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_VerifyEmail : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_VerifyEmail() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::user::VerifyEmailRequest, ::sonet::user::VerifyEmailResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::user::VerifyEmailRequest, ::sonet::user::VerifyEmailResponse>* streamer) {
                       return this->StreamedVerifyEmail(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_VerifyEmail() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status VerifyEmail(::grpc::ServerContext* /*context*/, const ::sonet::user::VerifyEmailRequest* /*request*/, ::sonet::user::VerifyEmailResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedVerifyEmail(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::user::VerifyEmailRequest,::sonet::user::VerifyEmailResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ResendVerification : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ResendVerification() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::user::ResendVerificationRequest, ::sonet::user::ResendVerificationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::user::ResendVerificationRequest, ::sonet::user::ResendVerificationResponse>* streamer) {
                       return this->StreamedResendVerification(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ResendVerification() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ResendVerification(::grpc::ServerContext* /*context*/, const ::sonet::user::ResendVerificationRequest* /*request*/, ::sonet::user::ResendVerificationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedResendVerification(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::user::ResendVerificationRequest,::sonet::user::ResendVerificationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetupTwoFactor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetupTwoFactor() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::user::SetupTwoFactorRequest, ::sonet::user::SetupTwoFactorResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::user::SetupTwoFactorRequest, ::sonet::user::SetupTwoFactorResponse>* streamer) {
                       return this->StreamedSetupTwoFactor(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetupTwoFactor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetupTwoFactor(::grpc::ServerContext* /*context*/, const ::sonet::user::SetupTwoFactorRequest* /*request*/, ::sonet::user::SetupTwoFactorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetupTwoFactor(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::user::SetupTwoFactorRequest,::sonet::user::SetupTwoFactorResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_VerifyTwoFactor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_VerifyTwoFactor() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::user::VerifyTwoFactorRequest, ::sonet::user::VerifyTwoFactorResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::user::VerifyTwoFactorRequest, ::sonet::user::VerifyTwoFactorResponse>* streamer) {
                       return this->StreamedVerifyTwoFactor(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_VerifyTwoFactor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status VerifyTwoFactor(::grpc::ServerContext* /*context*/, const ::sonet::user::VerifyTwoFactorRequest* /*request*/, ::sonet::user::VerifyTwoFactorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedVerifyTwoFactor(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::user::VerifyTwoFactorRequest,::sonet::user::VerifyTwoFactorResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DisableTwoFactor : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DisableTwoFactor() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::user::DisableTwoFactorRequest, ::sonet::user::DisableTwoFactorResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::user::DisableTwoFactorRequest, ::sonet::user::DisableTwoFactorResponse>* streamer) {
                       return this->StreamedDisableTwoFactor(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DisableTwoFactor() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DisableTwoFactor(::grpc::ServerContext* /*context*/, const ::sonet::user::DisableTwoFactorRequest* /*request*/, ::sonet::user::DisableTwoFactorResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDisableTwoFactor(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::user::DisableTwoFactorRequest,::sonet::user::DisableTwoFactorResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetActiveSessions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetActiveSessions() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::user::GetActiveSessionsRequest, ::sonet::user::GetActiveSessionsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::user::GetActiveSessionsRequest, ::sonet::user::GetActiveSessionsResponse>* streamer) {
                       return this->StreamedGetActiveSessions(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetActiveSessions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetActiveSessions(::grpc::ServerContext* /*context*/, const ::sonet::user::GetActiveSessionsRequest* /*request*/, ::sonet::user::GetActiveSessionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetActiveSessions(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::user::GetActiveSessionsRequest,::sonet::user::GetActiveSessionsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_TerminateSession : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_TerminateSession() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::user::TerminateSessionRequest, ::sonet::user::TerminateSessionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::user::TerminateSessionRequest, ::sonet::user::TerminateSessionResponse>* streamer) {
                       return this->StreamedTerminateSession(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_TerminateSession() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status TerminateSession(::grpc::ServerContext* /*context*/, const ::sonet::user::TerminateSessionRequest* /*request*/, ::sonet::user::TerminateSessionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedTerminateSession(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::user::TerminateSessionRequest,::sonet::user::TerminateSessionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetUserProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetUserProfile() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::user::GetUserProfileRequest, ::sonet::user::GetUserProfileResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::user::GetUserProfileRequest, ::sonet::user::GetUserProfileResponse>* streamer) {
                       return this->StreamedGetUserProfile(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetUserProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetUserProfile(::grpc::ServerContext* /*context*/, const ::sonet::user::GetUserProfileRequest* /*request*/, ::sonet::user::GetUserProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetUserProfile(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::user::GetUserProfileRequest,::sonet::user::GetUserProfileResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateUserProfile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateUserProfile() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::user::UpdateUserProfileRequest, ::sonet::user::UpdateUserProfileResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::user::UpdateUserProfileRequest, ::sonet::user::UpdateUserProfileResponse>* streamer) {
                       return this->StreamedUpdateUserProfile(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateUserProfile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateUserProfile(::grpc::ServerContext* /*context*/, const ::sonet::user::UpdateUserProfileRequest* /*request*/, ::sonet::user::UpdateUserProfileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateUserProfile(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::user::UpdateUserProfileRequest,::sonet::user::UpdateUserProfileResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_RegisterUser<WithStreamedUnaryMethod_LoginUser<WithStreamedUnaryMethod_LogoutUser<WithStreamedUnaryMethod_VerifyToken<WithStreamedUnaryMethod_RefreshToken<WithStreamedUnaryMethod_ChangePassword<WithStreamedUnaryMethod_ResetPassword<WithStreamedUnaryMethod_ConfirmPasswordReset<WithStreamedUnaryMethod_VerifyEmail<WithStreamedUnaryMethod_ResendVerification<WithStreamedUnaryMethod_SetupTwoFactor<WithStreamedUnaryMethod_VerifyTwoFactor<WithStreamedUnaryMethod_DisableTwoFactor<WithStreamedUnaryMethod_GetActiveSessions<WithStreamedUnaryMethod_TerminateSession<WithStreamedUnaryMethod_GetUserProfile<WithStreamedUnaryMethod_UpdateUserProfile<Service > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_RegisterUser<WithStreamedUnaryMethod_LoginUser<WithStreamedUnaryMethod_LogoutUser<WithStreamedUnaryMethod_VerifyToken<WithStreamedUnaryMethod_RefreshToken<WithStreamedUnaryMethod_ChangePassword<WithStreamedUnaryMethod_ResetPassword<WithStreamedUnaryMethod_ConfirmPasswordReset<WithStreamedUnaryMethod_VerifyEmail<WithStreamedUnaryMethod_ResendVerification<WithStreamedUnaryMethod_SetupTwoFactor<WithStreamedUnaryMethod_VerifyTwoFactor<WithStreamedUnaryMethod_DisableTwoFactor<WithStreamedUnaryMethod_GetActiveSessions<WithStreamedUnaryMethod_TerminateSession<WithStreamedUnaryMethod_GetUserProfile<WithStreamedUnaryMethod_UpdateUserProfile<Service > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace user
}  // namespace sonet


#endif  // GRPC_services_2fuser_2eproto__INCLUDED
