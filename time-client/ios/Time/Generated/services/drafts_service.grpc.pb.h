// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: services/drafts_service.proto
#ifndef GRPC_services_2fdrafts_5fservice_2eproto__INCLUDED
#define GRPC_services_2fdrafts_5fservice_2eproto__INCLUDED

#include "services/drafts_service.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace sonet {
namespace drafts {
namespace v1 {

// Drafts Service
class DraftsService final {
 public:
  static constexpr char const* service_full_name() {
    return "sonet.drafts.v1.DraftsService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Create a new draft
    virtual ::grpc::Status CreateDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::CreateDraftRequest& request, ::sonet::drafts::v1::CreateDraftResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::CreateDraftResponse>> AsyncCreateDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::CreateDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::CreateDraftResponse>>(AsyncCreateDraftRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::CreateDraftResponse>> PrepareAsyncCreateDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::CreateDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::CreateDraftResponse>>(PrepareAsyncCreateDraftRaw(context, request, cq));
    }
    // Get user drafts
    virtual ::grpc::Status GetUserDrafts(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetUserDraftsRequest& request, ::sonet::drafts::v1::GetUserDraftsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::GetUserDraftsResponse>> AsyncGetUserDrafts(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetUserDraftsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::GetUserDraftsResponse>>(AsyncGetUserDraftsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::GetUserDraftsResponse>> PrepareAsyncGetUserDrafts(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetUserDraftsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::GetUserDraftsResponse>>(PrepareAsyncGetUserDraftsRaw(context, request, cq));
    }
    // Get a specific draft
    virtual ::grpc::Status GetDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetDraftRequest& request, ::sonet::drafts::v1::GetDraftResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::GetDraftResponse>> AsyncGetDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::GetDraftResponse>>(AsyncGetDraftRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::GetDraftResponse>> PrepareAsyncGetDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::GetDraftResponse>>(PrepareAsyncGetDraftRaw(context, request, cq));
    }
    // Update a draft
    virtual ::grpc::Status UpdateDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::UpdateDraftRequest& request, ::sonet::drafts::v1::UpdateDraftResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::UpdateDraftResponse>> AsyncUpdateDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::UpdateDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::UpdateDraftResponse>>(AsyncUpdateDraftRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::UpdateDraftResponse>> PrepareAsyncUpdateDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::UpdateDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::UpdateDraftResponse>>(PrepareAsyncUpdateDraftRaw(context, request, cq));
    }
    // Delete a draft
    virtual ::grpc::Status DeleteDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::DeleteDraftRequest& request, ::sonet::drafts::v1::DeleteDraftResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::DeleteDraftResponse>> AsyncDeleteDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::DeleteDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::DeleteDraftResponse>>(AsyncDeleteDraftRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::DeleteDraftResponse>> PrepareAsyncDeleteDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::DeleteDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::DeleteDraftResponse>>(PrepareAsyncDeleteDraftRaw(context, request, cq));
    }
    // Auto-save a draft
    virtual ::grpc::Status AutoSaveDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::AutoSaveDraftRequest& request, ::sonet::drafts::v1::AutoSaveDraftResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::AutoSaveDraftResponse>> AsyncAutoSaveDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::AutoSaveDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::AutoSaveDraftResponse>>(AsyncAutoSaveDraftRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::AutoSaveDraftResponse>> PrepareAsyncAutoSaveDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::AutoSaveDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::AutoSaveDraftResponse>>(PrepareAsyncAutoSaveDraftRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Create a new draft
      virtual void CreateDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::CreateDraftRequest* request, ::sonet::drafts::v1::CreateDraftResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::CreateDraftRequest* request, ::sonet::drafts::v1::CreateDraftResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get user drafts
      virtual void GetUserDrafts(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetUserDraftsRequest* request, ::sonet::drafts::v1::GetUserDraftsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetUserDrafts(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetUserDraftsRequest* request, ::sonet::drafts::v1::GetUserDraftsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get a specific draft
      virtual void GetDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetDraftRequest* request, ::sonet::drafts::v1::GetDraftResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetDraftRequest* request, ::sonet::drafts::v1::GetDraftResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Update a draft
      virtual void UpdateDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::UpdateDraftRequest* request, ::sonet::drafts::v1::UpdateDraftResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::UpdateDraftRequest* request, ::sonet::drafts::v1::UpdateDraftResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Delete a draft
      virtual void DeleteDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::DeleteDraftRequest* request, ::sonet::drafts::v1::DeleteDraftResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::DeleteDraftRequest* request, ::sonet::drafts::v1::DeleteDraftResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Auto-save a draft
      virtual void AutoSaveDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::AutoSaveDraftRequest* request, ::sonet::drafts::v1::AutoSaveDraftResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AutoSaveDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::AutoSaveDraftRequest* request, ::sonet::drafts::v1::AutoSaveDraftResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::CreateDraftResponse>* AsyncCreateDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::CreateDraftRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::CreateDraftResponse>* PrepareAsyncCreateDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::CreateDraftRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::GetUserDraftsResponse>* AsyncGetUserDraftsRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetUserDraftsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::GetUserDraftsResponse>* PrepareAsyncGetUserDraftsRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetUserDraftsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::GetDraftResponse>* AsyncGetDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetDraftRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::GetDraftResponse>* PrepareAsyncGetDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetDraftRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::UpdateDraftResponse>* AsyncUpdateDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::UpdateDraftRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::UpdateDraftResponse>* PrepareAsyncUpdateDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::UpdateDraftRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::DeleteDraftResponse>* AsyncDeleteDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::DeleteDraftRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::DeleteDraftResponse>* PrepareAsyncDeleteDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::DeleteDraftRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::AutoSaveDraftResponse>* AsyncAutoSaveDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::AutoSaveDraftRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::drafts::v1::AutoSaveDraftResponse>* PrepareAsyncAutoSaveDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::AutoSaveDraftRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status CreateDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::CreateDraftRequest& request, ::sonet::drafts::v1::CreateDraftResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::CreateDraftResponse>> AsyncCreateDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::CreateDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::CreateDraftResponse>>(AsyncCreateDraftRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::CreateDraftResponse>> PrepareAsyncCreateDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::CreateDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::CreateDraftResponse>>(PrepareAsyncCreateDraftRaw(context, request, cq));
    }
    ::grpc::Status GetUserDrafts(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetUserDraftsRequest& request, ::sonet::drafts::v1::GetUserDraftsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::GetUserDraftsResponse>> AsyncGetUserDrafts(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetUserDraftsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::GetUserDraftsResponse>>(AsyncGetUserDraftsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::GetUserDraftsResponse>> PrepareAsyncGetUserDrafts(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetUserDraftsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::GetUserDraftsResponse>>(PrepareAsyncGetUserDraftsRaw(context, request, cq));
    }
    ::grpc::Status GetDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetDraftRequest& request, ::sonet::drafts::v1::GetDraftResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::GetDraftResponse>> AsyncGetDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::GetDraftResponse>>(AsyncGetDraftRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::GetDraftResponse>> PrepareAsyncGetDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::GetDraftResponse>>(PrepareAsyncGetDraftRaw(context, request, cq));
    }
    ::grpc::Status UpdateDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::UpdateDraftRequest& request, ::sonet::drafts::v1::UpdateDraftResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::UpdateDraftResponse>> AsyncUpdateDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::UpdateDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::UpdateDraftResponse>>(AsyncUpdateDraftRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::UpdateDraftResponse>> PrepareAsyncUpdateDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::UpdateDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::UpdateDraftResponse>>(PrepareAsyncUpdateDraftRaw(context, request, cq));
    }
    ::grpc::Status DeleteDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::DeleteDraftRequest& request, ::sonet::drafts::v1::DeleteDraftResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::DeleteDraftResponse>> AsyncDeleteDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::DeleteDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::DeleteDraftResponse>>(AsyncDeleteDraftRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::DeleteDraftResponse>> PrepareAsyncDeleteDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::DeleteDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::DeleteDraftResponse>>(PrepareAsyncDeleteDraftRaw(context, request, cq));
    }
    ::grpc::Status AutoSaveDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::AutoSaveDraftRequest& request, ::sonet::drafts::v1::AutoSaveDraftResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::AutoSaveDraftResponse>> AsyncAutoSaveDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::AutoSaveDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::AutoSaveDraftResponse>>(AsyncAutoSaveDraftRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::AutoSaveDraftResponse>> PrepareAsyncAutoSaveDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::AutoSaveDraftRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::AutoSaveDraftResponse>>(PrepareAsyncAutoSaveDraftRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void CreateDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::CreateDraftRequest* request, ::sonet::drafts::v1::CreateDraftResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::CreateDraftRequest* request, ::sonet::drafts::v1::CreateDraftResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetUserDrafts(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetUserDraftsRequest* request, ::sonet::drafts::v1::GetUserDraftsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetUserDrafts(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetUserDraftsRequest* request, ::sonet::drafts::v1::GetUserDraftsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetDraftRequest* request, ::sonet::drafts::v1::GetDraftResponse* response, std::function<void(::grpc::Status)>) override;
      void GetDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetDraftRequest* request, ::sonet::drafts::v1::GetDraftResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::UpdateDraftRequest* request, ::sonet::drafts::v1::UpdateDraftResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::UpdateDraftRequest* request, ::sonet::drafts::v1::UpdateDraftResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::DeleteDraftRequest* request, ::sonet::drafts::v1::DeleteDraftResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::DeleteDraftRequest* request, ::sonet::drafts::v1::DeleteDraftResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AutoSaveDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::AutoSaveDraftRequest* request, ::sonet::drafts::v1::AutoSaveDraftResponse* response, std::function<void(::grpc::Status)>) override;
      void AutoSaveDraft(::grpc::ClientContext* context, const ::sonet::drafts::v1::AutoSaveDraftRequest* request, ::sonet::drafts::v1::AutoSaveDraftResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::CreateDraftResponse>* AsyncCreateDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::CreateDraftRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::CreateDraftResponse>* PrepareAsyncCreateDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::CreateDraftRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::GetUserDraftsResponse>* AsyncGetUserDraftsRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetUserDraftsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::GetUserDraftsResponse>* PrepareAsyncGetUserDraftsRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetUserDraftsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::GetDraftResponse>* AsyncGetDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetDraftRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::GetDraftResponse>* PrepareAsyncGetDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::GetDraftRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::UpdateDraftResponse>* AsyncUpdateDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::UpdateDraftRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::UpdateDraftResponse>* PrepareAsyncUpdateDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::UpdateDraftRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::DeleteDraftResponse>* AsyncDeleteDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::DeleteDraftRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::DeleteDraftResponse>* PrepareAsyncDeleteDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::DeleteDraftRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::AutoSaveDraftResponse>* AsyncAutoSaveDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::AutoSaveDraftRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::drafts::v1::AutoSaveDraftResponse>* PrepareAsyncAutoSaveDraftRaw(::grpc::ClientContext* context, const ::sonet::drafts::v1::AutoSaveDraftRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateDraft_;
    const ::grpc::internal::RpcMethod rpcmethod_GetUserDrafts_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDraft_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateDraft_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteDraft_;
    const ::grpc::internal::RpcMethod rpcmethod_AutoSaveDraft_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Create a new draft
    virtual ::grpc::Status CreateDraft(::grpc::ServerContext* context, const ::sonet::drafts::v1::CreateDraftRequest* request, ::sonet::drafts::v1::CreateDraftResponse* response);
    // Get user drafts
    virtual ::grpc::Status GetUserDrafts(::grpc::ServerContext* context, const ::sonet::drafts::v1::GetUserDraftsRequest* request, ::sonet::drafts::v1::GetUserDraftsResponse* response);
    // Get a specific draft
    virtual ::grpc::Status GetDraft(::grpc::ServerContext* context, const ::sonet::drafts::v1::GetDraftRequest* request, ::sonet::drafts::v1::GetDraftResponse* response);
    // Update a draft
    virtual ::grpc::Status UpdateDraft(::grpc::ServerContext* context, const ::sonet::drafts::v1::UpdateDraftRequest* request, ::sonet::drafts::v1::UpdateDraftResponse* response);
    // Delete a draft
    virtual ::grpc::Status DeleteDraft(::grpc::ServerContext* context, const ::sonet::drafts::v1::DeleteDraftRequest* request, ::sonet::drafts::v1::DeleteDraftResponse* response);
    // Auto-save a draft
    virtual ::grpc::Status AutoSaveDraft(::grpc::ServerContext* context, const ::sonet::drafts::v1::AutoSaveDraftRequest* request, ::sonet::drafts::v1::AutoSaveDraftResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateDraft() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::CreateDraftRequest* /*request*/, ::sonet::drafts::v1::CreateDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateDraft(::grpc::ServerContext* context, ::sonet::drafts::v1::CreateDraftRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::drafts::v1::CreateDraftResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetUserDrafts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetUserDrafts() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetUserDrafts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserDrafts(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::GetUserDraftsRequest* /*request*/, ::sonet::drafts::v1::GetUserDraftsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUserDrafts(::grpc::ServerContext* context, ::sonet::drafts::v1::GetUserDraftsRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::drafts::v1::GetUserDraftsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDraft() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::GetDraftRequest* /*request*/, ::sonet::drafts::v1::GetDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDraft(::grpc::ServerContext* context, ::sonet::drafts::v1::GetDraftRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::drafts::v1::GetDraftResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateDraft() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_UpdateDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::UpdateDraftRequest* /*request*/, ::sonet::drafts::v1::UpdateDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateDraft(::grpc::ServerContext* context, ::sonet::drafts::v1::UpdateDraftRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::drafts::v1::UpdateDraftResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteDraft() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_DeleteDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::DeleteDraftRequest* /*request*/, ::sonet::drafts::v1::DeleteDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteDraft(::grpc::ServerContext* context, ::sonet::drafts::v1::DeleteDraftRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::drafts::v1::DeleteDraftResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AutoSaveDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AutoSaveDraft() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_AutoSaveDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AutoSaveDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::AutoSaveDraftRequest* /*request*/, ::sonet::drafts::v1::AutoSaveDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAutoSaveDraft(::grpc::ServerContext* context, ::sonet::drafts::v1::AutoSaveDraftRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::drafts::v1::AutoSaveDraftResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateDraft<WithAsyncMethod_GetUserDrafts<WithAsyncMethod_GetDraft<WithAsyncMethod_UpdateDraft<WithAsyncMethod_DeleteDraft<WithAsyncMethod_AutoSaveDraft<Service > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_CreateDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateDraft() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::drafts::v1::CreateDraftRequest, ::sonet::drafts::v1::CreateDraftResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::drafts::v1::CreateDraftRequest* request, ::sonet::drafts::v1::CreateDraftResponse* response) { return this->CreateDraft(context, request, response); }));}
    void SetMessageAllocatorFor_CreateDraft(
        ::grpc::MessageAllocator< ::sonet::drafts::v1::CreateDraftRequest, ::sonet::drafts::v1::CreateDraftResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::drafts::v1::CreateDraftRequest, ::sonet::drafts::v1::CreateDraftResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::CreateDraftRequest* /*request*/, ::sonet::drafts::v1::CreateDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateDraft(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::drafts::v1::CreateDraftRequest* /*request*/, ::sonet::drafts::v1::CreateDraftResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetUserDrafts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetUserDrafts() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::drafts::v1::GetUserDraftsRequest, ::sonet::drafts::v1::GetUserDraftsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::drafts::v1::GetUserDraftsRequest* request, ::sonet::drafts::v1::GetUserDraftsResponse* response) { return this->GetUserDrafts(context, request, response); }));}
    void SetMessageAllocatorFor_GetUserDrafts(
        ::grpc::MessageAllocator< ::sonet::drafts::v1::GetUserDraftsRequest, ::sonet::drafts::v1::GetUserDraftsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::drafts::v1::GetUserDraftsRequest, ::sonet::drafts::v1::GetUserDraftsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetUserDrafts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserDrafts(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::GetUserDraftsRequest* /*request*/, ::sonet::drafts::v1::GetUserDraftsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUserDrafts(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::drafts::v1::GetUserDraftsRequest* /*request*/, ::sonet::drafts::v1::GetUserDraftsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetDraft() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::drafts::v1::GetDraftRequest, ::sonet::drafts::v1::GetDraftResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::drafts::v1::GetDraftRequest* request, ::sonet::drafts::v1::GetDraftResponse* response) { return this->GetDraft(context, request, response); }));}
    void SetMessageAllocatorFor_GetDraft(
        ::grpc::MessageAllocator< ::sonet::drafts::v1::GetDraftRequest, ::sonet::drafts::v1::GetDraftResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::drafts::v1::GetDraftRequest, ::sonet::drafts::v1::GetDraftResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::GetDraftRequest* /*request*/, ::sonet::drafts::v1::GetDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDraft(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::drafts::v1::GetDraftRequest* /*request*/, ::sonet::drafts::v1::GetDraftResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateDraft() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::drafts::v1::UpdateDraftRequest, ::sonet::drafts::v1::UpdateDraftResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::drafts::v1::UpdateDraftRequest* request, ::sonet::drafts::v1::UpdateDraftResponse* response) { return this->UpdateDraft(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateDraft(
        ::grpc::MessageAllocator< ::sonet::drafts::v1::UpdateDraftRequest, ::sonet::drafts::v1::UpdateDraftResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::drafts::v1::UpdateDraftRequest, ::sonet::drafts::v1::UpdateDraftResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::UpdateDraftRequest* /*request*/, ::sonet::drafts::v1::UpdateDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateDraft(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::drafts::v1::UpdateDraftRequest* /*request*/, ::sonet::drafts::v1::UpdateDraftResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteDraft() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::drafts::v1::DeleteDraftRequest, ::sonet::drafts::v1::DeleteDraftResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::drafts::v1::DeleteDraftRequest* request, ::sonet::drafts::v1::DeleteDraftResponse* response) { return this->DeleteDraft(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteDraft(
        ::grpc::MessageAllocator< ::sonet::drafts::v1::DeleteDraftRequest, ::sonet::drafts::v1::DeleteDraftResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::drafts::v1::DeleteDraftRequest, ::sonet::drafts::v1::DeleteDraftResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::DeleteDraftRequest* /*request*/, ::sonet::drafts::v1::DeleteDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteDraft(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::drafts::v1::DeleteDraftRequest* /*request*/, ::sonet::drafts::v1::DeleteDraftResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AutoSaveDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AutoSaveDraft() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::drafts::v1::AutoSaveDraftRequest, ::sonet::drafts::v1::AutoSaveDraftResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::drafts::v1::AutoSaveDraftRequest* request, ::sonet::drafts::v1::AutoSaveDraftResponse* response) { return this->AutoSaveDraft(context, request, response); }));}
    void SetMessageAllocatorFor_AutoSaveDraft(
        ::grpc::MessageAllocator< ::sonet::drafts::v1::AutoSaveDraftRequest, ::sonet::drafts::v1::AutoSaveDraftResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::drafts::v1::AutoSaveDraftRequest, ::sonet::drafts::v1::AutoSaveDraftResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AutoSaveDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AutoSaveDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::AutoSaveDraftRequest* /*request*/, ::sonet::drafts::v1::AutoSaveDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AutoSaveDraft(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::drafts::v1::AutoSaveDraftRequest* /*request*/, ::sonet::drafts::v1::AutoSaveDraftResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_CreateDraft<WithCallbackMethod_GetUserDrafts<WithCallbackMethod_GetDraft<WithCallbackMethod_UpdateDraft<WithCallbackMethod_DeleteDraft<WithCallbackMethod_AutoSaveDraft<Service > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateDraft() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::CreateDraftRequest* /*request*/, ::sonet::drafts::v1::CreateDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetUserDrafts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetUserDrafts() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetUserDrafts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserDrafts(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::GetUserDraftsRequest* /*request*/, ::sonet::drafts::v1::GetUserDraftsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDraft() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::GetDraftRequest* /*request*/, ::sonet::drafts::v1::GetDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateDraft() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_UpdateDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::UpdateDraftRequest* /*request*/, ::sonet::drafts::v1::UpdateDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteDraft() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_DeleteDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::DeleteDraftRequest* /*request*/, ::sonet::drafts::v1::DeleteDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AutoSaveDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AutoSaveDraft() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_AutoSaveDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AutoSaveDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::AutoSaveDraftRequest* /*request*/, ::sonet::drafts::v1::AutoSaveDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateDraft() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::CreateDraftRequest* /*request*/, ::sonet::drafts::v1::CreateDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateDraft(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetUserDrafts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetUserDrafts() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetUserDrafts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserDrafts(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::GetUserDraftsRequest* /*request*/, ::sonet::drafts::v1::GetUserDraftsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUserDrafts(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDraft() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::GetDraftRequest* /*request*/, ::sonet::drafts::v1::GetDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDraft(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateDraft() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_UpdateDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::UpdateDraftRequest* /*request*/, ::sonet::drafts::v1::UpdateDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateDraft(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteDraft() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_DeleteDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::DeleteDraftRequest* /*request*/, ::sonet::drafts::v1::DeleteDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteDraft(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AutoSaveDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AutoSaveDraft() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_AutoSaveDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AutoSaveDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::AutoSaveDraftRequest* /*request*/, ::sonet::drafts::v1::AutoSaveDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAutoSaveDraft(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateDraft() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateDraft(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::CreateDraftRequest* /*request*/, ::sonet::drafts::v1::CreateDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateDraft(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetUserDrafts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetUserDrafts() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetUserDrafts(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetUserDrafts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUserDrafts(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::GetUserDraftsRequest* /*request*/, ::sonet::drafts::v1::GetUserDraftsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUserDrafts(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetDraft() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetDraft(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::GetDraftRequest* /*request*/, ::sonet::drafts::v1::GetDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDraft(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateDraft() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateDraft(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::UpdateDraftRequest* /*request*/, ::sonet::drafts::v1::UpdateDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateDraft(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteDraft() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteDraft(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::DeleteDraftRequest* /*request*/, ::sonet::drafts::v1::DeleteDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteDraft(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AutoSaveDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AutoSaveDraft() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AutoSaveDraft(context, request, response); }));
    }
    ~WithRawCallbackMethod_AutoSaveDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AutoSaveDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::AutoSaveDraftRequest* /*request*/, ::sonet::drafts::v1::AutoSaveDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AutoSaveDraft(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateDraft() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::drafts::v1::CreateDraftRequest, ::sonet::drafts::v1::CreateDraftResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::drafts::v1::CreateDraftRequest, ::sonet::drafts::v1::CreateDraftResponse>* streamer) {
                       return this->StreamedCreateDraft(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::CreateDraftRequest* /*request*/, ::sonet::drafts::v1::CreateDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateDraft(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::drafts::v1::CreateDraftRequest,::sonet::drafts::v1::CreateDraftResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetUserDrafts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetUserDrafts() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::drafts::v1::GetUserDraftsRequest, ::sonet::drafts::v1::GetUserDraftsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::drafts::v1::GetUserDraftsRequest, ::sonet::drafts::v1::GetUserDraftsResponse>* streamer) {
                       return this->StreamedGetUserDrafts(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetUserDrafts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetUserDrafts(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::GetUserDraftsRequest* /*request*/, ::sonet::drafts::v1::GetUserDraftsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetUserDrafts(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::drafts::v1::GetUserDraftsRequest,::sonet::drafts::v1::GetUserDraftsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDraft() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::drafts::v1::GetDraftRequest, ::sonet::drafts::v1::GetDraftResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::drafts::v1::GetDraftRequest, ::sonet::drafts::v1::GetDraftResponse>* streamer) {
                       return this->StreamedGetDraft(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::GetDraftRequest* /*request*/, ::sonet::drafts::v1::GetDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDraft(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::drafts::v1::GetDraftRequest,::sonet::drafts::v1::GetDraftResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateDraft() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::drafts::v1::UpdateDraftRequest, ::sonet::drafts::v1::UpdateDraftResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::drafts::v1::UpdateDraftRequest, ::sonet::drafts::v1::UpdateDraftResponse>* streamer) {
                       return this->StreamedUpdateDraft(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::UpdateDraftRequest* /*request*/, ::sonet::drafts::v1::UpdateDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateDraft(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::drafts::v1::UpdateDraftRequest,::sonet::drafts::v1::UpdateDraftResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteDraft() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::drafts::v1::DeleteDraftRequest, ::sonet::drafts::v1::DeleteDraftResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::drafts::v1::DeleteDraftRequest, ::sonet::drafts::v1::DeleteDraftResponse>* streamer) {
                       return this->StreamedDeleteDraft(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::DeleteDraftRequest* /*request*/, ::sonet::drafts::v1::DeleteDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteDraft(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::drafts::v1::DeleteDraftRequest,::sonet::drafts::v1::DeleteDraftResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AutoSaveDraft : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AutoSaveDraft() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::drafts::v1::AutoSaveDraftRequest, ::sonet::drafts::v1::AutoSaveDraftResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::drafts::v1::AutoSaveDraftRequest, ::sonet::drafts::v1::AutoSaveDraftResponse>* streamer) {
                       return this->StreamedAutoSaveDraft(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AutoSaveDraft() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AutoSaveDraft(::grpc::ServerContext* /*context*/, const ::sonet::drafts::v1::AutoSaveDraftRequest* /*request*/, ::sonet::drafts::v1::AutoSaveDraftResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAutoSaveDraft(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::drafts::v1::AutoSaveDraftRequest,::sonet::drafts::v1::AutoSaveDraftResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateDraft<WithStreamedUnaryMethod_GetUserDrafts<WithStreamedUnaryMethod_GetDraft<WithStreamedUnaryMethod_UpdateDraft<WithStreamedUnaryMethod_DeleteDraft<WithStreamedUnaryMethod_AutoSaveDraft<Service > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateDraft<WithStreamedUnaryMethod_GetUserDrafts<WithStreamedUnaryMethod_GetDraft<WithStreamedUnaryMethod_UpdateDraft<WithStreamedUnaryMethod_DeleteDraft<WithStreamedUnaryMethod_AutoSaveDraft<Service > > > > > > StreamedService;
};

}  // namespace v1
}  // namespace drafts
}  // namespace sonet


#endif  // GRPC_services_2fdrafts_5fservice_2eproto__INCLUDED
