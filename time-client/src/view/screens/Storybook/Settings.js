import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { View } from 'react-native';
import * as Toast from '#/view/com/util/Toast';
import * as SettingsList from '#/screens/Settings/components/SettingsList';
import { atoms as a, useTheme } from '#/alf';
import { Alien_Stroke2_Corner0_Rounded as AlienIcon } from '#/components/icons/Alien';
import { BirthdayCake_Stroke2_Corner2_Rounded as BirthdayCakeIcon } from '#/components/icons/BirthdayCake';
import { BubbleInfo_Stroke2_Corner2_Rounded as BubbleInfoIcon } from '#/components/icons/BubbleInfo';
import { CircleQuestion_Stroke2_Corner2_Rounded as CircleQuestionIcon } from '#/components/icons/CircleQuestion';
import { Envelope_Stroke2_Corner2_Rounded as EnvelopeIcon } from '#/components/icons/Envelope';
import { Explosion_Stroke2_Corner0_Rounded as ExplosionIcon } from '#/components/icons/Explosion';
import { Earth_Stroke2_Corner2_Rounded as EarthIcon } from '#/components/icons/Globe';
import { PaintRoller_Stroke2_Corner2_Rounded as PaintRollerIcon } from '#/components/icons/PaintRoller';
import { Person_Stroke2_Corner2_Rounded as PersonIcon } from '#/components/icons/Person';
import { Pizza_Stroke2_Corner0_Rounded as PizzaIcon } from '#/components/icons/Pizza';
import { RaisingHand4Finger_Stroke2_Corner2_Rounded as HandIcon } from '#/components/icons/RaisingHand';
import { ShieldCheck_Stroke2_Corner0_Rounded as ShieldIcon } from '#/components/icons/Shield';
import { Window_Stroke2_Corner2_Rounded as WindowIcon } from '#/components/icons/Window';
import { Text } from '#/components/Typography';
export function Settings() {
    const t = useTheme();
    return (_jsxs(View, { style: { marginLeft: -20, marginRight: -20 }, children: [_jsx(Text, { style: { marginLeft: 20, paddingBottom: 12 }, children: "Settings" }), _jsxs(SettingsList.LinkItem, { to: "/settings", label: "Account", children: [_jsx(SettingsList.ItemIcon, { icon: PersonIcon }), _jsx(SettingsList.ItemText, { children: "Account" })] }), _jsxs(SettingsList.LinkItem, { to: "/settings", label: "Privacy and security", children: [_jsx(SettingsList.ItemIcon, { icon: PaintRollerIcon }), _jsx(SettingsList.ItemText, { children: "Privacy and security" })] }), _jsxs(SettingsList.LinkItem, { to: "/settings", label: "Moderation", children: [_jsx(SettingsList.ItemIcon, { icon: HandIcon }), _jsx(SettingsList.ItemText, { children: "Moderation" })] }), _jsxs(SettingsList.LinkItem, { to: "/settings", label: "Content and media", children: [_jsx(SettingsList.ItemIcon, { icon: WindowIcon }), _jsx(SettingsList.ItemText, { children: "Content and media" })] }), _jsxs(SettingsList.LinkItem, { to: "/settings", label: "Accessibility and appearance", children: [_jsx(SettingsList.ItemIcon, { icon: PaintRollerIcon }), _jsx(SettingsList.ItemText, { children: "Accessibilty and appearance" })] }), _jsxs(SettingsList.LinkItem, { to: "/settings", label: "Languages", children: [_jsx(SettingsList.ItemIcon, { icon: EarthIcon }), _jsx(SettingsList.ItemText, { children: "Languages" })] }), _jsxs(SettingsList.LinkItem, { to: "/settings", label: "Help", children: [_jsx(SettingsList.ItemIcon, { icon: CircleQuestionIcon }), _jsx(SettingsList.ItemText, { children: "Help" })] }), _jsxs(SettingsList.LinkItem, { to: "/settings", label: "About", children: [_jsx(SettingsList.ItemIcon, { icon: BubbleInfoIcon }), _jsx(SettingsList.ItemText, { children: "About" })] }), _jsx(SettingsList.Divider, {}), _jsx(SettingsList.PressableItem, { destructive: true, onPress: () => Toast.show('Sign out pressed'), label: "Sign out", children: _jsx(SettingsList.ItemText, { children: "Sign out" }) }), _jsxs(SettingsList.Item, { style: [a.mt_xl], children: [_jsx(SettingsList.ItemIcon, { icon: PizzaIcon }), _jsx(SettingsList.ItemText, { children: "Not pressable" })] }), _jsxs(SettingsList.PressableItem, { onPress: () => Toast.show('Pressable pressed'), label: "Pressable", children: [_jsx(SettingsList.ItemIcon, { icon: AlienIcon }), _jsx(SettingsList.ItemText, { children: "Pressable" })] }), _jsxs(SettingsList.LinkItem, { to: "/settings", label: "Destructive link", destructive: true, children: [_jsx(SettingsList.ItemIcon, { icon: ExplosionIcon }), _jsx(SettingsList.ItemText, { children: "Destructive link" })] }), _jsxs(SettingsList.PressableItem, { label: "Email", onPress: () => Toast.show('Email change dialog goes here'), children: [_jsx(SettingsList.ItemIcon, { icon: EnvelopeIcon }), _jsx(SettingsList.ItemText, { children: "Email" }), _jsx(SettingsList.BadgeText, { children: "hello@example.com" })] }), _jsxs(SettingsList.PressableItem, { onPress: () => Toast.show('Pressable pressed'), label: "Protect your account", style: [
                    a.my_sm,
                    a.mx_lg,
                    a.rounded_md,
                    { backgroundColor: t.palette.primary_50 },
                ], hoverStyle: [{ backgroundColor: t.palette.primary_100 }], contentContainerStyle: [a.rounded_md, a.px_lg], children: [_jsx(SettingsList.ItemIcon, { icon: ShieldIcon, color: t.palette.primary_500 }), _jsx(SettingsList.ItemText, { style: [{ color: t.palette.primary_500 }, a.font_bold], children: "Protect your account" }), _jsx(SettingsList.Chevron, { color: t.palette.primary_500 })] }), _jsx(SettingsList.Divider, {}), _jsxs(SettingsList.Item, { children: [_jsx(SettingsList.ItemIcon, { icon: BirthdayCakeIcon }), _jsx(SettingsList.ItemText, { children: "Birthday" }), _jsx(SettingsList.BadgeButton, { label: "Edit", onPress: () => Toast.show('Show edit birthday dialog') })] }), _jsxs(SettingsList.LinkItem, { to: "/settings", label: "Long test", children: [_jsx(SettingsList.ItemIcon, { icon: ExplosionIcon }), _jsx(SettingsList.ItemText, { children: "long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long long" })] })] }));
}
//# sourceMappingURL=Settings.js.map